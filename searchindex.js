Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.Specs", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.CSVLogger", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.MLFlowLogger", "reference/generated/torchrl.record.loggers.TensorboardLogger", "reference/generated/torchrl.record.loggers.WandbLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/index", "tutorials/multi_task", "tutorials/pretrained_models", "tutorials/sg_execution_times", "tutorials/tensordict_module", "tutorials/tensordict_tutorial", "tutorials/torch_envs", "tutorials/torchrl_demo"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.Specs.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.CSVLogger.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.WandbLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/pretrained_models.rst", "tutorials/sg_execution_times.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_tutorial.rst", "tutorials/torch_envs.rst", "tutorials/torchrl_demo.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips and Debugging", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "Specs", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "RSSMPosterior", "RSSMPrior", "TanhDelta", "TanhNormal", "TruncatedNormal", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "EGreedyWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticSequential", "SafeSequential", "ValueOperator", "WorldModelWrapper", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "CSVLogger", "Logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "generate_exp_name", "get_logger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "README Tutos", "Task-specific policy in multi-task environments", "Using pretrained models", "Computation times", "TensorDictModule", "TensorDict", "TorchRL envs", "Introduction to TorchRL"], "terms": {"The": [0, 1, 2, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 41, 44, 46, 47, 65, 68, 74, 77, 80, 82, 85, 89, 92, 100, 102, 103, 104, 105, 111, 113, 114, 116, 117, 121, 122, 127, 128, 134, 135, 137, 138, 140, 141, 142, 147, 151, 152, 153, 155, 156, 157, 159, 163, 168, 169, 170, 171, 181, 183, 184, 185, 188, 192, 216, 218, 219, 226, 228, 232, 234, 235, 236, 237], "tensordict": [0, 1, 3, 11, 12, 14, 15, 16, 19, 20, 21, 23, 27, 28, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 50, 57, 58, 59, 62, 63, 65, 66, 67, 68, 69, 73, 74, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 111, 113, 114, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 168, 169, 170, 171, 179, 188, 192, 195, 196, 201, 204, 206, 209, 211, 214, 222, 226, 228, 229, 230, 231, 232, 233, 234, 236], "class": [0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 218, 219, 220, 226, 228, 229, 234, 235, 236], "ha": [0, 4, 6, 7, 9, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 42, 44, 46, 47, 62, 85, 89, 131, 133, 138, 159, 228, 229, 231, 232, 234, 235, 236, 237], "been": [0, 4, 6, 7, 11, 12, 15, 41, 44, 46, 47, 88, 229, 231, 236], "move": [0, 23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 93, 112, 137, 194, 229, 236, 237], "out": [0, 3, 4, 23, 41, 44, 46, 47, 115, 116, 134, 137, 138, 166, 167, 226, 234, 235, 236, 237], "dedic": [0, 128, 129, 130, 228, 231], "librari": [0, 4, 5, 6, 7, 8, 9, 97, 222, 223, 227, 228, 236], "take": [0, 1, 3, 7, 16, 41, 44, 46, 47, 65, 83, 84, 86, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147, 149, 172, 173, 174, 175, 176, 177, 178, 188, 197, 226, 228, 229, 234, 236], "look": [0, 4, 6, 7, 23, 41, 44, 46, 47, 77, 138, 139, 140, 229, 232, 234, 236, 237], "find": [0, 5, 131, 133, 234], "sourc": [0, 1, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 228, 229, 230, 231, 232, 234, 235, 236, 237], "code": [0, 3, 4, 6, 7, 77, 140, 230, 231, 232, 233, 234, 236, 237], "github": [0, 2, 4, 5, 6, 9, 229, 232, 237], "ian": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 64, 69, 73, 74, 77, 78, 87, 88, 89, 93, 95, 101, 102, 103, 104, 105, 111, 112, 113, 115, 119, 128, 129, 130, 134, 137, 138, 139, 142, 145, 146, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 169, 170, 171, 180, 186, 192, 193, 196, 199, 204, 217, 218, 219, 220, 223, 228, 229, 231, 232, 234, 235, 236, 237], "open": [0, 4, 6, 10, 237], "reinforc": [0, 2, 3, 8, 62, 102, 103, 104, 105, 134, 143, 150, 154, 158, 162, 163, 164, 204, 222, 229, 237], "learn": [0, 2, 3, 6, 7, 8, 23, 62, 102, 103, 104, 105, 114, 116, 134, 143, 150, 154, 158, 161, 162, 163, 164, 204, 228, 229, 231, 236, 237], "rl": [0, 1, 2, 4, 7, 9, 11, 12, 14, 15, 45, 116, 127, 135, 141, 150, 160, 188, 223, 226, 228, 229, 232, 234, 235, 236], "pytorch": [0, 1, 2, 7, 87, 196, 226, 228, 232, 235, 236, 237], "It": [0, 2, 3, 6, 23, 27, 41, 44, 45, 46, 47, 55, 74, 89, 102, 104, 108, 121, 122, 134, 138, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 168, 169, 193, 211, 223, 228, 232, 234, 235, 236, 237], "provid": [0, 2, 3, 4, 7, 8, 14, 17, 21, 22, 23, 24, 25, 26, 27, 41, 44, 45, 46, 47, 63, 73, 74, 77, 81, 85, 89, 92, 93, 101, 111, 112, 113, 127, 131, 133, 135, 143, 163, 168, 169, 170, 171, 180, 187, 188, 199, 201, 209, 211, 214, 216, 223, 226, 228, 229, 231, 232, 234, 236, 237], "python": [0, 3, 4, 5, 6, 9, 226, 228, 229, 230, 231, 232, 234, 236, 237], "first": [0, 1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 44, 63, 70, 74, 77, 87, 89, 112, 115, 119, 137, 138, 156, 179, 195, 228, 229, 231, 232, 234, 235, 236, 237], "low": [0, 66, 228, 229, 237], "high": [0, 8, 66, 169, 172, 173, 176, 228, 229, 237], "level": [0, 19, 159, 228, 229, 237], "abstract": [0, 7, 18, 19, 20, 21, 29, 30, 31, 40, 41, 75, 113, 226, 235, 237], "ar": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 14, 15, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 65, 67, 69, 77, 81, 85, 88, 89, 92, 93, 99, 100, 105, 106, 111, 113, 116, 120, 122, 134, 137, 138, 139, 140, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 216, 220, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237], "intend": [0, 6, 11, 12, 14, 15, 66, 237], "effici": [0, 2, 7, 116, 228, 229, 231, 232, 235, 237], "modular": [0, 140, 237], "properli": [0, 235, 237], "test": [0, 3, 4, 95, 111, 193, 216, 234, 237], "aim": [0, 3, 6, 77, 92, 112, 198, 223, 228, 229, 237], "support": [0, 3, 19, 38, 88, 97, 132, 137, 140, 143, 154, 169, 170, 171, 183, 226, 234, 235, 237], "research": [0, 6, 8, 237], "most": [0, 3, 6, 7, 23, 66, 228, 229, 237], "written": [0, 3, 35, 41, 44, 46, 47, 62, 81, 86, 134, 137, 138, 150, 151, 159, 160, 168, 179, 180, 226, 228, 231, 234, 237], "highli": [0, 2, 236, 237], "wai": [0, 77, 92, 160, 229, 231, 232, 236, 237], "can": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 41, 42, 44, 46, 47, 62, 65, 73, 74, 77, 81, 85, 88, 89, 92, 93, 100, 110, 113, 114, 116, 117, 124, 125, 131, 137, 138, 139, 140, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 168, 169, 170, 171, 193, 201, 209, 211, 214, 218, 219, 220, 223, 226, 228, 229, 231, 232, 234, 236, 237], "easili": [0, 3, 6, 46, 47, 201, 209, 211, 214, 229, 235, 236, 237], "swap": [0, 3, 232, 237], "compon": [0, 2, 3, 35, 36, 37, 38, 143, 144, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 192, 196, 231, 232, 234, 237], "transform": [0, 7, 23, 25, 26, 27, 28, 42, 44, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 102, 108, 143, 144, 147, 149, 180, 201, 204, 206, 209, 211, 214, 220, 222, 229, 232], "them": [0, 6, 25, 26, 27, 28, 41, 42, 44, 46, 47, 48, 65, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147, 159, 180, 228, 229, 231, 232, 234, 235, 236, 237], "write": [0, 7, 23, 44, 76, 137, 138, 140, 152, 153, 161, 163, 168, 180, 226, 228, 229, 231, 232, 234, 235, 237], "new": [0, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 41, 44, 46, 47, 81, 88, 93, 99, 134, 137, 138, 142, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 228, 229, 234, 235, 236, 237], "ones": [0, 19, 23, 41, 44, 46, 47, 63, 65, 67, 74, 77, 85, 89, 92, 137, 228, 235, 236, 237], "littl": [0, 3, 236, 237], "effort": [0, 3, 237], "thi": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 23, 24, 25, 26, 27, 28, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 55, 62, 63, 65, 66, 69, 71, 74, 77, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 142, 143, 144, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 179, 188, 190, 193, 196, 197, 198, 199, 201, 209, 211, 214, 216, 220, 223, 226, 228, 229, 231, 232, 234, 236, 237], "repo": [0, 5, 223, 237], "attempt": [0, 131, 133, 237], "align": [0, 237], "exist": [0, 23, 41, 44, 46, 47, 63, 89, 199, 220, 234, 236, 237], "ecosystem": [0, 237], "dataset": [0, 25, 26, 27, 93, 232, 235, 236, 237], "pillar": [0, 237], "environ": [0, 1, 2, 3, 4, 7, 10, 11, 12, 14, 15, 23, 24, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 66, 67, 71, 73, 74, 77, 84, 88, 89, 93, 95, 100, 111, 113, 114, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 188, 190, 193, 198, 199, 201, 202, 203, 204, 206, 209, 211, 214, 216, 217, 218, 219, 220, 223, 230, 232, 233], "model": [0, 1, 3, 7, 8, 11, 12, 14, 15, 23, 41, 44, 45, 46, 47, 77, 92, 94, 101, 112, 113, 114, 128, 129, 130, 137, 142, 150, 155, 156, 157, 160, 161, 163, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 222, 223, 226, 230, 233, 234, 236], "data": [0, 3, 7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 74, 95, 100, 111, 114, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 152, 161, 163, 169, 170, 171, 188, 196, 197, 202, 216, 218, 219, 220, 222, 226, 229, 232, 234, 235, 236], "util": [0, 3, 11, 12, 14, 15, 16, 23, 41, 44, 46, 47, 77, 92, 95, 96, 97, 98, 99, 101, 147, 148, 149, 216, 222, 227, 228, 229, 234, 236, 237], "e": [0, 1, 3, 7, 9, 10, 11, 12, 14, 15, 19, 23, 24, 35, 36, 41, 42, 44, 46, 47, 63, 65, 77, 81, 85, 88, 89, 92, 95, 110, 114, 117, 124, 125, 137, 138, 144, 168, 169, 170, 171, 188, 198, 219, 228, 229, 232, 235, 236, 237], "g": [0, 1, 3, 7, 9, 10, 23, 24, 41, 42, 44, 46, 47, 63, 65, 77, 81, 85, 88, 89, 92, 95, 110, 114, 124, 125, 137, 138, 168, 174, 175, 177, 178, 219, 228, 229, 232, 236, 237], "collector": [0, 3, 11, 12, 13, 14, 15, 16, 134, 196, 197, 202, 203, 216, 218, 219, 222, 226, 229, 236, 237], "contain": [0, 3, 6, 11, 12, 14, 15, 19, 23, 25, 26, 27, 28, 29, 32, 38, 39, 40, 41, 44, 45, 46, 47, 48, 65, 77, 85, 89, 92, 93, 99, 100, 101, 112, 114, 137, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 168, 169, 170, 171, 187, 188, 198, 201, 204, 206, 209, 211, 214, 216, 217, 218, 219, 220, 226, 229, 232, 234, 236, 237], "etc": [0, 3, 6, 7, 23, 30, 31, 41, 44, 46, 47, 89, 112, 228, 235, 236, 237], "have": [0, 3, 4, 5, 6, 7, 11, 12, 15, 19, 21, 23, 38, 41, 44, 46, 47, 48, 62, 73, 74, 88, 89, 93, 95, 101, 111, 112, 139, 140, 151, 159, 160, 165, 188, 196, 226, 228, 229, 231, 232, 234, 235, 236, 237], "few": [0, 2, 7, 188, 229, 236, 237], "depend": [0, 3, 6, 7, 141, 160, 236, 237], "possibl": [0, 3, 20, 23, 24, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137, 193, 196, 228, 234, 235, 236, 237], "standard": [0, 74, 80, 93, 100, 108, 114, 115, 116, 131, 169, 170, 171, 228, 229, 237], "numpi": [0, 14, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 87, 196, 228, 229, 236, 237], "common": [0, 3, 44, 46, 47, 128, 129, 130, 145, 146, 216, 223, 226, 228, 231, 232, 234, 235, 236, 237], "openai": [0, 6, 53, 54, 236, 237], "gym": [0, 3, 7, 10, 11, 12, 14, 42, 44, 53, 54, 74, 85, 93, 201, 204, 206, 209, 211, 214, 216, 223, 228, 229, 232, 237], "onli": [0, 1, 6, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 46, 47, 48, 63, 65, 77, 85, 89, 92, 93, 111, 137, 138, 139, 140, 199, 226, 228, 229, 231, 234, 236, 237], "option": [0, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 35, 36, 41, 42, 44, 45, 46, 47, 48, 51, 58, 60, 61, 62, 63, 64, 67, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 152, 153, 155, 156, 157, 161, 162, 163, 168, 169, 170, 171, 174, 175, 177, 178, 179, 180, 181, 183, 188, 190, 191, 192, 193, 194, 196, 199, 201, 202, 203, 204, 205, 207, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 228, 229, 237], "On": [0, 6, 229, 235], "end": [0, 23, 25, 26, 27, 28, 41, 44, 46, 47, 89, 101, 113, 172, 173, 174, 175, 176, 177, 178, 228, 231, 232, 236, 237], "come": [0, 1, 3, 7, 46, 47, 127, 128, 129, 130, 135, 141, 228, 234, 236, 237], "set": [0, 1, 2, 3, 6, 8, 11, 12, 14, 15, 23, 24, 25, 26, 27, 28, 38, 41, 43, 44, 45, 46, 47, 63, 65, 77, 84, 85, 89, 92, 98, 113, 131, 137, 188, 193, 203, 220, 223, 227, 228, 229, 231, 232, 236, 237], "re": [0, 3, 7, 23, 41, 44, 46, 47, 138, 226, 229, 231, 234, 236, 237], "usabl": [0, 226, 237], "function": [0, 3, 7, 10, 16, 23, 35, 36, 37, 38, 41, 42, 44, 46, 47, 65, 83, 88, 89, 90, 91, 93, 95, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 117, 118, 119, 120, 121, 122, 125, 128, 129, 130, 131, 133, 134, 137, 138, 140, 141, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 201, 204, 206, 209, 211, 214, 216, 222, 228, 229, 231, 234, 235, 236], "cost": [0, 2, 20, 229], "return": [0, 3, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 61, 62, 63, 64, 65, 67, 68, 70, 72, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 96, 97, 99, 100, 102, 103, 104, 105, 106, 110, 111, 112, 113, 114, 117, 120, 121, 122, 123, 124, 125, 128, 129, 130, 132, 136, 137, 138, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 174, 175, 177, 178, 196, 198, 201, 202, 204, 206, 209, 211, 214, 216, 217, 218, 219, 220, 222, 226, 228, 229, 231, 232, 234, 235, 236, 237], "process": [0, 1, 2, 3, 4, 7, 11, 12, 15, 42, 46, 47, 93, 134, 226, 228, 229, 232, 236, 237], "good": [0, 1, 8, 236, 237], "runtim": [0, 3, 23, 41, 44, 46, 47], "perform": [0, 3, 7, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 65, 73, 83, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 117, 118, 119, 121, 122, 131, 133, 134, 147, 156, 160, 193, 196, 228, 229, 231, 235, 236], "introduct": [0, 230, 233, 236], "env": [0, 1, 2, 4, 5, 6, 7, 11, 12, 14, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 113, 114, 137, 179, 199, 201, 202, 203, 204, 206, 209, 211, 214, 216, 218, 219, 220, 222, 228, 229, 230, 231, 232, 233], "modul": [0, 3, 7, 10, 23, 41, 44, 45, 46, 47, 65, 77, 83, 85, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 158, 161, 162, 164, 166, 169, 170, 171, 196, 200, 205, 207, 208, 210, 213, 216, 222, 226, 228, 229, 231, 232, 234], "us": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 19, 20, 23, 25, 26, 27, 28, 32, 41, 42, 44, 45, 46, 47, 51, 63, 64, 66, 74, 77, 85, 87, 88, 89, 92, 93, 95, 98, 99, 100, 101, 102, 103, 108, 110, 112, 113, 114, 116, 117, 124, 125, 134, 137, 138, 142, 143, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 176, 186, 187, 193, 196, 197, 199, 202, 203, 204, 212, 216, 220, 223, 226, 227, 230, 231, 233, 235, 236], "object": [0, 3, 5, 11, 12, 14, 15, 19, 23, 35, 36, 37, 38, 41, 44, 46, 47, 77, 88, 89, 93, 114, 127, 128, 135, 137, 138, 139, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 199, 202, 203, 215, 216, 220, 222, 226, 229, 234, 236], "state": [0, 1, 3, 11, 12, 14, 15, 23, 41, 44, 45, 46, 47, 50, 57, 62, 63, 65, 68, 82, 84, 85, 88, 89, 91, 93, 94, 100, 108, 111, 112, 114, 118, 121, 122, 128, 137, 142, 161, 168, 169, 170, 171, 220, 228, 229, 236], "contribut": 0, "instal": [0, 4, 9, 196, 223, 236], "pretrain": [0, 230, 233], "improv": [0, 2, 71, 150], "structur": [0, 3, 6, 134, 169, 170, 171, 232], "dictionari": [0, 11, 12, 14, 15, 19, 23, 41, 44, 46, 47, 89, 138, 218, 219, 220, 226, 228, 236], "featur": [0, 3, 11, 12, 14, 15, 24, 41, 44, 46, 47, 62, 101, 108, 109, 112, 115, 116, 138, 169, 170, 171, 220, 228, 229, 234, 236], "tensor": [0, 3, 7, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 57, 58, 59, 62, 63, 65, 66, 70, 74, 77, 80, 85, 86, 87, 88, 89, 92, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 117, 120, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 147, 148, 152, 153, 156, 157, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 201, 204, 206, 209, 211, 214, 226, 228, 229, 231, 232, 234, 236, 237], "tensordictmodul": [0, 11, 12, 14, 15, 114, 137, 139, 228, 229, 230, 231, 232, 233], "exampl": [0, 3, 8, 9, 10, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 63, 65, 66, 67, 74, 77, 85, 87, 89, 92, 93, 99, 100, 101, 111, 112, 114, 117, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 146, 169, 170, 171, 188, 189, 190, 191, 192, 194, 195, 197, 201, 204, 206, 209, 211, 214, 216, 226, 228, 229, 230, 231, 232, 235, 236, 237], "do": [0, 3, 6, 11, 12, 14, 15, 44, 73, 99, 115, 129, 226, 228, 229, 231, 236, 237], "": [0, 1, 3, 5, 6, 7, 23, 25, 26, 27, 41, 44, 46, 47, 65, 77, 85, 89, 92, 93, 95, 101, 116, 131, 137, 138, 163, 169, 170, 171, 211, 214, 228, 229, 231, 232, 235, 236, 237], "don": [0, 5, 6, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 228, 235, 236, 237], "t": [0, 3, 5, 6, 7, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 41, 42, 44, 46, 47, 77, 86, 92, 93, 99, 137, 146, 152, 169, 170, 171, 196, 197, 220, 223, 228, 229, 231, 232, 236, 237], "showcas": 0, "implement": [0, 2, 3, 8, 10, 23, 38, 41, 44, 46, 47, 93, 110, 123, 124, 125, 150, 160, 163, 201, 209, 211, 214, 226, 228, 229, 237], "deepmind": [0, 6, 7, 8, 51, 52], "control": [0, 1, 3, 4, 7, 46, 47, 51, 52, 66, 102, 103, 104, 105, 113, 114, 122, 134, 137, 138, 139, 151, 159, 160, 164, 169, 172, 173, 176, 204, 226, 228], "devic": [0, 1, 2, 3, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 35, 36, 41, 43, 44, 45, 46, 47, 50, 57, 58, 59, 60, 65, 76, 77, 85, 87, 89, 92, 100, 101, 102, 103, 104, 105, 109, 111, 112, 114, 115, 116, 128, 129, 130, 132, 134, 135, 136, 137, 140, 141, 143, 144, 152, 197, 201, 204, 206, 209, 211, 212, 214, 228, 229, 231, 232, 234, 237], "run": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 15, 23, 41, 44, 45, 46, 47, 51, 52, 65, 73, 74, 83, 88, 89, 90, 91, 93, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 139, 140, 147, 193, 218, 219, 220, 223, 226, 228, 229, 231, 232, 234, 235, 237], "parallel": [0, 1, 3, 7, 11, 12, 15, 95, 150, 217, 218, 219, 220, 229], "vecnorm": [0, 42, 220, 222], "task": [0, 8, 46, 47, 51, 77, 92, 228, 229, 230, 233, 236, 237], "specif": [0, 4, 7, 27, 28, 44, 196, 222, 226, 230, 233], "polici": [0, 1, 2, 3, 7, 11, 12, 13, 14, 15, 41, 44, 45, 46, 47, 66, 98, 99, 116, 128, 129, 130, 131, 133, 134, 137, 138, 143, 144, 150, 151, 152, 159, 160, 161, 163, 193, 197, 201, 202, 203, 204, 206, 209, 216, 218, 219, 226, 229, 230, 232, 233, 234, 236, 237], "multi": [0, 3, 6, 8, 23, 41, 44, 46, 47, 111, 112, 228, 229, 230, 233, 237], "execut": [0, 1, 3, 5, 6, 7, 14, 23, 25, 26, 27, 28, 41, 42, 44, 45, 46, 47, 139, 140, 199, 220, 226, 229, 233, 234, 236], "divers": [0, 46, 47], "rollout": [0, 1, 3, 11, 12, 14, 15, 41, 44, 45, 46, 47, 58, 59, 95, 100, 114, 134, 150, 199, 228, 229, 232, 237], "ddpg": [0, 102, 103, 104, 105, 152, 158, 164, 204, 205, 222, 230, 233], "normal": [0, 74, 93, 101, 110, 112, 117, 124, 125, 131, 138, 151, 159, 160, 193, 194, 220, 226, 229, 236], "observ": [0, 2, 3, 7, 11, 12, 14, 29, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 57, 58, 59, 62, 63, 64, 65, 67, 68, 70, 72, 74, 75, 78, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93, 99, 102, 103, 104, 105, 111, 118, 119, 121, 127, 128, 129, 130, 132, 133, 134, 135, 136, 141, 142, 143, 144, 156, 169, 170, 171, 180, 201, 204, 206, 209, 211, 214, 216, 226, 229, 231, 234, 235, 236, 237], "build": [0, 3, 6, 16, 19, 23, 41, 44, 46, 47, 93, 100, 114, 138, 196, 200, 205, 207, 208, 210, 212, 213, 215, 226, 232, 234, 235, 236, 237], "evalu": [0, 23, 41, 44, 46, 47, 89, 106, 120, 125, 161, 202, 203, 229], "your": [0, 2, 3, 6, 7, 9, 23, 41, 44, 46, 47, 93, 220, 223, 229, 235, 237], "record": [0, 23, 41, 44, 46, 47, 160, 179, 180, 181, 182, 183, 184, 185, 186, 187, 216, 222, 226, 229], "replai": [0, 7, 14, 25, 26, 27, 28, 32, 33, 34, 38, 39, 46, 47, 152, 153, 161, 163, 196, 212, 216, 222, 226, 229, 232], "buffer": [0, 3, 7, 14, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 47, 65, 77, 85, 89, 92, 137, 140, 152, 153, 161, 163, 196, 212, 216, 222, 226, 229, 232, 234, 236], "hyperparamet": [0, 1], "initi": [0, 6, 11, 12, 14, 15, 23, 41, 44, 46, 47, 74, 77, 85, 88, 89, 94, 100, 114, 115, 116, 131, 133, 134, 159, 161, 163, 201, 204, 206, 209, 211, 214, 220, 229, 236], "time": [0, 3, 6, 7, 11, 12, 14, 15, 23, 41, 42, 44, 46, 47, 63, 85, 86, 93, 99, 108, 111, 134, 156, 161, 169, 170, 171, 196, 229, 231, 232, 234, 235, 236, 237], "train": [0, 1, 11, 12, 14, 15, 23, 41, 44, 46, 47, 71, 77, 89, 92, 102, 104, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 169, 196, 197, 216, 226, 232, 235, 236], "experi": [0, 3, 25, 32, 181, 183, 184, 185, 186, 187, 223], "result": [0, 1, 3, 6, 11, 12, 14, 15, 23, 25, 26, 27, 28, 41, 42, 44, 46, 47, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 93, 95, 99, 112, 144, 169, 172, 173, 174, 175, 176, 177, 178, 179, 197, 229, 232, 235, 236, 237], "sampl": [0, 2, 7, 8, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 41, 45, 96, 98, 100, 106, 110, 114, 120, 121, 124, 125, 131, 133, 134, 137, 138, 151, 152, 153, 159, 160, 188, 196, 198, 229, 232, 234, 236, 237], "trajectori": [0, 1, 11, 12, 14, 15, 16, 23, 41, 44, 46, 47, 88, 100, 114, 134, 160, 169, 171, 172, 173, 174, 175, 176, 177, 178, 188, 229, 236, 237], "td": [0, 19, 49, 50, 51, 52, 53, 54, 56, 57, 63, 66, 67, 74, 87, 89, 93, 99, 100, 113, 114, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 170, 171, 174, 175, 177, 178, 179, 188, 195, 201, 204, 206, 209, 211, 214, 234, 235, 236, 237], "lambda": [0, 11, 12, 14, 15, 42, 155, 157, 171, 174, 175, 177, 178, 216, 234, 235, 236, 237], "pixel": [0, 3, 6, 19, 62, 72, 77, 78, 87, 92, 102, 118, 119, 180, 201, 206, 209, 211, 214, 228, 230, 232, 233, 236, 237], "dqn": [0, 132, 136, 143, 153, 154, 158, 164, 206, 207, 222, 230, 233], "problem": [0, 6, 7, 14, 236], "deep": [0, 8, 62, 102, 103, 104, 105, 107, 134, 150, 158, 163, 164, 204, 228], "q": [0, 102, 103, 104, 105, 107, 109, 143, 144, 152, 153, 154, 158, 161, 163, 211, 214, 234], "network": [0, 1, 7, 23, 41, 44, 46, 47, 101, 102, 103, 104, 105, 107, 108, 109, 112, 116, 118, 119, 121, 122, 128, 129, 130, 137, 152, 153, 154, 158, 161, 163, 164, 166, 169, 170, 171, 201, 204, 209, 215, 216, 226, 228, 231, 234, 236], "regular": [0, 15, 137, 138, 144, 154, 197, 226, 228, 234, 235, 236], "conclus": 0, "api": [0, 3, 4, 77, 92, 226, 236, 237], "packag": [0, 5, 6, 9, 222, 223, 229, 236], "helper": [0, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 228, 237], "compos": [0, 3, 23, 25, 26, 27, 33, 34, 39, 41, 44, 46, 47, 88, 89, 93, 156, 201, 204, 206, 209, 211, 214, 222, 229, 231, 236, 237], "tensorspec": [0, 3, 13, 17, 18, 19, 20, 21, 22, 24, 30, 31, 41, 45, 61, 62, 63, 64, 65, 67, 68, 70, 72, 74, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 122, 127, 131, 133, 134, 135, 137, 138, 139, 222], "envbas": [0, 3, 11, 12, 14, 15, 42, 44, 46, 47, 48, 73, 88, 89, 93, 95, 100, 113, 114, 193, 199, 201, 202, 203, 204, 206, 209, 211, 214, 216, 218, 219, 220, 222], "gymlikeenv": [0, 222], "envmetadata": [0, 222], "spec": [0, 2, 3, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 43, 44, 45, 46, 47, 61, 62, 63, 64, 65, 67, 68, 70, 72, 74, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 95, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 143, 144, 201, 204, 206, 209, 211, 214, 222, 228, 229, 231, 237], "vector": [0, 7, 17, 24, 46, 47, 66, 102, 104, 112, 171, 177, 178, 222, 228, 229, 231, 232, 234, 236], "domain": [0, 2, 7, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 85, 137, 138, 139, 140, 222, 236, 237], "hook": [0, 23, 41, 44, 46, 47, 65, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 132, 133, 134, 136, 143, 144, 147, 190, 191, 193, 194, 196, 197, 222], "explor": [0, 1, 94, 116, 131, 133, 134, 137, 138, 150, 193, 202, 203, 216, 222, 228, 229], "planner": [0, 100, 114, 222], "distribut": [0, 2, 3, 8, 9, 74, 100, 106, 107, 108, 110, 114, 117, 120, 121, 122, 123, 124, 125, 131, 132, 138, 139, 143, 151, 154, 159, 160, 222, 226, 228, 229, 234, 236, 237], "sac": [0, 161, 163, 213, 214, 222], "redq": [0, 161, 210, 211, 222], "ppo": [0, 7, 138, 151, 159, 160, 201, 208, 209, 222], "a2c": [0, 150, 200, 222], "dreamer": [0, 60, 108, 155, 156, 157, 222], "trainer": [0, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 228], "checkpoint": [0, 222, 232], "builder": [0, 222, 229, 236], "logger": [0, 180, 181, 183, 184, 185, 186, 187, 191, 193, 196, 216, 220, 222], "_util": [0, 10, 222], "implement_for": [0, 222], "work": [0, 3, 6, 7, 23, 41, 44, 46, 47, 63, 77, 93, 101, 112, 196, 223, 229, 231, 232, 234, 235, 236, 237], "what": [0, 7, 29, 41, 44, 46, 47, 85, 223, 229, 232, 234, 236, 237], "version": [0, 1, 5, 10, 23, 41, 44, 46, 47, 163, 171, 223, 228, 229, 232, 236], "habitat": [0, 55, 223, 232], "lab": [0, 3, 51, 52, 223], "up": [0, 1, 2, 3, 7, 8, 20, 223, 228, 229, 234, 236], "issu": [0, 4, 7, 137, 138, 223, 237], "about": [0, 4, 223, 228, 229, 236, 237], "mujoco": [0, 5, 7, 223], "prerequisit": 0, "render": [0, 7, 193, 223, 228, 229], "all": [0, 3, 7, 11, 12, 14, 15, 23, 41, 42, 44, 45, 46, 47, 48, 65, 69, 74, 77, 81, 83, 85, 86, 88, 89, 90, 91, 92, 93, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 137, 138, 140, 147, 156, 192, 196, 198, 218, 219, 220, 223, 226, 228, 229, 230, 231, 234, 235, 236, 237], "bindindg": 0, "2": [0, 1, 7, 9, 11, 12, 14, 21, 22, 23, 41, 42, 44, 46, 47, 58, 59, 63, 65, 66, 74, 77, 85, 89, 92, 93, 101, 102, 103, 104, 109, 111, 112, 117, 132, 133, 134, 137, 141, 143, 151, 152, 159, 161, 163, 168, 169, 170, 171, 174, 175, 177, 178, 180, 188, 228, 229, 231, 232, 235, 236, 237], "1": [0, 1, 2, 3, 7, 9, 11, 12, 14, 15, 20, 21, 22, 23, 24, 30, 31, 41, 42, 44, 45, 46, 47, 50, 57, 58, 59, 61, 63, 65, 66, 67, 71, 73, 74, 77, 85, 86, 87, 89, 92, 93, 99, 100, 101, 102, 103, 105, 109, 110, 112, 114, 115, 116, 117, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 143, 147, 150, 151, 156, 159, 160, 161, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 188, 193, 194, 201, 204, 206, 209, 211, 214, 216, 220, 223, 226, 228, 229, 231, 232, 235, 236, 237], "old": [0, 159, 236], "bind": [0, 5], "py": [0, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237], "when": [0, 1, 3, 4, 7, 11, 12, 14, 15, 23, 25, 26, 27, 28, 35, 36, 37, 38, 41, 42, 44, 46, 47, 65, 73, 74, 77, 81, 85, 88, 89, 92, 93, 98, 100, 112, 113, 114, 115, 124, 137, 138, 140, 147, 151, 159, 160, 168, 179, 180, 220, 223, 226, 228, 229, 232, 234, 235, 236], "pro": [0, 6, 223], "tip": [0, 6, 223], "debug": [0, 5, 223, 236], "gradient": [0, 23, 41, 44, 46, 47, 89, 110, 116, 124, 125, 150, 162, 168, 169, 170, 171, 196, 228, 229], "relat": [0, 9, 228], "error": [0, 1, 3, 6, 9, 10, 23, 41, 44, 46, 47, 95, 146, 228, 229, 235, 236], "newcom": 0, "my": 0, "too": [0, 6, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 110, 124, 125, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 169, 170, 171, 228, 229, 236], "slow": [0, 3], "intermedi": [0, 232], "bug": [0, 237], "resourc": [0, 223], "functorch": [0, 7, 9, 137, 140, 145, 229, 237], "blog": 0, "websit": 0, "index": [0, 6, 7, 9, 14, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 40, 66, 99, 228, 231, 235, 237], "search": [0, 229], "page": [0, 6], "somewhat": [1, 236], "equival": [1, 11, 12, 14, 15, 23, 41, 44, 46, 47, 89, 236, 237], "dataload": [1, 235], "except": [1, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 69, 120, 146, 228, 229, 235, 236], "thei": [1, 3, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 67, 69, 77, 88, 89, 92, 111, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 196, 226, 228, 229, 231, 232, 234, 235, 236, 237], "collect": [1, 3, 7, 11, 12, 14, 15, 23, 25, 26, 27, 28, 74, 77, 92, 95, 134, 152, 161, 163, 188, 196, 197, 198, 199, 216, 226, 228, 229, 232, 235, 236, 237], "over": [1, 2, 3, 7, 11, 12, 14, 15, 23, 41, 44, 46, 47, 66, 74, 86, 140, 154, 156, 198, 226, 228, 234, 235, 236], "non": [1, 7, 23, 41, 44, 46, 47, 61, 65, 77, 85, 89, 92, 137, 138, 156, 169, 170, 171, 228, 234, 236], "static": [1, 93], "like": [1, 6, 23, 41, 44, 46, 47, 55, 87, 95, 161, 228, 232, 235, 236], "being": [1, 3, 7, 15, 23, 41, 44, 46, 47, 66, 89, 98, 134, 151, 159, 160, 180, 197, 218, 219, 220, 228, 229, 232], "accept": [1, 11, 12, 14, 15, 23, 41, 44, 45, 46, 47, 65, 77, 81, 85, 89, 92, 137, 138, 139, 226, 234, 236], "two": [1, 7, 9, 23, 41, 44, 46, 47, 74, 77, 92, 105, 138, 159, 163, 165, 193, 196, 201, 209, 211, 214, 228, 229, 231, 234, 235, 236, 237], "main": [1, 2, 4, 42, 138, 196, 228, 229, 231, 236], "argument": [1, 3, 11, 12, 14, 15, 19, 23, 41, 44, 46, 47, 65, 77, 85, 88, 89, 92, 101, 112, 115, 137, 138, 139, 141, 179, 190, 198, 201, 204, 206, 209, 211, 214, 216, 217, 220, 228, 229, 234, 236], "list": [1, 5, 6, 7, 8, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 41, 44, 45, 46, 47, 62, 77, 81, 89, 92, 112, 140, 141, 167, 169, 171, 179, 193, 218, 219, 228, 229, 231, 232, 234, 235, 236, 237], "constructor": [1, 14, 88, 169, 170, 171, 201, 204, 206, 209, 211, 214, 217, 220, 234], "iter": [1, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 44, 46, 47, 68, 74, 82, 93, 101, 112, 137, 138, 139, 140, 145, 167, 193, 195, 196, 201, 209, 211, 214, 226, 228], "step": [1, 3, 7, 11, 12, 14, 15, 23, 41, 42, 44, 45, 46, 47, 48, 50, 57, 73, 74, 84, 86, 89, 99, 100, 108, 111, 113, 114, 131, 133, 134, 138, 150, 155, 160, 168, 179, 188, 193, 196, 226, 228, 229, 231, 232, 235, 237], "queri": [1, 11, 12, 14, 15, 23, 41, 44, 46, 47, 77, 88, 93, 140, 234, 237], "defin": [1, 2, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 44, 46, 47, 65, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147, 169, 170, 171, 179, 217, 229, 234, 235, 236], "number": [1, 3, 7, 11, 12, 14, 15, 18, 20, 23, 24, 25, 26, 27, 32, 35, 36, 37, 41, 44, 45, 46, 47, 62, 66, 71, 73, 74, 80, 84, 86, 93, 100, 101, 106, 107, 108, 109, 110, 112, 114, 117, 118, 119, 121, 122, 123, 124, 125, 131, 133, 134, 137, 138, 149, 155, 161, 163, 188, 190, 193, 196, 197, 198, 199, 218, 219, 220, 228, 229, 232, 236], "befor": [1, 3, 5, 6, 9, 11, 12, 14, 15, 23, 41, 44, 46, 47, 48, 61, 62, 63, 64, 65, 67, 68, 70, 72, 74, 78, 79, 80, 82, 84, 85, 86, 87, 88, 90, 112, 115, 116, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 170, 171, 228, 229, 234, 235, 236], "deliv": [1, 229, 237], "stack": [1, 6, 7, 46, 47, 93, 99, 139, 140, 179, 188, 229, 231, 234, 235, 237], "user": [1, 2, 4, 7, 23, 41, 44, 46, 47, 84, 89, 111, 217, 226, 229, 234, 236, 237], "reset": [1, 3, 7, 11, 12, 14, 15, 41, 42, 44, 45, 46, 47, 50, 57, 62, 65, 68, 73, 77, 81, 82, 84, 85, 86, 88, 91, 93, 94, 99, 126, 134, 179, 201, 204, 206, 209, 211, 214, 228, 229, 231, 237], "whenev": [1, 3, 197], "reach": [1, 11, 12, 14, 15, 41, 44, 46, 47, 131, 133, 134, 236, 237], "done": [1, 3, 6, 7, 11, 12, 14, 19, 23, 41, 42, 44, 45, 46, 47, 50, 57, 58, 59, 74, 80, 82, 84, 85, 93, 99, 100, 114, 152, 153, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 201, 204, 206, 209, 211, 214, 228, 229, 231, 232, 235, 236, 237], "after": [1, 7, 19, 23, 41, 44, 46, 47, 61, 62, 63, 64, 65, 67, 68, 70, 72, 73, 74, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 99, 115, 131, 133, 156, 228, 229, 232, 234, 235, 236], "predifin": 1, "becaus": [1, 6, 88, 105, 111, 137, 138, 228, 229, 231, 235, 236], "potenti": 1, "comput": [1, 3, 7, 11, 14, 20, 23, 41, 44, 46, 47, 65, 74, 83, 88, 89, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 128, 131, 133, 134, 138, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 199, 228, 229, 231, 232, 234], "heavi": [1, 7], "crucial": [1, 228, 229, 236], "configur": [1, 7, 11, 12, 14, 15, 160, 201, 209, 211, 214], "appropri": [1, 6, 11, 12, 14, 15, 39, 40, 217, 220], "paramet": [1, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 51, 52, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 133, 134, 137, 138, 139, 140, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 209, 211, 214, 216, 217, 218, 219, 220, 228, 229, 232, 234, 237], "consider": [1, 3, 7, 228], "whether": [1, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 44, 45, 46, 47, 89, 101, 112, 141, 152, 153, 154, 161, 163, 171, 229, 236], "should": [1, 3, 4, 6, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 38, 41, 44, 45, 46, 47, 62, 65, 74, 81, 82, 83, 88, 89, 90, 91, 93, 95, 99, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 137, 138, 147, 158, 159, 160, 161, 164, 168, 169, 170, 171, 180, 192, 193, 196, 216, 218, 219, 220, 226, 228, 229, 231, 232, 236, 237], "occur": [1, 7, 12, 63, 137, 138, 156, 236], "serial": [1, 3, 23, 41, 44, 46, 47, 93], "optim": [1, 7, 23, 41, 44, 46, 47, 100, 114, 115, 116, 160, 163, 192, 196, 201, 209, 216, 226, 228, 229, 235], "syncdatacollector": [1, 11, 12, 15, 216, 219, 222], "worker": [1, 11, 12, 14, 15, 42, 46, 47, 93, 218, 219, 220, 236, 237], "multisyncdatacollector": [1, 219, 222, 237], "split": [1, 11, 12, 14, 15, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 226, 237], "workload": 1, "across": [1, 7, 93, 134, 197, 235], "aggreg": [1, 101, 102, 103, 140, 235], "final": [1, 131, 133, 134, 139, 169, 193, 228, 229, 236], "multiasyncdatacollector": [1, 15, 218, 222, 228, 229, 237], "sever": [1, 7, 21, 23, 41, 44, 46, 47, 63, 89, 160, 236], "batch": [1, 3, 11, 12, 14, 15, 16, 20, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 47, 74, 89, 106, 107, 111, 115, 120, 123, 134, 137, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 188, 195, 196, 197, 218, 219, 220, 226, 228, 229, 231, 232, 234, 236, 237], "gather": [1, 168, 199, 223, 234, 236], "continu": [1, 8, 18, 30, 102, 103, 104, 105, 134, 138, 140, 164, 169, 172, 173, 176, 204, 228, 236, 237], "concomittantli": 1, "impli": [1, 236], "weight": [1, 8, 11, 12, 14, 15, 23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 116, 137, 150, 151, 156, 197, 215, 226, 228, 229, 231, 237], "mai": [1, 3, 4, 6, 7, 11, 12, 14, 15, 23, 41, 44, 46, 47, 74, 82, 89, 93, 112, 226, 228, 232, 236, 237], "slightli": [1, 228, 232, 234, 236], "lag": [1, 11, 12, 14, 15], "therefor": [1, 3, 6, 160, 235, 236], "although": [1, 7, 41, 44, 46, 47, 65, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147, 226, 228, 229], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 6, 7, 11, 12, 14, 15, 25, 26, 27, 28, 35, 36, 41, 44, 45, 46, 47, 62, 77, 81, 86, 88, 92, 131, 133, 137, 138, 149, 150, 151, 152, 154, 158, 159, 160, 161, 163, 164, 168, 169, 170, 171, 179, 180, 196, 197, 226, 228, 229, 231, 234, 236], "asynchron": [1, 8, 12, 23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137, 150, 218], "off": [1, 2, 110, 124, 125, 163, 193, 202, 226, 229, 232, 236], "curriculum": 1, "For": [1, 3, 6, 7, 8, 9, 11, 12, 14, 15, 23, 41, 44, 46, 47, 74, 115, 143, 150, 154, 160, 193, 204, 226, 228, 232, 234, 236], "remot": [1, 46, 47, 236], "necessari": [1, 5, 7, 11, 12, 14, 15, 82, 161, 169, 170, 171, 228], "synchronis": [1, 42], "from": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 63, 66, 68, 74, 77, 82, 84, 85, 87, 88, 89, 92, 93, 99, 100, 102, 103, 104, 105, 110, 112, 113, 114, 115, 117, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 151, 152, 153, 159, 160, 161, 163, 168, 169, 170, 171, 179, 180, 188, 196, 198, 199, 201, 204, 206, 209, 211, 212, 214, 216, 217, 220, 223, 226, 228, 229, 231, 232, 234, 235, 236, 237], "either": [1, 4, 23, 41, 44, 46, 47, 142, 187, 204, 226, 232, 235, 236, 237], "update_policy_weights_": [1, 11, 12, 14, 15, 228, 229, 237], "update_at_each_batch": [1, 11, 12, 15, 228], "true": [1, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 58, 59, 63, 65, 73, 74, 77, 80, 84, 85, 87, 89, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 109, 110, 112, 114, 115, 116, 124, 125, 128, 129, 130, 131, 134, 137, 138, 139, 140, 146, 150, 151, 155, 156, 157, 159, 160, 161, 163, 165, 169, 170, 171, 174, 175, 177, 178, 179, 180, 190, 191, 193, 196, 206, 220, 226, 228, 229, 231, 232, 234, 235, 236, 237], "second": [1, 7, 163, 195, 228, 229, 231, 232, 234, 235, 236, 237], "consid": [1, 7, 23, 41, 44, 46, 47, 66, 106, 123, 228, 235], "oper": [1, 3, 6, 7, 11, 12, 15, 23, 41, 44, 46, 47, 88, 117, 128, 129, 130, 137, 142, 143, 150, 151, 152, 153, 154, 159, 160, 168, 169, 170, 171, 196, 204, 206, 211, 214, 226, 228, 229, 231, 234, 236], "instanc": [1, 3, 6, 7, 11, 12, 14, 15, 23, 29, 41, 42, 44, 45, 46, 47, 52, 62, 65, 74, 83, 85, 88, 90, 91, 93, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 117, 118, 119, 121, 122, 131, 133, 134, 138, 139, 140, 147, 180, 187, 193, 199, 201, 202, 203, 204, 206, 209, 211, 214, 216, 218, 219, 226, 229, 234, 235, 236], "cpu": [1, 3, 7, 9, 11, 12, 14, 17, 23, 29, 35, 36, 41, 44, 45, 46, 47, 50, 57, 58, 59, 60, 65, 77, 85, 89, 92, 100, 114, 116, 135, 137, 140, 201, 204, 206, 209, 211, 214, 228, 229, 231, 232, 234, 235, 236, 237], "slower": 1, "than": [1, 7, 11, 12, 14, 15, 105, 112, 117, 131, 133, 137, 197, 223, 228, 229, 234, 235, 236, 237], "one": [1, 3, 4, 6, 7, 10, 11, 12, 14, 15, 22, 24, 25, 26, 27, 28, 38, 39, 40, 41, 42, 44, 46, 47, 48, 65, 66, 73, 74, 77, 83, 88, 89, 90, 91, 92, 93, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 136, 137, 138, 143, 144, 147, 149, 150, 151, 152, 153, 159, 160, 161, 190, 192, 193, 196, 199, 201, 209, 211, 214, 220, 223, 226, 228, 229, 231, 232, 234, 235, 236], "cuda": [1, 3, 6, 23, 41, 44, 46, 47, 65, 76, 77, 85, 89, 92, 137, 189, 228, 229, 232, 235, 236], "multipl": [1, 3, 4, 7, 11, 12, 14, 15, 20, 46, 47, 63, 66, 81, 88, 93, 111, 115, 116, 137, 138, 161, 211, 220, 226, 229, 235, 237], "infer": [1, 46, 47, 93, 115, 163, 228, 234, 235], "dispatch": 1, "avail": [1, 5, 138, 143, 144, 218, 219, 228, 229, 236], "speed": [1, 2, 7, 20, 228, 229], "avoid": [1, 23, 41, 44, 46, 47, 89, 93, 137, 198, 234], "oom": 1, "choic": [1, 2, 117], "size": [1, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 41, 43, 44, 45, 46, 47, 50, 57, 58, 59, 60, 63, 77, 83, 85, 87, 89, 90, 92, 100, 101, 106, 111, 112, 114, 117, 120, 121, 122, 123, 128, 129, 130, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 168, 169, 170, 171, 180, 188, 201, 204, 206, 209, 211, 214, 228, 229, 231, 232, 234, 236, 237], "pass": [1, 3, 14, 19, 23, 27, 41, 42, 43, 44, 46, 47, 65, 83, 88, 90, 91, 93, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 115, 117, 118, 119, 121, 122, 131, 133, 134, 137, 138, 140, 146, 147, 169, 170, 171, 218, 219, 220, 228, 229, 231, 236], "ie": [1, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "store": [1, 7, 11, 12, 14, 15, 19, 23, 27, 28, 35, 36, 37, 41, 44, 46, 47, 93, 100, 111, 114, 201, 204, 206, 209, 211, 214, 226, 228, 229, 232, 235, 236], "while": [1, 3, 6, 7, 23, 41, 44, 46, 47, 65, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147, 159, 160, 228, 229, 232, 237], "wait": [1, 229], "also": [1, 2, 3, 7, 23, 27, 41, 44, 46, 47, 81, 82, 89, 122, 139, 140, 150, 152, 153, 169, 226, 228, 229, 231, 234, 235, 236], "impact": 1, "memori": [1, 7, 20, 23, 35, 41, 42, 44, 46, 47, 65, 77, 85, 89, 92, 93, 137, 220, 226, 228, 237], "manag": [1, 7, 166, 167, 193, 228, 234], "kei": [1, 3, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 41, 44, 46, 47, 48, 62, 63, 68, 74, 77, 81, 82, 85, 86, 88, 89, 92, 93, 99, 100, 113, 114, 131, 133, 134, 137, 138, 139, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 168, 169, 170, 171, 180, 192, 193, 195, 196, 199, 201, 209, 211, 214, 226, 228, 229, 231, 234, 236, 237], "which": [1, 3, 6, 7, 10, 11, 12, 14, 15, 19, 20, 23, 24, 28, 41, 44, 46, 47, 48, 62, 63, 71, 73, 74, 77, 86, 88, 89, 95, 110, 124, 125, 128, 129, 130, 137, 138, 140, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 169, 188, 192, 201, 204, 206, 209, 211, 214, 226, 228, 229, 231, 232, 234, 235, 236], "passing_devic": [1, 11, 12, 14, 15, 228, 229, 237], "dure": [1, 11, 12, 14, 15, 41, 44, 46, 47, 71, 89, 193, 196, 228, 236], "A": [1, 3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 55, 71, 77, 85, 88, 89, 91, 93, 94, 95, 99, 100, 101, 112, 114, 116, 117, 131, 133, 138, 139, 140, 143, 147, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 181, 182, 183, 190, 196, 197, 201, 206, 209, 211, 214, 216, 229, 235, 236], "heurist": [1, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 134, 228, 236], "usual": [1, 3, 5, 6, 7, 41, 44, 46, 47, 116, 179, 201, 209, 211, 214, 223, 226, 236], "same": [1, 3, 14, 23, 41, 42, 44, 46, 47, 66, 71, 73, 74, 88, 89, 93, 101, 112, 134, 228, 229, 231, 232, 234, 235, 236], "storag": [1, 2, 7, 23, 25, 26, 27, 28, 35, 36, 37, 41, 43, 44, 46, 47, 222, 226, 228, 229, 232], "default": [1, 3, 9, 11, 12, 14, 15, 17, 19, 20, 23, 24, 25, 26, 27, 35, 36, 41, 44, 46, 47, 48, 51, 62, 63, 73, 74, 77, 80, 85, 86, 87, 89, 92, 93, 95, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 131, 133, 134, 135, 137, 138, 141, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 168, 169, 170, 171, 174, 175, 177, 178, 179, 180, 188, 190, 191, 193, 194, 196, 201, 204, 209, 211, 214, 216, 220, 226, 228, 229, 232, 234, 235, 236, 237], "behaviour": [1, 3, 44, 63, 110, 124, 125, 193, 229], "besid": 1, "those": [1, 4, 6, 46, 47, 74, 138, 139, 140, 197, 218, 219, 228, 229, 236], "choos": [1, 228], "follow": [1, 2, 3, 5, 6, 7, 23, 41, 44, 45, 46, 47, 77, 101, 112, 149, 151, 159, 162, 196, 211, 214, 226, 228, 229, 231, 234, 235, 236, 237], "max_frames_per_traj": [1, 11, 12, 14, 15, 198, 228, 237], "frame": [1, 11, 12, 14, 15, 23, 44, 62, 71, 131, 133, 134, 179, 180, 190, 193, 196, 198, 199, 228, 229, 236, 237], "call": [1, 3, 6, 7, 10, 11, 12, 14, 15, 23, 25, 26, 27, 28, 35, 36, 37, 38, 41, 44, 46, 47, 62, 65, 67, 76, 77, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 95, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 114, 115, 117, 118, 119, 121, 122, 131, 133, 134, 137, 138, 140, 147, 168, 179, 193, 226, 228, 229, 234, 235, 236], "frames_per_batch": [1, 11, 12, 14, 15, 198, 228, 229, 237], "each": [1, 3, 6, 7, 11, 12, 14, 15, 16, 21, 22, 23, 27, 41, 42, 44, 46, 47, 77, 81, 84, 85, 86, 92, 93, 131, 140, 143, 144, 174, 175, 177, 178, 193, 218, 219, 228, 229, 232, 234, 236, 237], "init_random_fram": [1, 11, 12, 14, 15, 198, 228, 229], "random": [1, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 33, 41, 44, 45, 46, 47, 66, 73, 74, 85, 95, 137, 138, 161, 193, 199, 228, 229, 232, 236, 237], "rand_step": [1, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 56, 93, 236, 237], "reset_at_each_it": [1, 11, 12, 14, 15, 228], "split_traj": [1, 11, 12, 14, 15, 228], "pad": [1, 16, 101, 102, 103, 111, 228, 229], "along": [1, 62, 63, 74, 81, 87, 112, 116, 137, 138, 229, 235], "mask": [1, 11, 12, 14, 228, 229, 235, 236, 237], "point": [1, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 39, 40, 41, 44, 46, 47, 62, 65, 77, 85, 87, 89, 92, 113, 137, 149, 154, 196, 223, 231, 236], "boolean": [1, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 44, 131, 172, 173, 174, 175, 176, 177, 178, 226], "repres": [1, 3, 11, 12, 14, 15, 27, 41, 44, 46, 47, 71, 138, 143, 144, 165, 169, 234, 235], "valid": [1, 89, 101, 112, 131, 133, 159, 226, 236], "valu": [1, 3, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 46, 47, 48, 61, 62, 63, 66, 73, 74, 77, 79, 81, 85, 86, 87, 88, 89, 92, 93, 102, 103, 104, 105, 106, 108, 109, 110, 112, 114, 115, 116, 117, 120, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 188, 190, 191, 192, 193, 196, 201, 204, 209, 211, 214, 216, 226, 228, 229, 231, 234, 236, 237], "exploration_mod": [1, 11, 14, 193, 222, 228, 229, 234], "strategi": [1, 226, 228], "reset_when_don": [1, 11, 14], "central": 2, "part": [2, 7, 23, 41, 44, 46, 47, 74, 81, 141, 188, 220, 228, 229, 234, 236], "algorithm": [2, 7, 8, 11, 12, 45, 71, 150, 160, 161, 162, 163, 188, 201, 202, 209, 226, 228, 229, 232, 235, 237], "wide": [2, 3, 4], "we": [2, 3, 4, 6, 8, 19, 23, 41, 42, 44, 46, 47, 77, 93, 100, 111, 223, 226, 228, 229, 231, 232, 234, 235, 236, 237], "give": [2, 6, 45, 223, 228, 229, 232, 237], "abil": 2, "veri": [2, 3, 228, 229, 236, 237], "influenti": 2, "latenc": 2, "especi": [2, 3, 6, 7, 63], "larger": 2, "volum": 2, "lazymemmapstorag": [2, 222, 228, 229, 232], "advis": [2, 236], "share": [2, 5, 7, 35, 36, 37, 38, 42, 46, 47, 93, 128, 129, 130, 220, 231, 234, 236, 237], "due": [2, 3, 4, 232, 236], "lower": [2, 11, 12, 14, 15, 18, 93, 121, 122, 235], "serialis": 2, "memmaptensor": [2, 232], "well": [2, 3, 7, 11, 12, 15, 23, 38, 41, 44, 46, 47, 121, 122, 228, 229, 232, 234, 235, 236, 237], "specifi": [2, 10, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 81, 83, 90, 100, 137, 138, 228, 234], "file": [2, 5, 6, 7, 179, 226, 229, 233], "locat": [2, 6, 44, 74, 80, 110, 117, 124, 125, 235], "node": [2, 201, 204, 206, 209, 211, 214], "failur": 2, "recoveri": 2, "mean": [2, 3, 6, 14, 74, 93, 100, 106, 108, 111, 114, 123, 131, 138, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 228, 229, 236, 237], "liststorag": [2, 25, 26, 27, 222], "were": [2, 6, 46, 47, 228], "found": [2, 5, 6, 9, 19, 23, 27, 41, 44, 46, 47, 93, 138, 152, 160, 228, 229, 234], "rough": 2, "benchmark": [2, 8], "http": [2, 4, 5, 6, 9, 25, 32, 62, 77, 102, 103, 104, 105, 108, 109, 114, 116, 118, 119, 121, 122, 134, 143, 150, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 169, 172, 173, 176, 201, 204, 209, 211, 214, 232, 237], "com": [2, 4, 5, 6, 9, 232, 237], "tree": 2, "type": [2, 23, 25, 27, 29, 41, 44, 45, 46, 47, 65, 77, 85, 89, 92, 93, 101, 112, 116, 131, 133, 137, 138, 145, 201, 204, 206, 209, 211, 214, 218, 228, 229, 235, 236], "1x": 2, "lazytensorstorag": [2, 222], "83x": 2, "3": [2, 3, 5, 6, 9, 11, 12, 14, 19, 20, 21, 22, 23, 24, 41, 44, 46, 47, 65, 74, 77, 85, 87, 89, 92, 100, 101, 102, 103, 109, 111, 112, 114, 117, 127, 128, 129, 130, 132, 135, 137, 140, 141, 143, 146, 156, 169, 170, 171, 174, 175, 177, 178, 180, 195, 206, 226, 228, 229, 232, 235, 236, 237], "44x": 2, "parent": [2, 3, 29, 41, 63, 71, 74, 77, 88, 128, 160, 229, 235, 236, 237], "subclass": [2, 3, 41, 44, 46, 47, 65, 83, 88, 90, 91, 95, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 132, 133, 134, 136, 137, 138, 139, 147, 160, 228], "basic": [2, 45, 236], "properti": [2, 41, 44, 45, 46, 47, 89, 106, 110, 115, 120, 123, 124, 125, 234, 235], "action": [2, 3, 7, 8, 11, 12, 14, 20, 24, 29, 41, 44, 45, 46, 47, 48, 50, 57, 58, 59, 66, 67, 71, 73, 82, 89, 99, 100, 102, 103, 104, 105, 107, 108, 112, 113, 114, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 143, 144, 153, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 201, 204, 206, 209, 211, 214, 216, 220, 226, 228, 229, 231, 232, 234, 235, 236, 237], "shape": [2, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 41, 44, 46, 47, 48, 63, 74, 87, 95, 106, 107, 112, 115, 117, 120, 123, 135, 137, 140, 165, 180, 188, 196, 216, 228, 229, 231, 232, 234, 235, 236, 237], "dtype": [2, 3, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 41, 44, 45, 46, 47, 50, 57, 58, 59, 60, 65, 66, 67, 74, 77, 85, 87, 89, 92, 95, 100, 114, 115, 116, 128, 129, 130, 132, 134, 135, 136, 137, 140, 141, 143, 144, 169, 170, 171, 201, 204, 206, 209, 211, 214, 228, 229, 231, 232, 234, 235, 236, 237], "import": [2, 3, 5, 6, 9, 11, 12, 14, 25, 27, 32, 42, 44, 45, 46, 47, 74, 77, 85, 92, 93, 100, 112, 114, 117, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 151, 169, 170, 171, 190, 193, 201, 204, 206, 209, 211, 214, 216, 228, 229, 231, 232, 234, 235, 236, 237], "match": [2, 3, 5, 7, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 42, 44, 46, 47, 61, 62, 63, 64, 65, 67, 68, 70, 72, 74, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 101, 106, 112, 123, 137, 138, 159, 161, 163, 197, 229, 231, 234, 235, 236, 237], "input": [2, 3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 45, 46, 47, 63, 65, 66, 67, 68, 77, 81, 82, 86, 88, 90, 92, 95, 99, 101, 102, 103, 104, 105, 111, 112, 115, 116, 121, 122, 134, 137, 138, 139, 140, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 198, 216, 226, 229, 235, 236, 237], "output": [2, 3, 11, 12, 14, 15, 23, 25, 26, 27, 41, 44, 45, 46, 47, 62, 77, 86, 88, 92, 95, 101, 102, 103, 107, 108, 111, 112, 117, 128, 131, 133, 134, 137, 138, 139, 140, 143, 144, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 169, 180, 188, 228, 231, 232, 235, 236, 237], "send": [2, 3, 7, 229, 235, 237], "receiv": [2, 3, 23, 41, 44, 46, 47, 88, 112, 229, 231], "parallelenv": [2, 3, 11, 12, 14, 15, 47, 217, 222, 228, 229, 231, 236, 237], "creat": [2, 3, 4, 5, 6, 9, 11, 12, 15, 23, 25, 26, 27, 41, 42, 44, 46, 47, 48, 77, 81, 88, 89, 93, 99, 101, 102, 103, 104, 105, 109, 112, 113, 138, 153, 154, 161, 180, 199, 202, 203, 216, 218, 219, 228, 229, 232, 234, 235, 236, 237], "commun": [2, 3, 223, 236], "spawn": [2, 3], "check": [2, 3, 4, 5, 6, 10, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 42, 44, 45, 46, 47, 63, 69, 95, 137, 138, 145, 228, 229, 231, 232, 236], "check_env_spec": [2, 3, 222], "method": [2, 3, 11, 12, 14, 15, 23, 27, 35, 36, 37, 38, 41, 44, 46, 47, 62, 65, 74, 77, 78, 85, 89, 92, 100, 111, 128, 129, 130, 137, 138, 139, 145, 150, 179, 217, 226, 227, 228, 234, 235, 236], "saniti": [2, 3, 6, 95], "offer": [3, 6, 236], "handl": [3, 23, 41, 44, 46, 47, 93, 112, 196, 218, 219], "differ": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 62, 66, 89, 112, 114, 143, 144, 160, 165, 169, 170, 193, 196, 197, 218, 219, 226, 228, 229, 231, 232, 235, 236], "backend": [3, 6, 226, 228], "dm": [3, 236], "base": [3, 7, 8, 11, 12, 14, 15, 34, 40, 45, 91, 128, 155, 196, 201, 209, 211, 214, 226, 228, 230, 233, 236], "custom": [3, 4, 23, 41, 44, 46, 47, 220], "goal": [3, 228, 229], "abl": [3, 231, 235, 237], "even": [3, 7, 12, 35, 36, 37, 38, 42, 228, 235, 236], "simul": [3, 4, 6, 7, 59, 60, 100, 114, 228], "some": [3, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 77, 95, 102, 138, 139, 140, 188, 198, 226, 228, 229, 234, 236, 237], "box": [3, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "wrapper": [3, 15, 27, 28, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 117, 131, 133, 134, 138, 142, 169, 183, 184, 185, 220, 228, 232, 236], "under": [3, 23, 41, 44, 46, 47, 137, 138, 228, 236], "lib": [3, 4, 5, 6, 8, 9, 11, 12, 14, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 74, 85, 93, 201, 204, 206, 209, 211, 214, 216, 228, 229, 231, 232, 236, 237], "hope": 3, "imit": 3, "other": [3, 6, 7, 23, 35, 36, 37, 38, 41, 44, 45, 46, 47, 82, 93, 116, 117, 138, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 201, 209, 211, 214, 218, 219, 226, 228, 229, 232, 234, 236, 237], "torch": [3, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 35, 36, 41, 42, 44, 45, 46, 47, 50, 57, 58, 59, 63, 65, 66, 67, 74, 77, 80, 85, 87, 89, 92, 93, 99, 100, 101, 106, 108, 110, 111, 112, 114, 115, 116, 117, 120, 123, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 152, 169, 170, 171, 188, 195, 201, 204, 206, 209, 211, 214, 216, 226, 228, 229, 231, 232, 234, 235, 236, 237], "nn": [3, 11, 12, 14, 23, 41, 44, 45, 46, 47, 65, 77, 85, 89, 92, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 114, 117, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 150, 153, 154, 169, 170, 171, 211, 214, 216, 228, 229, 231, 232, 234, 237], "typic": [3, 7, 23, 41, 44, 46, 47, 226], "organis": 3, "allow": [3, 11, 12, 14, 15, 23, 24, 41, 44, 46, 47, 48, 99, 112, 165, 226, 228, 234, 235, 236], "gener": [3, 6, 7, 14, 26, 34, 42, 45, 74, 81, 82, 106, 120, 127, 135, 138, 141, 142, 161, 169, 172, 173, 176, 186, 196, 228, 229, 230, 231, 232, 234, 235, 236, 237], "arbitrari": [3, 24, 46, 47, 228, 229], "nest": [3, 19, 23, 41, 44, 46, 47, 48, 169, 170, 171, 226, 229, 235, 237], "attribut": [3, 23, 41, 44, 46, 47, 77, 84, 138, 229, 234], "batch_siz": [3, 7, 11, 12, 14, 19, 25, 26, 27, 28, 41, 43, 45, 50, 57, 58, 59, 60, 62, 85, 100, 114, 128, 129, 130, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 188, 201, 204, 206, 209, 211, 214, 228, 229, 231, 232, 234, 235, 236, 237], "togeth": [3, 11, 12, 14, 15, 128, 129, 130, 142, 234], "expect": [3, 6, 19, 23, 29, 41, 44, 45, 46, 47, 61, 62, 63, 64, 65, 67, 68, 70, 72, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 90, 95, 134, 137, 140, 150, 151, 159, 160, 199, 223, 226, 228, 236], "live": [3, 11, 12, 14, 15, 23, 25, 26, 27, 28, 41, 44, 45, 46, 47], "doe": [3, 25, 27, 32, 38, 115, 139, 140, 151, 159, 160, 168, 196, 226, 228, 235, 236], "actual": [3, 6, 11, 12, 15, 41, 44, 46, 47, 198, 228, 229], "respons": [3, 7, 196, 234, 236], "just": [3, 188, 226, 229, 234, 235, 236, 237], "retriev": [3, 25, 26, 27, 28, 41, 44, 46, 47, 48, 63, 74, 99, 100, 114, 138, 151, 159, 160, 169, 170, 171, 201, 204, 206, 209, 211, 214, 220, 226, 235, 236], "care": [3, 7, 41, 44, 46, 47, 65, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147, 228, 229], "map": [3, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 35, 41, 44, 46, 47, 61, 62, 63, 64, 65, 67, 68, 70, 72, 74, 78, 79, 80, 82, 84, 85, 86, 87, 88, 90, 93, 117, 128, 129, 130, 137, 138, 140, 142, 143, 222, 228, 229, 232, 234, 235], "desir": [3, 23, 41, 44, 46, 47, 48, 65, 77, 85, 89, 92, 98, 101, 112, 137, 138, 228, 229, 235], "see": [3, 5, 6, 7, 8, 11, 12, 14, 15, 23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 94, 101, 110, 112, 115, 124, 125, 137, 138, 228, 229, 234, 235, 236], "below": [3, 6, 11, 12, 14, 15, 23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 101, 110, 112, 124, 125, 137], "parametr": [3, 116, 138, 163, 228, 234], "hardwar": 3, "observation_spec": [3, 41, 45, 62, 63, 64, 65, 67, 68, 70, 72, 74, 77, 78, 81, 82, 84, 85, 86, 87, 88, 89, 90, 100, 114, 199, 216, 228, 231, 236], "compositespec": [3, 41, 43, 45, 84, 85, 100, 114, 127, 131, 133, 135, 140, 222, 228, 236], "pair": [3, 23, 41, 44, 46, 47, 48, 128, 138, 228, 229, 231, 235, 236], "input_spec": [3, 41, 45, 46, 47, 65, 67, 82, 88, 89, 90, 100, 114, 236], "action_spec": [3, 13, 41, 44, 45, 46, 47, 50, 57, 89, 122, 127, 129, 132, 135, 136, 143, 144, 216, 228, 229, 231, 232, 236, 237], "reward_spec": [3, 41, 45, 61, 65, 67, 79, 80, 81, 88, 89, 90, 100, 114, 236], "reward": [3, 11, 12, 14, 23, 29, 41, 44, 45, 46, 47, 48, 50, 57, 58, 59, 61, 65, 67, 79, 80, 81, 82, 88, 89, 90, 91, 92, 93, 99, 100, 114, 142, 152, 153, 156, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 190, 191, 193, 194, 220, 226, 228, 229, 231, 232, 235, 236, 237], "importantli": [3, 138], "4": [3, 6, 11, 12, 14, 17, 20, 24, 45, 51, 52, 53, 56, 93, 100, 101, 102, 103, 108, 109, 111, 112, 114, 117, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 146, 179, 228, 229, 231, 232, 235, 236, 237], "action_s": 3, "simpli": [3, 5, 68, 82, 228, 229, 236], "With": [3, 226, 235, 236], "necessarili": 3, "requir": [3, 6, 7, 14, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 46, 47, 65, 77, 85, 89, 92, 112, 137, 139, 140, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 226, 228, 229, 234, 236], "stateless": [3, 46, 47, 88, 236], "set_se": [3, 11, 12, 14, 15, 41, 44, 45, 46, 47, 50, 57, 74, 89, 228, 236, 237], "integ": [3, 11, 12, 14, 15, 21, 22, 23, 24, 31, 38, 41, 44, 46, 47, 71, 74, 84, 101, 112], "seed": [3, 11, 12, 14, 15, 41, 44, 45, 46, 47, 51, 58, 59, 89, 196, 228], "next": [3, 7, 11, 12, 14, 19, 23, 25, 26, 27, 41, 42, 44, 45, 46, 47, 48, 50, 57, 58, 59, 93, 99, 100, 114, 122, 142, 161, 168, 169, 170, 171, 228, 229, 231, 232, 236, 237], "determinist": [3, 23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 108, 118, 122, 127, 133, 137, 138, 228, 229, 236], "preced": [3, 111, 234], "without": [3, 6, 8, 23, 41, 44, 46, 47, 129, 161, 168, 216, 223, 228, 229, 236], "risk": 3, "overlap": 3, "consecut": [3, 134, 229, 236], "still": [3, 8, 84, 131, 159, 228, 229, 231, 236], "reproduc": 3, "max_step": [3, 41, 44, 45, 46, 47, 58, 59, 84, 99, 228, 229, 236, 237], "maximum": [3, 11, 12, 14, 15, 18, 23, 35, 36, 37, 41, 44, 46, 47, 66, 79, 84, 86, 123, 124, 125, 135, 163, 228, 229, 236, 237], "safemodul": [3, 45, 60, 100, 113, 128, 129, 130, 131, 133, 134, 135, 138, 140, 142, 145, 146, 150, 151, 152, 155, 156, 157, 159, 160, 161, 162, 163, 168, 169, 170, 171, 193, 202, 203, 216, 222, 237], "ani": [3, 4, 7, 19, 23, 25, 26, 27, 28, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 77, 89, 93, 95, 101, 112, 116, 137, 138, 139, 140, 160, 183, 196, 223, 228, 229, 236, 237], "compat": [3, 6, 10, 23, 38, 41, 44, 46, 47, 55, 62, 93, 145, 165, 229, 237], "better": [3, 7, 229], "intens": [3, 7], "gym3": 3, "envpool": 3, "interfac": [3, 112, 115, 234], "simultan": [3, 46, 47], "often": [3, 7, 158, 196, 236], "competit": 3, "advantag": [3, 7, 109, 150, 151, 159, 160, 162, 169, 170, 171, 172, 173, 174, 176, 177, 226, 228, 229, 236], "scale": [3, 74, 80, 108, 110, 117, 121, 122, 124, 125, 128, 129, 130, 135, 138, 140, 194, 199, 201, 209, 211, 214, 220, 228, 229, 234, 237], "varieti": 3, "its": [3, 4, 6, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 41, 44, 45, 46, 47, 62, 88, 89, 93, 101, 131, 132, 133, 138, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 196, 216, 226, 228, 229, 232, 234, 236], "own": [3, 11, 12, 15, 23, 41, 44, 46, 47, 229, 234], "As": [3, 41, 44, 46, 47, 138, 228, 229, 232, 236, 237], "inherit": [3, 113, 226, 234, 235], "enjoi": 3, "exact": 3, "Of": [3, 6, 223, 236], "cours": [3, 223, 236], "correspond": [3, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 41, 44, 45, 46, 47, 77, 85, 89, 92, 93, 134, 138, 229, 232], "count": [3, 42, 84, 134, 193, 198, 236], "def": [3, 10, 23, 41, 42, 44, 45, 46, 47, 100, 114, 141, 143, 146, 226, 228, 229, 231, 234, 235, 236, 237], "make_env": [3, 59, 93, 99, 202, 203, 228, 229, 236], "gymenv": [3, 4, 11, 12, 14, 15, 42, 55, 65, 74, 85, 89, 93, 201, 204, 206, 209, 211, 214, 216, 222, 228, 229, 232, 236, 237], "pendulum": [3, 11, 12, 14, 15, 42, 53, 54, 65, 74, 85, 89, 93, 216, 229, 236, 237], "v1": [3, 11, 12, 14, 42, 74, 85, 165, 174, 175, 177, 178, 229, 236, 237], "from_pixel": [3, 51, 52, 201, 209, 211, 214, 228, 229, 232, 236, 237], "9": [3, 6, 23, 93, 228, 229, 232, 235], "81": [3, 232], "0": [3, 4, 5, 6, 7, 9, 10, 21, 22, 23, 24, 25, 27, 32, 41, 44, 45, 46, 47, 50, 57, 61, 63, 65, 66, 73, 74, 77, 85, 87, 89, 92, 93, 99, 100, 101, 102, 103, 105, 108, 110, 112, 114, 115, 116, 117, 121, 122, 123, 124, 125, 131, 133, 134, 137, 140, 147, 150, 151, 155, 156, 157, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 188, 194, 196, 216, 220, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237], "must": [3, 6, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 35, 36, 37, 38, 41, 42, 44, 46, 47, 71, 74, 85, 89, 101, 112, 137, 138, 143, 144, 172, 173, 174, 175, 176, 177, 178, 188, 193, 196, 197, 201, 204, 206, 209, 211, 214, 228, 229, 231, 234, 235, 237], "print": [3, 5, 6, 11, 12, 14, 17, 19, 20, 23, 24, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 63, 66, 67, 74, 85, 87, 93, 99, 101, 112, 117, 127, 128, 129, 130, 132, 133, 134, 136, 137, 140, 141, 143, 144, 146, 201, 204, 206, 209, 211, 214, 216, 226, 228, 229, 231, 232, 234, 235, 236, 237], "b": [3, 6, 7, 16, 19, 115, 116, 169, 170, 171, 180, 232, 234, 235], "c": [3, 5, 6, 19, 74, 201, 204, 206, 209, 211, 214, 235], "d": [3, 25, 32, 138, 235, 237], "get": [3, 5, 6, 7, 38, 42, 46, 47, 63, 66, 67, 74, 87, 93, 127, 133, 138, 172, 173, 176, 187, 228, 229, 234, 236, 237], "forc": [3, 5, 6, 229], "variou": [3, 11, 12, 14, 15, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 218, 219, 228, 229, 236], "reset_work": 3, "fals": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 57, 58, 59, 63, 65, 73, 74, 77, 80, 85, 87, 89, 92, 93, 95, 100, 101, 102, 112, 114, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 161, 162, 163, 165, 169, 170, 171, 174, 175, 177, 178, 190, 191, 193, 194, 196, 201, 204, 206, 209, 211, 214, 220, 226, 228, 229, 231, 232, 234, 235, 236, 237], "field": [3, 11, 12, 14, 15, 19, 23, 41, 44, 45, 46, 47, 50, 57, 58, 59, 85, 89, 100, 114, 128, 129, 130, 132, 134, 135, 136, 137, 140, 141, 143, 144, 199, 201, 204, 206, 209, 211, 214, 223, 229, 231, 232, 234, 235, 236, 237], "bool": [3, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 57, 58, 59, 63, 73, 74, 77, 80, 85, 87, 89, 92, 93, 95, 99, 100, 101, 102, 103, 110, 112, 114, 115, 116, 124, 125, 131, 134, 137, 138, 139, 140, 145, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 169, 170, 171, 174, 175, 177, 178, 179, 180, 190, 191, 193, 194, 196, 201, 204, 206, 209, 211, 214, 220, 229, 231, 232, 236, 237], "500": [3, 196, 228, 229, 236, 237], "uint8": [3, 31, 87, 229, 232, 236, 237], "none": [3, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 72, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 109, 111, 112, 113, 114, 115, 116, 120, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 156, 157, 162, 163, 168, 169, 170, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 192, 193, 196, 199, 201, 202, 203, 204, 206, 209, 211, 214, 216, 218, 219, 220, 226, 228, 229, 234, 235, 236, 237], "is_shar": [3, 11, 12, 14, 19, 45, 50, 57, 58, 59, 85, 93, 100, 114, 128, 129, 130, 132, 134, 135, 136, 137, 140, 141, 143, 144, 201, 204, 206, 209, 211, 214, 229, 231, 232, 234, 235, 236, 237], "note": [3, 11, 12, 14, 15, 23, 41, 44, 46, 47, 93, 134, 138, 228, 229, 231, 234, 235, 236], "launch": 3, "quit": [3, 228, 229, 236], "mani": [3, 151, 159, 160, 161, 235, 236], "start": [3, 4, 11, 42, 99, 192, 228, 229, 236], "bottleneck": [3, 7], "why": [3, 228, 236], "so": [3, 5, 6, 9, 23, 41, 44, 46, 47, 93, 139, 140, 228, 236], "onc": [3, 6, 11, 12, 14, 15, 23, 41, 44, 46, 47, 89, 131, 133, 226, 228, 229, 236], "great": [3, 6, 7, 235, 237], "speedup": [3, 7, 236], "anoth": [3, 7, 41, 44, 46, 47, 88, 112, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 228, 231, 235, 236], "thing": [3, 6, 7, 229, 236], "misspecifi": 3, "caus": [3, 6, 7], "breakag": 3, "prealloc": 3, "In": [3, 4, 6, 7, 9, 10, 11, 12, 15, 23, 41, 44, 46, 47, 65, 77, 82, 85, 88, 89, 92, 110, 112, 122, 124, 125, 137, 140, 149, 197, 218, 219, 220, 228, 229, 231, 232, 235, 236], "obj": [3, 137, 138, 139], "rais": [3, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 69, 89, 95, 146, 228, 229], "assert": [3, 5, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 44, 93, 95, 99, 117, 169, 170, 171, 188, 195, 228, 229, 231, 234, 235, 236], "mismatch": [3, 235], "serialenv": [3, 222, 236], "mostli": [3, 15, 236], "purpos": [3, 6, 216, 232, 235, 236], "want": [3, 5, 6, 7, 74, 228, 232, 235, 236, 237], "assess": [3, 228], "subprocess": [3, 42], "case": [3, 4, 6, 7, 10, 11, 12, 14, 15, 19, 25, 27, 32, 41, 44, 46, 47, 89, 95, 112, 137, 138, 140, 149, 188, 197, 218, 219, 220, 226, 228, 234, 235, 236], "raw": [3, 110, 124, 125], "treat": 3, "To": [3, 5, 6, 7, 23, 25, 26, 27, 41, 44, 46, 47, 93, 128, 129, 130, 134, 196, 228, 229, 232, 234, 236, 237], "logic": 3, "torchvis": [3, 77, 92, 236, 237], "transformedenv": [3, 42, 65, 73, 74, 85, 88, 93, 201, 204, 206, 209, 211, 214, 222, 228, 229, 231, 232, 236, 237], "primit": [3, 228, 229], "built": [3, 4, 6, 212, 216, 217, 220, 236], "base_env": [3, 85, 228, 229, 232, 236, 237], "totensorimag": [3, 206, 222, 229, 236, 237], "in_kei": [3, 11, 12, 14, 45, 61, 62, 63, 64, 67, 70, 72, 74, 75, 77, 78, 79, 80, 81, 86, 87, 88, 92, 93, 100, 114, 127, 128, 129, 130, 135, 137, 138, 140, 141, 145, 146, 152, 153, 169, 170, 171, 179, 180, 211, 214, 216, 228, 229, 231, 232, 234, 236, 237], "resiz": [3, 222, 229, 236], "64": [3, 102, 103, 109, 228, 229, 231, 236, 237], "By": [3, 24, 44, 46, 47, 138, 193, 220, 232, 235, 236], "now": [3, 6, 228, 231, 232, 234, 235, 236], "appar": [3, 190], "bring": [3, 236], "signific": [3, 4, 7, 236], "kind": [3, 29, 99], "consult": 3, "achiev": [3, 23, 41, 44, 46, 47, 226, 234, 235, 236], "interest": [3, 46, 47, 138, 236], "abov": [3, 6, 23, 41, 44, 46, 47, 110, 124, 125, 149, 226, 228, 229, 236], "resize_par": 3, "sinc": [3, 4, 6, 23, 41, 44, 46, 47, 65, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147, 228, 229, 232, 236, 237], "out_kei": [3, 11, 12, 14, 45, 46, 47, 61, 62, 63, 70, 75, 77, 78, 79, 81, 86, 87, 88, 92, 100, 114, 127, 128, 129, 130, 135, 137, 138, 140, 141, 143, 144, 145, 146, 169, 170, 171, 193, 216, 228, 231, 232, 234, 236, 237], "keyword": [3, 23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137, 138, 217, 228, 234, 236], "easi": [3, 4, 229, 232, 235, 236], "root": [3, 110, 124, 125, 236], "graph": [3, 7, 166, 167], "inv": [3, 66], "appli": [3, 23, 25, 26, 27, 28, 41, 44, 46, 47, 66, 71, 86, 89, 124, 169, 192, 226, 228, 229, 234, 236, 237], "revers": 3, "order": [3, 14, 23, 24, 25, 26, 27, 28, 41, 44, 46, 47, 89, 137, 139, 140, 234], "chain": [3, 25, 26, 27, 65, 101, 140, 236], "taken": [3, 41, 44, 46, 47, 229], "includ": [3, 6, 8, 23, 35, 36, 37, 38, 41, 44, 45, 46, 47, 89, 93, 198, 226, 228, 229, 235, 236], "invers": [3, 148], "through": [3, 4, 7, 14, 46, 47, 112, 138, 139, 140, 147, 228, 229, 231, 232, 234, 236], "in_keys_inv": [3, 67, 88, 228, 231, 236], "append_transform": [3, 25, 26, 27, 28, 77, 85, 228, 236, 237], "doubletofloat": [3, 201, 204, 209, 211, 214, 222, 228, 231], "float32": [3, 11, 12, 14, 19, 25, 29, 32, 45, 50, 57, 58, 59, 67, 74, 85, 87, 100, 114, 128, 129, 130, 132, 134, 135, 136, 137, 140, 141, 143, 144, 201, 204, 206, 209, 211, 214, 229, 231, 232, 234, 235, 236, 237], "float64": [3, 23, 41, 44, 46, 47, 58, 59, 65, 77, 85, 89, 92, 137, 231, 236], "regist": [3, 23, 24, 41, 44, 46, 47, 65, 83, 88, 89, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147, 226, 234], "log": [3, 7, 106, 120, 125, 138, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 190, 191, 193, 196, 216, 226, 229, 234, 237], "tool": [4, 236], "context": [4, 7, 23, 41, 42, 44, 46, 47, 115, 166, 167, 169, 172, 173, 176, 193, 228, 229, 232, 234], "real": [4, 138], "world": [4, 45, 142, 156, 236], "system": 4, "robot": [4, 6, 77, 92], "game": 4, "adopt": [4, 228, 236], "interact": [4, 6, 7, 14, 138, 236], "histor": 4, "wa": [4, 6, 41, 44, 46, 47, 89, 158, 164, 228, 229, 231, 237], "ceas": 4, "maintain": [4, 8], "fork": 4, "gymnasium": 4, "farama": 4, "foundat": 4, "document": [4, 6, 23, 41, 44, 46, 47, 89, 237], "further": 4, "detail": [4, 5, 6, 23, 41, 44, 46, 47, 89, 143, 150, 154, 160, 204, 223, 231, 235], "usag": [4, 6, 163], "known": [4, 6, 7, 228], "gone": 4, "bc": [4, 237], "break": [4, 11, 12, 14, 23, 41, 44, 46, 47, 93, 228, 229, 234, 237], "chang": [4, 6, 23, 35, 36, 37, 38, 41, 44, 46, 47, 89, 93, 228, 232, 235, 236], "face": [4, 7, 8, 229, 236], "modif": [4, 19, 23, 41, 44, 46, 47, 228, 235], "practic": [4, 7, 110, 124, 125, 149, 223, 229, 232, 236], "torchrl": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 230, 231, 232, 233, 234, 235], "against": [4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 95, 137, 138], "13": [4, 9, 10, 232, 234], "between": [4, 11, 12, 14, 15, 23, 41, 44, 46, 47, 66, 73, 79, 87, 89, 95, 101, 112, 138, 156, 157, 159, 165, 169, 193, 196, 228, 229, 234, 235, 236], "howev": [4, 6, 23, 41, 44, 46, 47, 81, 84, 89, 228, 229, 235, 236], "around": [4, 6, 15, 27, 28, 45, 138, 169, 236], "construct": [4, 23, 41, 44, 46, 47, 122, 138, 196, 201, 209, 234, 236], "automat": [4, 41, 44, 46, 47, 74, 127, 135, 229, 237], "wrap": [4, 11, 12, 14, 15, 23, 41, 44, 46, 47, 95, 128, 129, 130, 142, 228, 229, 234, 236], "best": [4, 8, 229, 237], "gymwrapp": [4, 44, 222, 237], "If": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 44, 45, 46, 47, 48, 63, 64, 66, 68, 73, 77, 81, 82, 84, 88, 89, 92, 93, 101, 111, 112, 131, 133, 134, 137, 138, 139, 140, 146, 147, 149, 156, 163, 168, 169, 170, 171, 177, 178, 192, 196, 197, 199, 201, 209, 211, 214, 216, 220, 223, 228, 229, 231, 234, 235, 236, 237], "you": [4, 5, 6, 7, 9, 23, 41, 44, 46, 47, 93, 223, 228, 229, 231, 232, 235, 236, 237], "feel": [4, 223, 237], "free": [4, 6, 150, 156, 160, 226, 237], "gladli": 4, "instruct": [5, 6, 9], "prepar": 5, "conda": [5, 6, 223], "assum": [5, 19, 24, 28, 44, 46, 47, 77, 81, 85, 92, 111, 163, 174, 175, 177, 178, 180, 228, 229, 231], "let": [5, 6, 23, 41, 44, 46, 47, 193, 228, 229, 231, 232, 234, 235, 236, 237], "n": [5, 6, 17, 20, 23, 24, 41, 44, 46, 47, 62, 66, 114, 138, 150, 168, 226, 228, 229, 235, 236], "7": [5, 9, 20, 24, 100, 101, 111, 112, 114, 228, 229, 232, 237], "cmake": 5, "14": [5, 10, 74, 233], "activ": [5, 6, 8, 101, 108, 112, 160, 237], "sim": 5, "bullet": 5, "physic": [5, 6, 226, 228], "headless": [5, 6], "mode": [5, 14, 23, 41, 44, 46, 47, 89, 93, 96, 98, 106, 110, 120, 123, 124, 125, 138, 193, 228, 229, 236, 237], "cluster": [5, 6, 7, 223], "withbullet": 5, "forg": [5, 6], "aihabitat": 5, "nightli": 5, "y": [5, 6, 111, 146], "git": [5, 6, 9], "facebookresearch": 5, "subdirectori": 5, "reduc": [5, 20], "verbos": 5, "export": 5, "magnum_log": 5, "quiet": 5, "habitat_sim_log": 5, "remov": [5, 23, 41, 44, 46, 47, 83, 228, 236], "command": [5, 6, 9, 236], "more": [5, 7, 11, 12, 14, 15, 23, 25, 26, 27, 28, 41, 44, 46, 47, 94, 112, 115, 117, 131, 133, 137, 143, 150, 154, 160, 169, 172, 173, 176, 192, 204, 223, 226, 228, 229, 231, 232, 234, 235, 236], "readm": [5, 6], "md": [5, 6], "habitatenv": [5, 222], "_has_habitat": 5, "_env": [5, 236], "available_env": [5, 49, 50, 51, 52, 53, 54, 56, 57, 236], "startswith": 5, "oserror": 5, "could": [5, 229, 232, 235, 236], "load": [5, 11, 12, 14, 15, 25, 26, 27, 52, 220, 226, 229], "libllvmlit": 5, "solut": [5, 6, 7, 8, 223, 226, 237], "ionstal": 5, "miss": [5, 6, 10, 19, 23, 41, 44, 46, 47, 89, 139, 140, 223], "add": [5, 23, 25, 26, 27, 28, 39, 40, 41, 44, 46, 47, 115, 150, 192, 228, 229, 235, 237], "pointer": [5, 42, 235], "replac": [5, 6, 23, 66, 229], "path": [5, 6, 23, 35, 41, 44, 46, 47, 77, 92, 114, 196, 226], "env_nam": [5, 49, 51, 53, 55, 56, 228, 236], "llvmlite": 5, "config": [5, 6, 77, 92, 199, 201, 202, 203, 204, 206, 209, 211, 212, 214, 217], "var": [5, 6, 23, 41, 44, 46, 47, 89], "ld_preload": [5, 6], "python3": [5, 6, 9, 229], "8": [5, 6, 50, 101, 102, 103, 109, 112, 128, 129, 130, 135, 137, 140, 232, 234, 237], "site": [5, 6, 229], "deactiv": [5, 6], "importerror": [5, 6, 9], "usr": [5, 6, 9], "x86_64": [5, 6], "linux": [5, 6], "gnu": [5, 6], "libopengl": [5, 6], "undefin": [5, 6, 9, 23, 41, 44, 46, 47, 89], "symbol": [5, 6, 9], "_glapi_tls_curr": [5, 6], "link": [5, 6], "right": [5, 6, 111, 228, 229, 236], "mujoco_env": [5, 6], "proper": [5, 6], "name": [5, 6, 10, 23, 41, 44, 46, 47, 51, 68, 81, 82, 89, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 181, 183, 184, 185, 187, 191, 192, 201, 204, 206, 209, 211, 214, 226, 228, 229, 234, 236], "libglvnd": [5, 6], "glx": [5, 6], "cos7": [5, 6], "reinstal": [5, 6], "xvfbwrapper": [5, 6], "sysroot": [5, 6], "lib64": [5, 6], "libgldispatch": [5, 6], "offici": 6, "repositori": 6, "stand": [6, 128, 129, 130, 231, 236], "joint": [6, 229], "dynam": 6, "contact": 6, "engin": 6, "facilit": [6, 76, 77, 92, 128, 129, 130, 228], "develop": [6, 237], "biomechan": 6, "graphic": 6, "anim": 6, "machin": [6, 23], "area": 6, "demand": [6, 236], "fast": [6, 8, 50, 161, 228, 229], "accur": [6, 228], "articul": 6, "recent": [6, 229, 236], "acquir": [6, 228], "access": [6, 7, 23, 41, 44, 46, 47, 48, 77, 220, 223, 235], "whomev": 6, "licenc": 6, "incorpor": [6, 228], "make": [6, 23, 38, 41, 44, 46, 47, 54, 57, 74, 77, 95, 99, 115, 138, 160, 203, 220, 228, 229, 231, 232, 234, 235, 236, 237], "relianc": 6, "obsolet": 6, "seri": [6, 7, 24, 39, 40, 47, 73, 88, 180, 236], "keep": [6, 7, 12, 74, 77, 92, 93, 134, 190, 196, 229, 235, 236, 237], "legaci": 6, "capabl": [6, 226, 228, 231, 232, 236], "glfw": 6, "osmesa": 6, "egl": 6, "hand": [6, 228], "gpu": [6, 7, 23, 41, 44, 46, 47, 236], "our": [6, 7, 228, 229, 231, 232, 234, 235, 237], "advic": [6, 236], "sudo": [6, 223], "enabl": [6, 7, 134, 193], "apt": 6, "libglfw3": 6, "libglew2": 6, "libgl1": 6, "mesa": 6, "libosmesa6": 6, "via": [6, 7, 46, 77, 88, 92, 152, 226, 228, 236], "awar": [6, 35, 36, 37, 38], "fact": [6, 7, 229, 232, 236], "indent": 6, "workflow": [6, 128, 129, 130], "glew": 6, "mesalib": 6, "anaconda": 6, "libgl": 6, "cos6": 6, "menpo": 6, "glfw3": 6, "both": [6, 23, 41, 42, 44, 46, 47, 89, 101, 112, 128, 129, 130, 193, 228, 232, 234, 236], "tell": 6, "variabl": [6, 7, 20, 24, 114, 128, 129, 130, 161, 226, 234], "mujoco_gl": 6, "pyopengl_platform": 6, "pre": [6, 23, 36, 41, 44, 46, 47, 77, 92, 236], "binari": [6, 17, 24, 61, 143, 144], "releas": [6, 9, 23, 41, 44, 46, 47, 89, 237], "need": [6, 7, 9, 23, 38, 41, 44, 46, 47, 65, 77, 83, 88, 89, 90, 91, 92, 93, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 115, 117, 118, 119, 121, 122, 131, 133, 134, 137, 147, 149, 161, 168, 180, 196, 220, 228, 234, 235, 236, 237], "These": [6, 77, 92, 236], "instead": [6, 7, 20, 23, 41, 44, 46, 47, 65, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147, 220, 228, 229, 234, 236], "refer": [6, 7, 23, 41, 44, 46, 47, 89, 93, 100, 108, 114, 118, 119, 121, 122, 143, 150, 154, 155, 156, 157, 160, 169, 172, 173, 176, 204, 229], "setup": 6, "mkdir": 6, "cd": 6, "here": [6, 7, 8, 9, 228, 229, 231, 232, 234, 235, 236, 237], "tag": [6, 180, 183, 220], "earlier": [6, 11, 12, 14, 15, 228], "roboti": 6, "u": [6, 9, 228, 232, 234, 236, 237], "download": [6, 9, 77, 92, 228, 229, 230, 231, 232, 234, 235, 236, 237], "html": 6, "wget": 6, "mujoco210": 6, "tar": 6, "gz": 6, "xf": 6, "charg": 6, "obtain": [6, 44, 77, 92, 100, 228, 229], "mjkei": 6, "txt": 6, "mjlib_path": 6, "home": [6, 229, 232], "bin": 6, "libmujoco210": 6, "ld_library_path": 6, "mujoco_py_mujoco_path": 6, "mujoco_py_mjkey_path": 6, "reload": 6, "recommend": [6, 235], "hard": [6, 158, 229, 236], "later": [6, 105, 138, 228, 229], "try": [6, 7, 146, 229, 235, 236, 237], "nativ": [6, 8, 41, 44, 46, 47, 62, 234], "local": [6, 9, 14, 23, 41, 44, 46, 47, 89, 183], "modifi": [6, 7, 23, 41, 44, 46, 47, 65, 77, 85, 88, 89, 92, 134, 137, 198, 201, 209, 211, 214, 228, 234], "nvidia": 6, "driver": 6, "older": 6, "hack": 6, "line": [6, 23, 41, 44, 46, 47, 229], "adatp": 6, "script": [6, 201, 204, 206, 209, 211, 214, 216, 220, 226, 228, 229, 231, 232, 234, 235, 236, 237], "go": [6, 232, 234, 236], "unnot": 6, "until": 6, "complet": [6, 8, 44, 223, 229, 231], "mujoco_pi": 6, "trigger": 6, "pipelin": 6, "troubleshoot": 6, "gl": 6, "h": [6, 64, 78, 87, 114, 180], "eglshim": 6, "10": [6, 19, 42, 45, 58, 59, 87, 100, 111, 114, 133, 134, 161, 162, 163, 169, 170, 171, 188, 226, 228, 229, 234, 235, 236, 237], "fatal": 6, "No": 6, "directori": [6, 35, 183, 226], "sure": [6, 38, 99, 220, 228, 234, 235, 236, 237], "glu": 6, "38": 6, "disappear": [6, 231], "filenotfounderror": 6, "errno": 6, "patchelf": 6, "fatalerror": 6, "gladloadgl": 6, "mj_env": 6, "__init__": [6, 45, 100, 114, 141, 143, 146, 226, 234, 236], "912": 6, "glfwerror": 6, "65537": 6, "sovl": 6, "myscript": 6, "cymj": 6, "linuxgpuextensionbuild": 6, "filenam": 6, "runtimeerror": [6, 7, 23, 41, 44, 46, 47, 89, 228, 235, 236], "job": [6, 235], "schedul": [6, 193], "slurm": 6, "mjrendercontext": 6, "pyx": 6, "46": 6, "114": 6, "_setup_opengl_context": 6, "opengl_context": 6, "130": 6, "offscreenopenglcontext": 6, "fail": [6, 95], "opengl": 6, "global": [6, 138, 226, 228, 234], "cuda_visible_devic": 6, "id": [6, 16, 134, 161, 186, 211], "slurm_step_gpu": 6, "enviro": [6, 9], "imag": [6, 51, 64, 77, 87, 92, 112, 229, 232, 235, 236], "black": 6, "read": [6, 11, 12, 14, 15, 35, 36, 37, 38, 44, 46, 47, 48, 88, 120, 128, 129, 130, 137, 138, 140, 142, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 169, 170, 171, 180, 196, 201, 209, 211, 214, 228, 229, 231, 232, 234, 236], "onscreen": 6, "101": 6, "displai": [6, 196, 226, 229], "correctli": [6, 23, 41, 44, 46, 47], "cannot": [6, 19, 235], "scratch": [7, 228, 229], "loop": [7, 11, 12, 14, 15, 44, 99, 196, 226, 228, 231, 235], "sketch": [7, 226], "ob": [7, 19, 67, 74, 87, 141, 169, 170, 171, 228, 231, 236, 237], "_": [7, 42, 63, 66, 67, 74, 87, 93, 137, 149, 169, 170, 171, 228, 229, 234, 237], "rang": [7, 10, 20, 42, 93, 99, 159, 226, 228, 229, 234, 235, 237], "n_training_step": 7, "datapoint": 7, "onlin": [7, 11, 15, 150, 160, 188, 220], "n_data_per_train": 7, "no_grad": [7, 23, 41, 44, 46, 47, 228, 229], "append": [7, 25, 26, 27, 28, 42, 99, 228, 229, 232, 235, 237], "replay_buff": [7, 32, 33, 34, 35, 36, 37, 38, 39, 40, 216, 228, 229], "extend": [7, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 226, 228, 229, 232, 237], "loss": [7, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 192, 196, 200, 205, 207, 208, 210, 211, 213, 216, 226, 228, 229, 235, 237], "offlin": [7, 11, 12, 14, 15, 226, 232, 237], "loss_fn": [7, 237], "backward": [7, 23, 41, 44, 46, 47, 93, 228, 229, 235], "zero_grad": [7, 23, 41, 44, 46, 47, 226, 228, 229, 235], "backpropag": [7, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163], "decor": [7, 10], "differenti": [7, 169, 170, 171, 228], "pai": [7, 229], "attent": [7, 229, 234], "understand": [7, 228, 229], "denomin": 7, "probabl": [7, 106, 120, 125, 138, 229, 234, 237], "artifact": 7, "numer": [7, 93, 110, 124, 125, 137, 138, 235, 236], "misconcept": 7, "directli": [7, 45, 220, 229], "save": [7, 23, 41, 44, 46, 47, 179, 196, 226, 229], "alreadi": [7, 23, 41, 44, 46, 47, 138, 228, 229], "freed": 7, "appear": [7, 24], "compuat": 7, "twice": [7, 163], "fix": [7, 85, 163, 236], "retain_graph": 7, "lead": [7, 9, 10, 19, 110, 124, 125, 237], "discuss": [7, 8], "inplac": [7, 23, 41, 44, 46, 47, 228], "flag": [7, 25, 26, 27, 28, 172, 173, 174, 175, 176, 177, 178, 232], "reason": [7, 23, 41, 44, 46, 47, 77, 228, 229], "updat": [7, 11, 12, 14, 15, 23, 32, 41, 44, 45, 46, 47, 89, 91, 93, 100, 114, 134, 137, 138, 150, 158, 160, 164, 169, 170, 171, 193, 196, 197, 202, 203, 215, 216, 226, 228, 229, 234, 236, 237], "critic": [7, 128, 150, 151, 159, 160, 162, 163, 234], "accumul": 7, "onto": [7, 24, 131, 133, 137, 138], "separ": [7, 11, 12, 15, 16, 77, 92, 152, 161, 163, 228, 236], "exclud": [7, 46, 47, 68, 228], "forward": [7, 23, 41, 44, 46, 47, 65, 77, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 115, 117, 118, 119, 121, 122, 131, 133, 134, 137, 138, 141, 143, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 169, 170, 171, 228, 229, 234, 237], "submodul": [7, 23, 41, 44, 46, 47], "param": [7, 23, 41, 44, 45, 46, 47, 106, 123, 135, 136, 137, 140, 141, 143, 144, 164, 167, 169, 170, 171, 204, 228, 229, 232, 234, 237], "grad": [7, 23, 41, 44, 46, 47, 229], "whose": [7, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 65, 77, 85, 89, 92, 117, 137, 228], "norm": [7, 196, 229], "strictli": [7, 23, 41, 44, 46, 47, 89], "neg": [7, 11, 12, 14, 15, 25, 27, 32, 62, 155, 228], "ask": [7, 232, 236], "core": [7, 201, 204, 206, 209, 211, 214, 226, 237], "much": [7, 25, 27, 32, 159, 160, 235, 236], "upon": 7, "factor": [7, 23, 110, 116, 124, 125, 134, 150, 151, 152, 153, 154, 155, 157, 159, 160, 161, 228, 229, 236], "fit": [7, 10, 74, 226], "everi": [7, 11, 12, 15, 19, 23, 24, 38, 41, 44, 46, 47, 65, 83, 88, 90, 91, 93, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147, 196, 226, 228, 229, 235], "bottlneck": 7, "affect": [7, 23, 41, 44, 46, 47, 88, 89], "brax": [7, 49, 50, 236], "jax": 7, "improperli": 7, "item": [7, 11, 69, 152, 153, 188, 226, 228, 229, 235], "underli": 7, "manipul": [7, 77, 236], "tedeiou": 7, "priorit": [7, 25, 27, 32, 152, 153, 161, 163, 228, 229], "amount": [7, 46, 47, 134], "isn": [7, 137], "contigu": [7, 235, 236, 237], "costli": 7, "concaten": [7, 21, 22, 62, 63, 74, 88, 112, 140, 228, 229, 235, 236], "constitut": 7, "plain": 7, "profil": 7, "indic": [7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 44, 46, 47, 63, 84, 85, 101, 112, 134, 147, 199, 220, 223, 226, 228, 234, 235, 236], "fulli": [7, 23, 41, 44, 46, 47, 229], "frequent": 7, "techniqu": [7, 229], "target": [7, 23, 41, 42, 44, 46, 47, 88, 137, 138, 152, 153, 154, 157, 158, 159, 161, 163, 164, 168, 169, 170, 171, 198, 215, 216, 226, 228, 229], "program": [7, 236], "incl": 7, "suit": [7, 52, 236], "mujoco_instal": 7, "valueerror": 7, "bad": 7, "fds_to_keep": 7, "One": [7, 120, 131, 133, 137, 165, 187, 228, 234, 235, 236], "view": [7, 20, 23, 24, 41, 44, 46, 47, 112, 143, 228, 235, 236, 237], "expand": [7, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 137, 140, 234, 237], "new_shap": 7, "origin": [7, 11, 12, 14, 15, 77, 89, 92, 137, 138, 158, 160, 211, 214, 231, 235, 236], "content": [7, 14, 101, 112, 229, 235, 237], "lost": 7, "permut": [7, 235, 236, 237], "clone": [7, 128, 129, 130, 137, 201, 209, 211, 214, 228, 229, 234, 235, 237], "spin": [8, 236], "hug": 8, "syllabu": 8, "lectur": 8, "awesom": [8, 235], "curat": 8, "succinct": 8, "summari": [8, 74, 93], "reddit": 8, "reagent": 8, "product": [8, 218, 219], "orient": [8, 236], "stabl": [8, 9, 228], "baselines3": 8, "tf": 8, "agent": [8, 116], "bandit": 8, "tensorflow": 8, "kera": 8, "acm": 8, "framework": [8, 45, 236, 237], "dopamin": 8, "prototyp": 8, "salina": 8, "flexibl": [8, 226, 234, 236], "simpl": [8, 23, 24, 41, 44, 46, 47, 102, 138, 162, 169, 228, 229, 235, 236], "sequenti": [8, 23, 41, 44, 46, 47, 139, 140, 232, 234, 235, 236], "tianshou": 8, "eleg": 8, "rlpyt": 8, "rllib": 8, "industri": [8, 237], "grade": 8, "factori": 8, "throughput": 8, "cherri": 8, "jaxrl": 8, "space": [8, 24, 29, 66, 119, 131, 133, 134, 137, 138, 140, 143, 144, 228, 236, 237], "mbrl": [8, 45], "rlmeta": 8, "light": 8, "elegantrl": 8, "cloud": 8, "mtrl": 8, "baselin": [8, 229], "689": 9, "dist": 9, "_torchrl": 9, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 9, "colab": 9, "notebook": [9, 228, 229, 230, 231, 232, 234, 235, 236, 237], "24": [9, 232], "11": [9, 20, 24, 42, 87, 100, 114], "2022": [9, 237], "12": [9, 229, 233, 235], "pip": [9, 236, 237], "solv": [9, 223, 228, 229], "pip3": 9, "extra": [9, 23, 41, 44, 46, 47, 93], "url": 9, "org": [9, 25, 32, 62, 77, 102, 103, 104, 105, 108, 109, 114, 116, 118, 119, 121, 122, 134, 143, 150, 154, 155, 156, 157, 158, 160, 162, 163, 164, 169, 172, 173, 176, 201, 204, 209, 214, 232], "whl": 9, "latest": [9, 237], "There": [9, 226, 229, 236], "upgrad": 9, "previou": [9, 23, 122, 228, 234, 236], "relas": 9, "lib_version_her": 9, "module_nam": 10, "str": [10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 35, 41, 43, 44, 46, 47, 51, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 74, 75, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 92, 93, 96, 98, 100, 101, 102, 103, 104, 105, 109, 111, 112, 113, 114, 115, 116, 117, 127, 131, 132, 133, 134, 135, 137, 138, 141, 143, 144, 145, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 195, 199, 201, 204, 209, 211, 212, 214, 220, 228], "from_vers": 10, "to_vers": 10, "explicit": [10, 111, 228, 229], "intersect": 10, "longer": [10, 229], "fun": [10, 234, 235], "self": [10, 23, 41, 44, 45, 46, 47, 65, 77, 85, 89, 92, 100, 114, 131, 133, 137, 141, 143, 146, 226, 229, 234, 235, 237], "x": [10, 16, 19, 23, 87, 101, 107, 109, 111, 112, 114, 143, 146, 147, 149, 172, 173, 174, 175, 176, 177, 178, 180, 196, 229, 234, 237], "doesn": 10, "create_env_fn": [11, 12, 14, 15, 42, 46, 47, 228, 237], "sequenc": [11, 12, 14, 15, 19, 21, 22, 25, 26, 39, 40, 61, 62, 63, 64, 67, 70, 72, 74, 75, 78, 79, 80, 81, 86, 87, 88, 93, 101, 106, 112, 120, 127, 135, 138, 139, 140, 141, 179, 180, 192, 195, 196, 201, 209, 211, 214, 229, 231, 234, 236], "callabl": [11, 12, 14, 15, 23, 25, 26, 27, 41, 42, 44, 45, 46, 47, 149, 202, 203, 218, 219, 220], "union": [11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 41, 44, 46, 47, 60, 65, 74, 77, 80, 89, 92, 93, 101, 102, 103, 104, 105, 106, 109, 111, 112, 115, 116, 120, 123, 124, 125, 134, 135, 137, 138, 139, 145, 146, 148, 153, 154, 158, 161, 163, 164, 169, 170, 171, 201, 202, 203, 204, 209, 211, 212, 214, 216, 217, 218, 219, 220], "tensordictbas": [11, 12, 14, 15, 16, 19, 23, 27, 28, 41, 43, 44, 46, 47, 48, 62, 65, 68, 73, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 99, 100, 113, 114, 131, 133, 134, 137, 138, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 168, 169, 170, 171, 196], "total_fram": [11, 12, 14, 15, 196, 198, 216, 226, 228, 229, 237], "int": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 51, 58, 60, 62, 63, 64, 65, 66, 70, 71, 73, 74, 77, 78, 83, 84, 86, 89, 90, 92, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 121, 122, 123, 124, 131, 133, 134, 136, 137, 138, 143, 144, 150, 151, 152, 155, 156, 157, 159, 160, 161, 163, 179, 180, 188, 189, 190, 193, 196, 197, 201, 204, 209, 211, 212, 214, 218, 219, 220], "create_env_kwarg": [11, 12, 14, 15, 42, 46, 47, 228], "dict": [11, 12, 14, 15, 19, 20, 21, 23, 41, 42, 44, 46, 47, 89, 93, 101, 102, 103, 104, 105, 109, 111, 112, 138, 183, 187, 193, 202, 203, 204, 211, 214, 218, 219, 220, 236], "200": [11, 12, 14, 15, 23, 41, 44, 46, 47, 58, 59, 102, 103, 108, 121, 122, 228], "postproc": [11, 12, 14, 15, 228, 229], "pin_memori": [11, 14, 15, 25, 26, 27, 46, 47, 76, 228, 237], "init_with_lag": [11, 12, 14, 15], "given": [11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 45, 46, 47, 65, 66, 74, 77, 85, 89, 92, 99, 100, 108, 114, 134, 137, 138, 139, 140, 143, 144, 149, 152, 153, 168, 169, 170, 171, 189, 193, 216, 226, 228, 229, 234, 236], "datacollector": [11, 12, 14, 15, 138], "synchron": [11, 218, 219], "recept": 11, "safe": [11, 12, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 131, 134, 137, 138, 145, 228, 237], "env_mak": [11, 12, 14, 216, 236], "linear": [11, 12, 14, 23, 41, 44, 45, 46, 47, 65, 77, 85, 89, 92, 100, 101, 112, 114, 115, 116, 117, 121, 122, 127, 128, 129, 130, 133, 134, 135, 136, 137, 140, 141, 143, 144, 146, 169, 170, 171, 216, 231, 232, 234, 237], "2000": [11, 12, 14, 228], "50": [11, 12, 14], "enumer": [11, 12, 14, 23, 41, 44, 46, 47, 228, 229, 237], "step_count": [11, 12, 14, 84, 228, 229, 237], "int64": [11, 12, 14, 17, 20, 21, 22, 24, 132, 134, 136, 143, 144, 206, 229, 236, 237], "traj_id": [11, 12, 14, 16, 228, 237], "shutdown": [11, 12, 14, 15, 228, 237], "del": [11, 12, 14, 228, 237], "bound": [11, 12, 14, 15, 18, 19, 23, 41, 44, 46, 47, 93, 121, 122, 134, 137, 138, 236], "total": [11, 12, 14, 15, 17, 21, 22, 24, 44, 151, 159, 160, 188, 190, 193, 196, 198, 199, 228, 229, 231, 232, 233, 234, 235, 236, 237], "greater": [11, 12, 15, 228, 229, 237], "close": [11, 12, 14, 15, 44, 151, 159, 160, 228, 237], "signal": [11, 12, 15, 228], "sent": [11, 12, 15, 35, 36, 46, 47, 93, 229, 235], "server": [11, 12, 15], "per": [11, 12, 14, 15, 46, 108, 196, 218, 219, 228, 229, 237], "span": [11, 12, 14, 15], "unless": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 234], "traje": [11, 12], "tori": [11, 12], "n_steps_max": [11, 12, 14, 15, 23, 228], "track": [11, 12, 14, 15, 81, 93, 134, 183, 190, 228, 229, 235], "independ": [11, 12, 14, 15, 88, 163, 226, 228, 237], "ignor": [11, 12, 14, 15, 23, 41, 44, 46, 47, 65, 68, 82, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147, 234, 235, 236], "length": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 46, 47, 100, 101, 102, 104, 107, 112, 114, 137, 188, 228, 229, 235, 236], "mainli": [11, 12, 14, 15], "postprocessor": [11, 12, 15], "format": [11, 12, 14, 15, 23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137, 236], "accord": [11, 12, 14, 15, 48, 74, 80, 110, 115, 121, 124, 125, 234, 235], "split_trajectori": [11, 12, 14, 15, 222], "inform": [11, 12, 14, 15, 23, 41, 42, 44, 46, 47, 101, 112, 226, 229], "place": [11, 12, 14, 15, 19, 23, 41, 42, 44, 46, 47, 48, 65, 77, 85, 89, 92, 93, 137, 197, 198, 229, 234], "accommod": [11, 12, 14, 15], "kept": [11, 12, 14, 15, 46, 47, 66, 88, 99, 110, 124, 125], "long": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 66, 229, 235], "truncat": [11, 12, 14, 15, 125, 236], "help": [11, 12, 14, 15, 23, 41, 44, 46, 47, 223, 228], "desynchron": [11, 12, 14, 15], "load_state_dict": [11, 12, 14, 15, 23, 41, 44, 46, 47, 89, 93, 226], "state_dict": [11, 12, 14, 15, 23, 41, 44, 46, 47, 89, 93, 220, 226, 236], "ordereddict": [11, 12, 14, 15, 23, 41, 44, 46, 47, 89, 93], "form": [11, 12, 15, 23, 25, 26, 27, 41, 44, 46, 47, 93, 149, 151, 159, 160, 196], "worker0": [11, 12, 15], "state_dict0": [11, 12, 15], "worker1": [11, 12, 15], "state_dict1": [11, 12, 15], "reset_idx": [11, 12, 15], "static_se": [11, 12, 14, 15, 41, 44, 46, 47, 89], "increment": [11, 12, 14, 15, 41, 44, 46, 47, 84, 159], "last": [11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 70, 74, 86, 101, 111, 112, 118, 131, 133, 229, 232, 236, 237], "env_fn": [11, 12, 14, 15, 42, 218, 219], "v0": [11, 12, 15, 44, 53, 54, 56, 57, 65, 89, 93, 216], "env_fn_parallel": [11, 12, 14, 15], "6": [11, 12, 14, 15, 57, 74, 101, 106, 111, 112, 123, 141, 201, 204, 206, 209, 211, 214, 228, 229, 232, 234, 235, 236, 237], "out_se": [11, 12, 14, 15, 236], "shut": [11, 12, 14, 15], "down": [11, 12, 14, 15], "irrevers": [11, 12, 15], "arg": [12, 19, 23, 35, 36, 41, 42, 44, 45, 46, 47, 77, 83, 89, 90, 91, 92, 101, 112, 127, 128, 132, 136, 185, 190, 196, 220], "kwarg": [12, 14, 15, 19, 23, 35, 36, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 77, 83, 85, 89, 90, 91, 92, 101, 102, 103, 104, 105, 109, 110, 112, 113, 120, 123, 125, 127, 128, 132, 135, 136, 138, 151, 159, 168, 180, 183, 185, 187, 190, 196, 201, 202, 203, 204, 209, 211, 214, 217, 218, 219], "envcreat": [14, 216, 217, 220, 222, 228, 229, 236, 237], "return_same_td": 14, "stop": [14, 41, 44, 46, 47, 236, 237], "equat": [14, 134, 149, 151, 164], "exce": 14, "batcher": 14, "cautious": [14, 160], "ad": [14, 23, 25, 26, 27, 28, 32, 41, 44, 46, 47, 48, 81, 89, 115, 116, 134, 151, 159, 160, 228, 236], "whole": [14, 23, 41, 44, 46, 47, 89, 188, 229], "ident": [14, 46, 47, 218, 219, 228, 234, 235], "yield": [14, 23, 41, 44, 46, 47], "chunk": 14, "policy_state_dict": 14, "env_state_dict": 14, "singl": [15, 23, 25, 26, 27, 28, 41, 44, 46, 47, 48, 62, 63, 77, 87, 92, 101, 111, 112, 140, 154, 161, 174, 175, 177, 178, 211, 220, 228, 229, 231, 232, 234], "paradigm": 15, "prefer": [15, 82], "mere": 15, "rollout_tensordict": 16, "zero": [16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 63, 66, 74, 100, 111, 133, 134, 147, 169, 170, 171, 234, 235, 237], "max": [16, 24, 66, 86, 123, 124, 125, 151, 161, 163, 228], "durat": [16, 229], "discret": [17, 20, 21, 22, 24, 31, 66, 120, 143, 144, 154], "dimens": [17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 62, 63, 70, 74, 83, 87, 90, 101, 112, 115, 116, 123, 124, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 169, 170, 171, 220, 228, 235], "5": [17, 42, 57, 58, 59, 100, 101, 108, 110, 111, 112, 114, 124, 125, 132, 136, 143, 144, 159, 228, 229, 232, 235, 236, 237], "assert_is_in": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "belong": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "otherwis": [17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 66, 74, 85, 89, 93, 110, 124, 125, 156, 163, 193, 226, 228, 236], "encod": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 66, 119, 120, 121, 132, 136, 143, 144, 149, 234], "val": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 237], "ndarrai": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 44, 134], "np": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 44, 228], "tupl": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 44, 46, 47, 60, 74, 102, 111, 112, 117, 152, 155, 169, 170, 171, 205, 207, 210, 213, 235], "compli": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 228, 235], "current": [17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 41, 44, 46, 47, 48, 55, 89, 96, 108, 111, 122, 134, 143, 144, 186, 201, 209, 226, 228, 236, 237], "least": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "complient": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "singleton": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 101, 112], "slice": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 235], "tensor_to_index": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "is_in": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 236], "project": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 66, 131, 133, 134, 137, 138, 229, 236, 237], "back": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 137, 138, 228], "rand": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 45, 50, 57, 100, 114, 236, 237], "uniform": [17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32], "unbound": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 235], "to_numpi": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "transformed_in": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 88, 89, 117, 123, 220], "type_check": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31], "fill": [17, 18, 19, 20, 21, 22, 24, 29, 30, 31, 85, 232, 235], "minimum": [18, 79, 108, 117, 123, 124, 125, 135, 147, 149, 163, 188, 228, 236, 237], "float": [18, 20, 23, 24, 25, 27, 30, 32, 41, 44, 46, 47, 65, 67, 74, 77, 79, 80, 85, 87, 89, 92, 93, 106, 108, 110, 114, 115, 116, 121, 122, 123, 125, 131, 133, 134, 137, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 194, 228, 229, 236], "upper": 18, "composit": 19, "unnam": 19, "effect": [19, 23, 41, 44, 46, 47, 81, 89, 196, 229, 236], "pixels_spec": 19, "boundedtensorspec": [19, 128, 129, 130, 133, 134, 135, 222, 236, 237], "32": [19, 58, 59, 101, 102, 103, 109, 112, 118, 119, 228, 229, 232, 236, 237], "observation_vector_spec": 19, "33": [19, 23, 41, 44, 46, 47, 101, 112], "composite_spec": 19, "observation_vector": [19, 63, 201, 204, 209, 211, 214, 228], "within": [19, 23, 28, 41, 44, 46, 47, 65, 83, 88, 90, 91, 93, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147, 237], "randn": [19, 74, 111, 117, 127, 128, 129, 130, 132, 135, 136, 137, 140, 141, 143, 144, 169, 170, 171, 195, 234, 235, 236, 237], "td_project": 19, "yield_nesting_kei": 19, "keysview": 19, "selected_kei": [19, 46, 47, 82, 228], "altern": [20, 149, 229, 235], "onehottensorspec": 20, "categor": [20, 24, 120, 143, 144], "larg": 20, "action_valu": [20, 24, 132, 136, 143, 144, 206, 229], "arang": [20, 24, 132, 143, 188], "argmax": [20, 132, 136, 143, 144], "dim": [20, 62, 63, 111, 220, 228, 229, 234, 235], "chosen_action_valu": [20, 24, 136, 206, 229], "outcom": [20, 24, 106, 123], "nvec": [21, 22], "cardin": [21, 22, 143, 144], "element": [21, 22, 24, 25, 26, 27, 28, 32, 35, 36, 37, 101, 131, 137, 138, 188, 228, 236], "ax": [21, 115, 116], "use_regist": [22, 24], "hot": [22, 24, 66, 120, 132, 136, 143, 144], "sum": [22, 24, 44, 156, 168, 228, 229, 236], "gamma": [23, 150, 151, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 216, 228, 229, 237], "present": [23, 25, 32, 41, 44, 46, 47, 48, 68, 81, 82, 102, 103, 104, 105, 109, 116, 134, 137, 138, 139, 140, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 220, 226, 228, 231, 237], "sutton": 23, "r": [23, 74, 138, 149, 168, 236], "1988": 23, "predict": [23, 108, 113, 114, 142, 154, 156, 157, 163, 168], "tempor": [23, 114, 170], "44": [23, 232], "discount": [23, 42, 150, 151, 152, 153, 154, 155, 157, 159, 160, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 228, 229], "ahead": [23, 236], "add_modul": [23, 41, 44, 46, 47], "child": [23, 41, 44, 46, 47, 235], "fn": [23, 41, 44, 46, 47, 117, 218, 219], "recurs": [23, 41, 44, 46, 47], "children": [23, 41, 44, 46, 47], "init": [23, 41, 44, 46, 47, 228, 229], "init_weight": [23, 41, 44, 46, 47], "m": [23, 41, 44, 46, 47, 66, 138, 228, 229], "fill_": [23, 41, 44, 46, 47, 229, 235, 236], "net": [23, 41, 44, 46, 47, 111, 161, 211, 216, 229, 232, 234, 237], "in_featur": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 101, 102, 103, 104, 105, 111, 112, 115, 116, 128, 137, 234, 237], "out_featur": [23, 41, 44, 45, 46, 47, 65, 77, 85, 89, 92, 100, 101, 102, 103, 104, 105, 108, 109, 111, 112, 114, 115, 116, 128, 132, 137, 228, 229, 234, 237], "bia": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 101, 108, 112, 115, 116, 117, 133, 134, 137, 147, 148, 149, 229, 237], "requires_grad": [23, 41, 44, 46, 47, 228], "bfloat16": [23, 41, 44, 46, 47], "cast": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 93, 137, 201, 204, 206, 209, 211, 214, 235, 236], "datatyp": [23, 41, 44, 46, 47], "direct": [23, 41, 44, 46, 47, 229], "member": [23, 41, 44, 46, 47], "xdoctest": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "skip": [23, 41, 44, 46, 47, 71, 89, 95, 138, 179, 180, 190, 193, 234], "buf": [23, 41, 44, 46, 47], "20l": [23, 41, 44, 46, 47], "1l": [23, 41, 44, 46, 47], "5l": [23, 41, 44, 46, 47], "immedi": [23, 41, 44, 46, 47, 168], "associ": [23, 41, 44, 46, 47, 121, 220, 234], "copi": [23, 41, 44, 46, 47, 89, 228, 229, 235], "doubl": [23, 25, 27, 30, 41, 44, 46, 47, 65, 67, 77, 85, 87, 89, 92, 137, 153, 154, 158, 161, 164, 228, 236], "eval": [23, 41, 44, 46, 47, 89, 93, 228, 229], "certain": [23, 41, 44, 46, 47, 71, 84, 89, 159, 228, 229, 235, 236], "particular": [23, 41, 44, 46, 47, 89, 226, 229, 231], "behavior": [23, 41, 44, 46, 47, 89], "dropout": [23, 41, 44, 46, 47, 89, 234], "batchnorm": [23, 41, 44, 46, 47, 89], "disabl": [23, 41, 44, 46, 47, 89, 110, 124, 125, 228], "comparison": [23, 41, 44, 46, 47, 89], "similar": [23, 41, 44, 46, 47, 65, 77, 85, 89, 91, 92, 93, 99, 137, 138, 228, 234, 236], "mechan": [23, 41, 44, 46, 47, 89], "confus": [23, 41, 44, 46, 47, 89], "extra_repr": [23, 41, 44, 46, 47], "represent": [23, 41, 44, 46, 47, 77, 92, 228, 229, 232, 236], "string": [23, 41, 44, 46, 47, 77, 92, 138, 149, 179, 195, 201, 209, 211, 214], "tennsordict": 23, "shift": [23, 147], "nontermin": [23, 228], "termin": [23, 139, 228, 229, 234, 237], "original_reward": [23, 228], "newli": 23, "get_buff": [23, 41, 44, 46, 47], "throw": [23, 41, 44, 46, 47, 236], "docstr": [23, 41, 44, 46, 47], "get_submodul": [23, 41, 44, 46, 47], "explan": [23, 41, 44, 46, 47], "how": [23, 25, 27, 32, 41, 44, 46, 47, 151, 158, 159, 160, 196, 223, 228, 229, 231, 232, 236, 237], "qualifi": [23, 41, 44, 46, 47], "referenc": [23, 41, 44, 46, 47], "attributeerror": [23, 41, 44, 46, 47], "invalid": [23, 41, 44, 46, 47], "resolv": [23, 41, 44, 46, 47], "someth": [23, 41, 44, 46, 47, 223, 236], "get_extra_st": [23, 41, 44, 46, 47, 93], "set_extra_st": [23, 41, 44, 46, 47, 93], "pickleabl": [23, 41, 44, 46, 47, 93], "ensur": [23, 25, 27, 32, 41, 44, 46, 47, 62, 77, 93, 145, 228], "guarante": [23, 35, 36, 37, 38, 41, 44, 46, 47, 93, 237], "pickl": [23, 41, 44, 46, 47, 93], "get_paramet": [23, 41, 44, 46, 47], "sai": [23, 41, 44, 46, 47, 232, 236], "net_b": [23, 41, 44, 46, 47], "net_c": [23, 41, 44, 46, 47], "conv": [23, 41, 44, 46, 47, 101], "conv2d": [23, 41, 44, 46, 47, 101, 237], "16": [23, 41, 44, 46, 47, 232], "kernel_s": [23, 41, 44, 46, 47, 101, 102, 103, 229, 237], "stride": [23, 41, 44, 46, 47, 101, 102, 103, 109, 229, 237], "100": [23, 41, 44, 46, 47, 74, 189, 196, 216, 228, 229, 231, 232, 236, 237], "diagram": [23, 41, 44, 46, 47], "show": [23, 41, 44, 46, 47, 229, 234, 237], "itself": [23, 41, 44, 46, 47, 84], "would": [23, 41, 44, 46, 47, 112, 226, 229, 234, 235, 236], "degre": [23, 41, 44, 46, 47], "named_modul": [23, 41, 44, 46, 47], "o": [23, 41, 44, 46, 47], "transit": [23, 41, 44, 46, 47, 142, 228, 229], "alwai": [23, 41, 44, 46, 47, 73, 229], "half": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137, 228], "ipu": [23, 41, 44, 46, 47], "strict": [23, 41, 44, 46, 47, 89], "descend": [23, 41, 44, 46, 47, 89], "exactli": [23, 41, 44, 46, 47, 55, 89], "persist": [23, 41, 44, 46, 47, 89], "enforc": [23, 41, 44, 46, 47, 89, 139], "missing_kei": [23, 41, 44, 46, 47, 89], "unexpected_kei": [23, 41, 44, 46, 47, 89], "unexpect": [23, 41, 44, 46, 47, 89, 236], "namedtupl": [23, 41, 44, 46, 47, 89], "duplic": [23, 41, 44, 46, 47, 153, 154, 235], "l": [23, 41, 44, 46, 47, 168], "idx": [23, 41, 44, 46, 47, 229, 235], "named_buff": [23, 41, 44, 46, 47, 229], "prefix": [23, 41, 44, 46, 47, 89, 179, 236], "prepend": [23, 41, 44, 46, 47], "running_var": [23, 41, 44, 46, 47], "named_children": [23, 41, 44, 46, 47], "conv4": [23, 41, 44, 46, 47], "conv5": [23, 41, 44, 46, 47], "memo": [23, 41, 44, 46, 47], "remove_dupl": [23, 41, 44, 46, 47], "named_paramet": [23, 41, 44, 46, 47, 229], "register_backward_hook": [23, 41, 44, 46, 47], "removablehandl": [23, 41, 44, 46, 47], "deprec": [23, 41, 44, 46, 47, 89, 236], "favor": [23, 41, 44, 46, 47], "register_full_backward_hook": [23, 41, 44, 46, 47], "futur": [23, 41, 44, 46, 47, 77, 89, 92, 112, 223, 237], "register_buff": [23, 41, 44, 46, 47], "running_mean": [23, 41, 44, 46, 47], "alongsid": [23, 41, 44, 46, 47], "latter": [23, 41, 44, 46, 47, 65, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147, 218, 219], "num_featur": [23, 41, 44, 46, 47], "register_forward_hook": [23, 41, 44, 46, 47, 143, 144], "signatur": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137, 146], "posit": [23, 25, 26, 27, 28, 41, 44, 46, 47, 71, 83, 84, 86, 89, 90, 117, 234], "won": [23, 41, 42, 44, 46, 47, 77, 92, 196, 220, 228], "register_forward_pre_hook": [23, 41, 44, 46, 47], "invok": [23, 41, 44, 46, 47], "respect": [23, 41, 44, 46, 47, 61, 65, 77, 85, 89, 92, 122, 137, 141, 192], "grad_input": [23, 41, 44, 46, 47], "grad_output": [23, 41, 44, 46, 47], "subsequ": [23, 41, 44, 46, 47], "entri": [23, 41, 44, 46, 47, 77, 92, 169, 170, 171, 232, 234], "technic": [23, 41, 44, 46, 47], "similarli": [23, 41, 44, 46, 47, 139, 140, 228, 234, 236], "caller": [23, 41, 44, 46, 47], "register_load_state_dict_post_hook": [23, 41, 44, 46, 47], "post": [23, 41, 44, 46, 47, 229], "incompatible_kei": [23, 41, 44, 46, 47], "consist": [23, 41, 44, 46, 47, 101, 112, 228, 229, 232, 236], "addit": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 131, 137, 149, 169, 229], "thrown": [23, 41, 44, 46, 47], "clearn": [23, 41, 44, 46, 47], "register_modul": [23, 41, 44, 46, 47, 226], "alia": [23, 41, 44, 46, 47], "register_paramet": [23, 41, 44, 46, 47], "requires_grad_": [23, 41, 44, 46, 47, 228], "autograd": [23, 41, 44, 46, 47, 89], "freez": [23, 41, 44, 46, 47], "finetun": [23, 41, 44, 46, 47], "individu": [23, 41, 44, 46, 47], "gan": [23, 41, 44, 46, 47], "share_memori": [23, 41, 42, 44, 46, 47, 228], "share_memory_": [23, 41, 44, 46, 47, 235, 237], "destin": [23, 41, 44, 46, 47, 89, 99], "keep_var": [23, 41, 44, 46, 47, 89], "averag": [23, 41, 44, 46, 47, 89, 93, 134, 155, 156, 194, 228, 234], "shallow": [23, 41, 44, 46, 47, 89], "pleas": [23, 41, 44, 46, 47, 89, 223], "design": [23, 24, 41, 44, 46, 47, 89, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 228, 229, 231, 235, 236], "detach": [23, 41, 44, 46, 47, 89, 228, 229], "non_block": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137, 229], "memory_format": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "channels_last": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "Its": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "complex": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137, 234], "integr": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 105, 114, 137, 232], "unchang": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "tri": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "convert": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 93, 137, 149, 235], "host": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "pin": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "4d": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "ignore_w": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "1913": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "3420": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "5113": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "2325": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "torch_doctest_cuda1": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "gpu1": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "1914": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "5112": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "2324": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "float16": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "cdoubl": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "3741": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "j": [23, 25, 32, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137, 226, 229], "2382": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "5593": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "4443": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "complex128": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "6122": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "1150": [23, 41, 44, 46, 47, 65, 77, 85, 89, 92, 137], "to_empti": [23, 41, 44, 46, 47], "dst_type": [23, 41, 44, 46, 47], "xpu": [23, 41, 44, 46, 47], "set_to_non": [23, 41, 44, 46, 47], "unidimension": [24, 235], "keepdim": 24, "user_regist": 24, "experiment": [24, 138], "priori": 24, "definit": [24, 38], "uniqu": 24, "discretebox": 24, "alpha": [25, 27, 32, 101, 161, 163, 228, 229, 237], "beta": [25, 27, 32, 159, 228, 229, 237], "ep": [25, 27, 32, 93, 134, 151, 164, 194], "1e": [25, 27, 32, 93, 106, 108, 117, 123], "08": [25, 27, 32, 228], "collate_fn": [25, 26, 27, 235, 237], "prefetch": [25, 26, 27, 228, 229], "schaul": [25, 32], "quan": [25, 32], "antonogl": [25, 32], "silver": [25, 32], "2015": [25, 32], "arxiv": [25, 32, 62, 77, 102, 103, 104, 105, 108, 109, 114, 116, 118, 119, 121, 122, 134, 143, 150, 154, 155, 156, 157, 158, 160, 163, 164, 169, 172, 173, 176, 201, 204, 209, 214, 232], "ab": [25, 32, 77, 93, 108, 109, 114, 116, 118, 119, 121, 122, 150, 155, 156, 157, 158, 160, 163, 201, 209, 232], "1511": [25, 32, 109], "05952": [25, 32], "expon": [25, 27, 32], "\u03b1": [25, 27, 32], "determin": [25, 27, 32, 77, 92, 134, 229], "delta": [25, 27, 32, 123, 138, 222], "prioriti": [25, 27, 28, 32, 35, 36, 37, 38, 152, 153, 161, 163, 226, 228, 229], "null": [25, 27, 32, 61, 228], "max_siz": [25, 26, 27, 35, 37, 38, 229], "1_000": [25, 26, 27], "merg": [25, 26, 27], "mini": [25, 26, 27], "style": [25, 26, 27], "rb": [25, 26, 27, 229, 232, 237], "multithread": [25, 26, 27], "insert_transform": [25, 26, 27, 28], "insert": [25, 26, 27, 28, 39, 40, 90, 229], "return_info": [25, 26, 27, 28], "sampler": [25, 26, 27, 28, 32, 33, 35, 36, 37, 38, 222, 228], "info": [25, 26, 27, 28, 41, 44, 46, 47, 58, 59, 94, 234], "select": [25, 26, 27, 28, 46, 47, 73, 82, 100, 195, 228, 229], "writer": [26, 39, 222], "randomsampl": [26, 222, 228], "roundrobinwrit": [26, 222], "priority_kei": [27, 28, 153, 154, 163, 237], "td_error": [27, 28, 152, 153, 154, 161, 163, 228, 237], "prioritizedreplaybuff": [27, 222, 237], "update_tensordict_prior": [27, 228, 237], "include_info": [27, 28], "kw": [28, 39], "replaybuff": [28, 40, 212, 216, 222, 232, 237], "meta": [29, 43, 226], "describ": [29, 63, 88, 123, 124, 186, 201, 209, 236], "max_capac": [32, 228], "update_prior": [32, 226, 228, 237], "uniformli": [33, 236], "scratch_dir": [35, 228], "memmap": [35, 46, 47, 93, 228], "attach": [35, 36, 37, 38, 229], "entiti": [35, 36, 37, 38], "made": [35, 36, 37, 38, 134, 228, 232], "eg": [35, 36, 37, 38], "alloc": 36, "__len__": 38, "roundrobin": 39, "piec": [39, 40], "_inplace_upd": [41, 46, 47, 89], "_batch_lock": [41, 46, 47, 89], "run_type_check": [41, 45], "compar": [41, 193, 229, 236], "batch_lock": [41, 43, 44, 46, 47, 89], "environn": [41, 44, 45, 46, 47, 89], "immut": [41, 44, 46, 47, 89, 201, 209], "fake_tensordict": [41, 44, 46, 47], "fake": [41, 44, 46, 47], "overridden": [41, 44, 46, 47, 65, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147], "recip": [41, 44, 46, 47, 65, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147], "afterward": [41, 44, 46, 47, 65, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147, 236], "former": [41, 44, 46, 47, 65, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147], "silent": [41, 44, 46, 47, 65, 83, 88, 90, 91, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 117, 118, 119, 121, 122, 131, 133, 134, 147], "_step": [41, 44, 46, 47], "privat": [41, 44, 46, 47, 236], "_reset": [41, 44, 45, 46, 47, 100, 114, 229], "overwritten": [41, 44, 46, 47, 99, 228], "callback": [41, 44, 46, 47], "auto_reset": [41, 44, 46, 47, 229], "auto_cast_to_devic": [41, 44, 46, 47], "break_when_any_don": [41, 44, 46, 47], "return_contigu": [41, 44, 46, 47, 95, 231], "soon": [41, 44, 46, 47], "smaller": [41, 44, 46, 47], "lazystackedtensordict": [41, 44, 45, 46, 47, 100, 114, 231, 235, 236, 237], "concomitt": [41, 44, 46, 47], "eras": [41, 44, 46, 47, 48], "workspac": [41, 44, 46, 47, 48], "carri": [41, 44, 46, 47], "creator": [42, 202, 203, 218, 219, 220], "substitut": [42, 93], "multiprocess": [42, 43, 93, 236], "mp": [42, 93], "env_creat": [42, 228], "test_env1": 42, "_td": 42, "observation_count": [42, 236], "test_env2": 42, "sleep": [42, 236], "__name__": [42, 229], "__main__": 42, "p": [42, 229, 234], "p1": [42, 229], "p2": [42, 229], "join": [42, 201, 209], "9934": 42, "env_str": 43, "discard": [44, 99, 179, 236], "info_dict_read": 44, "set_info_dict_read": 44, "put": [44, 93, 220, 235], "f": [44, 149, 169, 170, 171, 228, 229, 234, 235, 236], "read_act": 44, "read_don": 44, "reader": [44, 228, 229], "frame_skip": [44, 51, 52, 53, 56, 71, 190, 193, 198, 226, 228, 237], "broken": [44, 95], "read_ob": 44, "dictat": [44, 138], "inner": [44, 226, 228, 236], "read_reward": 44, "total_reward": 44, "step_reward": 44, "far": [44, 110, 124, 125, 236], "baseinfodictread": 44, "info_dict": 44, "hoc": 44, "manner": [44, 77, 228, 231], "dict_read": 44, "default_info_dict_read": 44, "my_info_kei": 44, "some_env": 44, "meant": 45, "limit": [45, 46, 47, 235], "safeti": 45, "constraint": 45, "behav": [45, 55, 120, 232], "classic": [45, 234, 235], "unboundedcontinuoustensorspec": [45, 85, 100, 127, 128, 129, 130, 137, 140, 141, 222, 236], "mymbenv": [45, 100, 114], "world_model": [45, 60, 100, 114, 156], "super": [45, 100, 114, 141, 143, 146, 234, 237], "hidden_observ": [45, 100, 114], "mlp": [45, 100, 101, 102, 103, 104, 105, 111, 114, 128, 132, 201, 209, 211, 214, 222, 228, 229, 231, 232, 234, 237], "worldmodelwrapp": [45, 100, 114, 222], "activation_class": [45, 100, 101, 102, 103, 104, 105, 108, 109, 112, 114, 228, 229, 237], "relu": [45, 100, 114, 117, 149, 234], "activate_last_lay": [45, 100, 105, 112, 114], "depth": [45, 100, 101, 102, 103, 104, 105, 108, 109, 112, 114, 118, 119, 132, 229, 231], "equal": [46, 47, 73, 74, 101, 107, 112, 165, 188, 218, 219, 232, 235], "my_env_fun": [46, 47], "custom_attribute_list": [46, 47], "custom_attribut": [46, 47], "custom_method_list": [46, 47], "custom_method": [46, 47], "num_work": [46, 47, 228, 229], "deploi": [46, 47], "creation": [46, 47, 228, 236], "slight": [46, 47, 229], "overhead": [46, 47, 234], "env_input_kei": [46, 47], "permit": [46, 47], "drastic": [46, 47], "decreas": [46, 47], "io": [46, 47], "burden": [46, 47], "_batchedenv": [46, 47], "might": [46, 47, 187, 223, 228, 236], "next_pixel": [46, 47], "next_vector": [46, 47], "occupi": [46, 47], "excluded_kei": [46, 47, 68], "share_individual_td": [46, 47], "lazi": [46, 47, 77, 115, 139, 140, 228, 231, 235, 236], "shared_memori": [46, 47], "policy_proof": [46, 47], "ll": [46, 47, 228, 229, 236], "hidden": [46, 47, 108, 111, 118, 119, 121, 122, 128, 129, 130, 137, 140, 201, 209, 231, 234, 237], "instanti": [46, 47, 88, 228, 229, 235, 236], "allow_step_when_don": [46, 47], "encount": [46, 47, 223], "update_kwarg": [46, 47], "build_tensordict": 48, "next_observ": [48, 99, 111, 231], "log_prob": [48, 106, 120, 125], "empti": [48, 77, 86, 89, 92, 228], "popul": [48, 85], "googl": [49, 50], "ant": [49, 50, 232], "categorical_action_encod": [50, 54], "get_environ": 50, "87": 50, "acrobot": [50, 236], "fetch": [50, 232, 236], "dm_control": [51, 52, 228, 231, 236], "task_nam": 51, "cheetah": [51, 52, 228, 236], "disable_env_check": [53, 55], "serv": [55, 236], "placehold": [55, 89], "secur": 55, "jumanji": [56, 57], "snake": [56, 57], "6x6": [56, 57], "td1": 57, "int32": [57, 235, 237], "12x12": 57, "tsp50": 57, "tsp100": 57, "vma": [58, 59], "scenario_nam": [58, 59], "num_env": [58, 59], "continuous_act": [58, 59], "flock": [58, 59], "scenario": [58, 59], "n_agent": [58, 59], "cohesion_rew": [58, 59], "collision_rew": [58, 59], "separation_rew": [58, 59], "velocity_rew": [58, 59], "18": [58, 59, 232, 236], "model_bas": [60, 100, 114], "prior_shap": 60, "belief_shap": 60, "obs_decod": 60, "transform_reward_spec": [61, 65, 67, 79, 80, 88, 90], "success": [62, 88, 237], "account": 62, "movement": 62, "veloc": [62, 236], "propos": [62, 113, 158, 164, 211, 214], "plai": [62, 236], "atari": [62, 236], "pdf": [62, 102, 103, 104, 105, 134, 143, 154, 161, 164, 169, 172, 173, 176, 204, 211, 214], "1312": 62, "5602": 62, "_buffer": [62, 86], "transform_observation_spec": [62, 63, 64, 65, 67, 68, 70, 72, 74, 78, 81, 82, 84, 85, 86, 87, 88, 90], "del_kei": [63, 229, 231], "unsqueeze_if_oor": 63, "observation_posit": 63, "observation_veloc": 63, "delet": [63, 235], "unsqueez": [63, 87, 90, 111, 235], "key1": [63, 188, 195], "key2": [63, 188, 195], "w": [64, 78, 87, 134, 180], "crop": [64, 180], "center": [64, 180], "width": [64, 78, 229], "height": [64, 78, 229], "squar": [64, 110, 124, 125, 180], "rewardsc": [65, 89, 222, 228], "rewardclip": [65, 222], "transformed_env": [65, 88, 89], "tranform": [65, 68, 82, 84, 85, 88, 91, 94], "dest": [65, 77, 92, 137], "transform_input_spec": [65, 67, 88, 90], "max_n": 66, "action_kei": [66, 100, 113, 114, 131, 133], "dimension": [66, 169, 172, 173, 176], "action_out": 66, "manual_se": [66, 74, 133, 134, 228, 236, 237], "finit": [69, 228], "first_dim": 70, "last_dim": 70, "flatten": [70, 228, 229], "adjac": 70, "repeatedli": 71, "stabil": 71, "turn": [72, 193, 229, 232], "noop": [73, 237], "30": [73, 121, 122, 229], "op": [73, 131, 133, 197], "randomli": [73, 74, 85, 138], "noop_max": 73, "loc": [74, 80, 110, 117, 124, 125, 128, 129, 130, 135, 138, 140, 199, 201, 209, 211, 214, 220, 228, 229, 234, 237], "standard_norm": [74, 80, 228, 229], "affin": [74, 80], "layer": [74, 93, 101, 102, 103, 108, 112, 115, 116, 118, 119, 126, 228, 229, 232, 234], "set_default_tensor_typ": 74, "doubletensor": 74, "std": [74, 93, 117, 131, 228, 229, 236], "isclos": 74, "next_ob": [74, 169, 170, 171, 228, 237], "normalis": 74, "stat": [74, 199, 220, 228], "rubric": [74, 140], "init_stat": 74, "3752e": 74, "01": [74, 134, 147, 150, 151, 159, 160, 228, 232, 233], "5087e": 74, "03": [74, 228, 232, 233], "9294e": 74, "9636": 74, "5608": 74, "6408": 74, "num_it": 74, "reduce_dim": 74, "cat_dim": 74, "keep_dim": 74, "constant": [74, 226, 228, 229, 236], "ideal": [74, 228], "statist": [74, 93, 162, 220, 228, 236], "approach": [74, 236], "gaussian": [74, 100, 114, 115, 116, 131], "empir": [74, 100, 114, 138], "deviat": [74, 93, 100, 108, 114, 115, 116, 131, 160, 228, 229], "3d": 74, "third": 74, "r3m": [77, 232], "resnet": [77, 92], "visual": [77, 92], "embed": [77, 91, 92, 128, 129, 130, 137, 232, 234], "ego4d": [77, 92], "paper": [77, 92, 158, 211, 214, 228], "univers": [77, 92], "suraj": 77, "nair": 77, "aravind": 77, "rajeswaran": 77, "vikash": [77, 92], "kumar": [77, 92], "chelsea": 77, "finn": 77, "abhinav": 77, "gupta": 77, "2203": [77, 114, 232], "12601": [77, 232], "_init": 77, "snippet": [77, 228], "resnet50": [77, 92, 232], "model_nam": [77, 92, 186], "resnet34": 77, "resnet18": 77, "left": [77, 86, 92, 229], "r3m_vec": [77, 232], "feed": [77, 92], "244": [77, 92, 228], "stack_imag": [77, 92], "tread": [77, 92], "separet": [77, 92], "hub": [77, 92, 232], "cach": [77, 89, 92, 189, 232], "public": [77, 92], "resnet50_weight": [77, 92], "imagenet1k_v1": [77, 92], "download_path": [77, 92], "tensor_pixels_kei": [77, 92], "interpol": [78, 229], "bilinear": 78, "clamp_min": [79, 134], "clamp_max": 79, "clip": [79, 151, 196], "clip_min": 79, "scalar": [79, 103, 105, 115, 116, 131, 133, 134, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "clip_max": 79, "episod": [81, 100, 172, 173, 174, 175, 176, 177, 178, 229], "cumul": [81, 100], "episode_": 81, "reward1": 81, "reward2": 81, "ho": 81, "excludetransform": [82, 222], "squeeze_dim": 83, "squeez": [83, 101, 229, 235], "manual": 84, "default_valu": 85, "primer": 85, "drawn": [85, 138], "rel": [85, 106, 123], "chosen": [85, 201, 209, 211, 214], "mykei": 85, "dtype_or_devic": 85, "pool": 86, "255": 87, "precis": [87, 228], "ri": 87, "randint": [87, 228], "out_keys_inv": 88, "principl": 88, "combin": [88, 235], "cattransform": 88, "notabl": 88, "cache_spec": 89, "anymor": [89, 137, 228], "unsqueeze_dim": 90, "vip": [91, 92, 232], "toward": 92, "implicit": 92, "jason": 92, "ma": 92, "shagun": 92, "sodhani": 92, "dinesh": 92, "jayaraman": 92, "osbert": 92, "bastani": 92, "ami": 92, "zhang": 92, "vip_vec": 92, "shared_td": 93, "lock": 93, "decai": [93, 131, 133, 161, 194, 228, 229, 236], "9999": 93, "0001": [93, 108, 117, 194], "fly": [93, 159, 236], "to_observation_norm": 93, "rate": [93, 168, 228, 229], "99": [93, 114, 150, 151, 155, 157, 159, 160, 161, 162, 163, 168, 216, 228, 229, 232, 237], "underflow": 93, "1000": [93, 131, 133, 134, 138, 158, 228, 229, 232], "build_td_for_shared_vecnorm": 93, "memmori": 93, "memmap_": [93, 235], "queue": 93, "td_share": 93, "v": [93, 111, 163, 229, 234, 237], "observationnorm": [93, 220, 222, 228, 229, 237], "state_dim": [94, 121, 122], "action_dim": [94, 102, 104, 231], "gsde": [94, 161, 220], "nois": [94, 116, 126, 134, 161, 193, 220, 228], "func": [94, 234], "gsdemodul": 94, "check_dtyp": 95, "short": 95, "discrep": [95, 150, 151, 152, 153, 159, 160], "imposs": 95, "heterogen": 95, "probabilistictdmodul": [98, 112, 138, 163, 168, 193], "next_tensordict": [99, 228], "keep_oth": 99, "exclude_reward": 99, "exclude_don": 99, "exclude_act": 99, "_run_check": 99, "reflect": [99, 198], "renam": [99, 228], "next_": 99, "funtion": 99, "td_out": [99, 188, 195], "make_polici": 99, "next_td": 99, "planning_horizon": [100, 114], "optim_step": [100, 114, 235], "num_candid": [100, 114], "top_k": [100, 114], "reward_kei": [100, 114], "cross": 100, "entropi": [100, 150, 151, 159, 160, 161, 163], "botev": 100, "et": [100, 234], "al": [100, 206, 234, 236], "2013": 100, "cem": 100, "plan": [100, 113, 114], "unit": [100, 108, 118, 119, 121, 122], "varianc": [100, 110, 117, 124, 125], "rank": 100, "top": [100, 114], "k": [100, 229, 234, 235], "repeat": 100, "maximis": [100, 102, 104, 114, 228], "horizon": [100, 114], "modelbasedenv": [100, 114], "mpc": [100, 113, 114], "candid": [100, 114], "modelbasedenvbas": [100, 113, 114, 222], "next_hidden_observ": 100, "actor": [100, 102, 104, 108, 114, 128, 129, 130, 132, 133, 134, 135, 136, 143, 144, 150, 151, 152, 155, 159, 160, 161, 163, 201, 204, 206, 209, 211, 214, 222, 228, 229, 232, 237], "num_cel": [101, 102, 103, 104, 105, 108, 109, 112, 128, 228, 229, 234, 237], "elu": [101, 102, 103, 104, 105, 108, 109, 229, 237], "activation_kwarg": [101, 112], "norm_class": [101, 102, 103, 112], "norm_kwarg": [101, 112], "bias_last_lay": [101, 102, 103, 104, 105, 109, 112], "aggregator_class": [101, 102, 103, 229, 237], "squashdim": [101, 102, 237], "aggregator_kwarg": [101, 102, 103, 229], "squeeze_output": [101, 102, 103, 229], "convolut": [101, 102, 103], "neural": [101, 137, 229, 234, 236], "produc": [101, 112, 120, 128, 130, 180, 236], "len": [101, 112, 228, 229, 232, 234, 235, 237], "cell": [101, 112, 228], "kernel": [101, 109, 111], "tanh": [101, 110, 112, 123, 124, 125, 228, 232, 237], "device_typ": [101, 102, 103, 104, 105, 109, 112, 115, 116], "cnet": 101, "34": [101, 112], "35": [101, 112, 232], "possibli": [101, 137, 196, 228, 236], "rectangular": 101, "conv_net_kwarg": [102, 103], "mlp_net_kwarg": [102, 103, 104], "use_avg_pool": [102, 103], "WITH": [102, 103, 104, 105, 134, 164, 204], "1509": [102, 103, 104, 105, 114, 134, 158, 164, 204], "02971": [102, 103, 104, 105, 134, 164, 204], "convnet": [102, 222, 237], "ndims_in": 102, "avgpool": [102, 103], "128": [103, 228, 232], "adaptiveavgpool2d": [103, 229], "400": [104, 105, 229], "300": [104, 105, 201, 209], "mlp_net_kwargs_net1": 105, "mlp_net_kwargs_net2": 105, "atol": [106, 123], "06": [106, 123, 228], "rtol": [106, 123], "batch_shap": [106, 123], "event_shap": [106, 123], "absolut": [106, 123], "toler": [106, 123], "densiti": [106, 120, 125], "mass": [106, 120, 125], "rsampl": [106, 120, 138], "sample_shap": [106, 120], "reparameter": [106, 120], "dqnet": 107, "atom": 107, "std_bia": 108, "std_min_val": 108, "stochast": [108, 116, 118, 122, 161, 163], "belief": [108, 118, 121, 122], "1912": [108, 155, 156, 157], "01603": [108, 155, 156, 157], "softplu": [108, 117, 147, 148, 149], "out_features_valu": 109, "cnn_kwarg": [109, 229], "mlp_kwarg": [109, 111, 229], "duel": [109, 229], "cnn": [109, 229, 237], "06581": 109, "512": 109, "upscal": [110, 124, 125], "tanh_loc": [110, 124, 125], "event_dim": [110, 123, 124], "prevent": [110, 124, 125, 159, 160, 228], "ultim": [110, 124, 125], "unstabl": [110, 124, 125], "poor": [110, 124, 125], "explos": [110, 124, 125], "switch": [110, 124, 125], "sigma": [110, 124, 125, 131, 134], "formula": [110, 124, 125, 151, 159, 160], "lstm_kwarg": 111, "embedd": 111, "lstm": [111, 117], "time_step": 111, "2d": 111, "hidden_s": 111, "input_s": 111, "hidden0_in": 111, "hidden1_in": 111, "hidden0_out": 111, "hidden1_out": 111, "single_bias_last_lay": 112, "layer_class": 112, "layer_kwarg": 112, "perceptron": 112, "seamless": 112, "though": 112, "reshap": [112, 234, 235], "lazylinear": [112, 232, 237], "42": [112, 196], "noisylinear": [112, 115, 222, 229], "noisylazylinear": [112, 222], "At": [113, 231, 232], "mpcplanner": 113, "tensordict_out": [113, 234, 236], "advantage_modul": [114, 150], "temperatur": 114, "mppi": 114, "covari": 114, "william": [114, 162], "aldrich": 114, "theodor": 114, "01149": 114, "hansen": 114, "wang": 114, "su": 114, "04955": 114, "ndunboundedcontinuoustensorspec": [114, 140], "valueoper": [114, 128, 129, 130, 150, 151, 159, 160, 216, 222, 228, 234], "tdlambdaestim": [114, 222], "value_net": [114, 169, 170, 171], "adv": 114, "95": [114, 155, 228, 229, 232], "std_init": [115, 116], "noisi": [115, 116, 126], "term": [115, 116, 149, 150, 197, 229], "matrix": [115, 116], "initialize_paramet": 115, "isol": 115, "1706": 116, "10295v3": 116, "induc": 116, "aid": 116, "descent": 116, "remain": 116, "emploi": 116, "scale_map": 117, "biased_softplus_1": 117, "scale_lb": [117, 121, 122], "exp": [117, 149], "module_norm": 117, "decod": [118, 234], "1803": [118, 119], "10122": [118, 119], "rnn_hidden": 118, "latent": 119, "logit": 120, "prob": 120, "excacli": 120, "hidden_dim": [121, 122, 234], "posterior": [121, 156], "rssm": [121, 122, 156], "1811": [121, 122], "04551": [121, 122], "obs_embed": 121, "rnn_hidden_dim": 122, "prior": [122, 156], "dream": 122, "recurr": 122, "min": [123, 124, 125, 151, 161, 163, 228, 229], "tanhtransform": 124, "tensordict_modul": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 233, 234], "translat": [127, 135], "td_modul": [127, 128, 129, 130, 135, 137, 138, 140, 141, 234, 237], "get_policy_oper": [128, 129, 130, 201, 209, 234], "alon": [128, 129, 130], "tdmodul": [128, 129, 130, 216], "get_critic_oper": [128, 234], "common_oper": [128, 130], "policy_oper": [128, 129, 130], "value_oper": [128, 129, 130], "probabilisticactor": [128, 129, 130, 163, 222, 228], "tanhnorm": [128, 129, 130, 135, 140, 222, 234, 237], "normalparamwrapp": [128, 129, 130, 135, 140, 222, 234, 237], "spec_hidden": [128, 130], "module_hidden": [128, 130, 234], "td_module_hidden": [128, 130, 234], "spec_act": [128, 130], "module_act": [128, 130, 234], "td_module_act": [128, 129, 130, 234], "dist_in_kei": [128, 129, 130, 135, 140], "sample_out_kei": [128, 130, 140], "distribution_class": [128, 129, 130, 135, 138, 140, 228, 234, 237], "return_log_prob": [128, 129, 130, 138, 140, 234, 237], "module_valu": [128, 129, 130, 234], "td_module_valu": [128, 129, 130, 234], "state_action_valu": [128, 141, 168, 204, 211, 214, 216, 228, 234, 237], "td_clone": [128, 129, 130, 234], "sample_log_prob": [128, 129, 130, 138, 140, 201, 209, 211, 234, 237], "tensordictmodulewrapp": [128, 202, 203, 216], "estim": [128, 129, 130, 150, 151, 159, 160, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 228, 229], "get_value_oper": [128, 129, 130, 201, 209], "action_modul": 129, "state_valu": [129, 130, 141, 169, 170, 171, 172, 173, 174, 176, 177, 201, 209, 214, 228], "safesequenti": [129, 130, 142, 222], "sigma_init": 131, "sigma_end": 131, "annealing_num_step": [131, 133, 134, 228, 229], "po": [131, 133], "epsilon": [131, 133, 134, 164, 229], "know": [131, 133, 161, 193, 228, 229], "recov": [131, 133, 139, 231], "happen": [131, 232, 236], "action_spac": [132, 136, 143, 144], "one_hot": [132, 136, 143, 144], "onehotdiscretetensorspec": [132, 136, 143, 144, 222], "nbin": [132, 143], "qvalue_actor": [132, 136, 143, 144], "eps_init": [133, 134, 229], "eps_end": [133, 134, 229], "greedi": [133, 144, 229], "explorative_polici": [133, 134], "0000": [133, 237], "6986": 133, "9366": 133, "5837": 133, "8596": 133, "grad_fn": [133, 237], "addbackward0": [133, 237], "theta": 134, "15": [134, 155, 229], "mu": 134, "dt": 134, "x0": 134, "sigma_min": 134, "n_steps_ann": 134, "ornstein": [134, 228], "uhlenbeck": [134, 228], "ou": [134, 228], "introduc": [134, 234, 235], "auto": [134, 161, 163], "correl": 134, "sort": 134, "prev_nois": 134, "current_sigma": 134, "sqrt": [134, 229], "n_step": 134, "ou_prev_nois": 134, "ou_step": 134, "increas": 134, "anneal": 134, "_ou_prev_nois": 134, "_ou_step": 134, "probabilist": [135, 234, 237], "functional_modul": [135, 136, 137, 140, 141, 143, 144], "make_funct": [135, 136, 137, 140, 141, 143, 144, 145, 229, 234, 237], "functionalmodul": [137, 145], "functionalmodulewithbuff": [137, 145], "character": 137, "overflow": [137, 138], "grucel": [137, 234], "td_fmodul": 137, "td_function": 137, "td_state": 137, "vmap": [137, 140, 229, 234, 237], "ensembl": [137, 161], "params_repeat": 137, "td_vmap": [137, 140], "irrespect": [137, 138], "random_sampl": [137, 138], "tensor_spec": 138, "default_interaction_mod": [138, 234], "distribution_kwarg": [138, 228], "cache_dist": 138, "n_empirical_estim": 138, "probabilistictensordictmodul": [138, 139, 237], "rule": [138, 234], "interaction_mod": 138, "get_dist": [138, 139, 234], "__call__": [138, 226, 234], "median": 138, "suppli": 138, "fist": 138, "set_interaction_mod": 138, "diverg": [138, 156, 159], "partial_toler": [139, 140, 231], "probabilistictensordictsequenti": [139, 234, 237], "tensordictsequenti": [139, 231, 232, 237], "expos": [139, 234], "who": [139, 140], "AND": [139, 140], "scan": [139, 140], "sub": [139, 140, 188, 196, 231, 236, 237], "tensordictsequenci": 140, "tensordictsequ": 140, "safeprobabilisticmodul": [140, 222], "spec1": 140, "net1": 140, "module1": 140, "td_module1": 140, "spec2": 140, "module2": 140, "td_module2": 140, "custommodul": [141, 146], "cat": [141, 228, 235, 237], "transition_model": 142, "reward_model": 142, "imaginari": 142, "imagin": 142, "get_reward_oper": 142, "get_transition_model_oper": 142, "var_num": [143, 144], "regard": [143, 150, 154, 160, 235], "perspect": [143, 154], "1707": [143, 154, 160, 201, 209], "06887": [143, 154], "mult_one_hot": [143, 144], "customdistributionalqv": 143, "log_softmax": 143, "_src": 145, "wrapper_typ": 145, "mislead": 146, "other_kei": 146, "typeerror": 146, "min_val": [147, 149], "bias": [147, 228], "_bia": 147, "invert": 148, "surject": 149, "expln": 149, "biased_softplu": [149, 222], "beggin": 149, "biased_softplus_": 149, "syntax": [149, 228], "condit": 149, "met": 149, "safeprobabilisticsequenti": [150, 151, 159, 160, 162, 202, 203, 222], "advantage_kei": [150, 151, 159, 160, 162, 169, 170, 171], "value_target_kei": [150, 160, 162, 169, 170, 171], "value_target": [150, 160, 162, 169, 170, 171], "entropy_bonu": [150, 151, 159, 160], "samples_mc_entropi": [150, 151, 159, 160], "entropy_coef": [150, 151, 159, 160], "critic_coef": [150, 151, 159, 160], "loss_critic_typ": [150, 151, 159, 160, 162], "smooth_l1": [150, 151, 152, 153, 159, 160, 161, 162, 163, 165], "reli": [150, 228, 236], "1602": 150, "01783v2": 150, "advantage_diff_kei": 150, "advantage_diff": 150, "value_error": [150, 169, 170, 171], "loss_function_typ": 150, "l1": [150, 151, 152, 153, 159, 160, 161, 165, 229], "l2": [150, 151, 152, 153, 156, 157, 159, 160, 161, 165], "tha": 150, "throughout": [150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 236], "essenti": [150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 228, 235], "clip_epsilon": 151, "normalize_advantag": [151, 159, 160], "threshold": 151, "bonu": [151, 159, 160], "favour": [151, 159, 160], "exploratori": [151, 159, 160], "mont": [151, 159, 160], "carlo": [151, 159, 160], "multipli": [151, 159, 160, 161, 163, 228], "loss_funct": [151, 152, 153, 160, 161, 163, 165], "actor_network": [152, 161, 162, 163], "value_network": [152, 153, 154, 163, 169, 170, 171], "delay_actor": [152, 163], "delay_valu": [152, 153, 154, 162, 163], "input_tensordict": [152, 153, 154], "assign": [152, 153, 228, 234], "qvalueactor": [153, 222, 229], "distributionalqvalueactor": [154, 222], "unlik": [154, 160, 234, 235, 237], "disctount": 154, "actor_model": 155, "value_model": [155, 157], "model_based_env": 155, "dreamerenv": [155, 222], "imagination_horizon": 155, "lmbda": [155, 169, 171, 172, 174, 175, 176, 177, 178, 228, 229], "discount_loss": [155, 157], "unrol": 155, "lambda_kl": 156, "lambda_reco": 156, "lambda_reward": 156, "reco_loss": 156, "reward_loss": 156, "free_nat": 156, "delayed_clamp": 156, "global_averag": 156, "kl": [156, 159], "reconstruct": [156, 236], "nat": 156, "clamp": [156, 196], "value_loss": [157, 228], "fake_data": 157, "loss_modul": [158, 164, 196, 215, 216, 226, 235], "dqnloss": [158, 164, 207, 222], "ddpgloss": [158, 164, 205, 216, 222, 237], "sacloss": [158, 164, 213, 222], "td3loss": [158, 164], "value_network_update_interv": 158, "contrast": 158, "soft": [158, 163, 164], "06461": 158, "dtarg": 159, "decrement": 159, "samples_mc_kl": 159, "penalti": 159, "old_polici": 159, "new_polici": 159, "adapt": 159, "thu": 159, "distanc": [159, 165, 168, 169], "apart": 159, "proxim": [160, 201, 209], "optimis": [160, 193], "flavour": [160, 228, 237], "constrain": 160, "clipppoloss": [160, 222], "klpenppoloss": [160, 222], "regularis": 160, "06347": [160, 201, 209], "qvalue_network": [161, 163], "num_qvalue_net": [161, 163], "sub_sample_len": 161, "priotity_kei": [161, 163], "alpha_init": [161, 163], "min_alpha": [161, 163], "max_alpha": [161, 163], "fixed_alpha": [161, 163], "target_entropi": [161, 163], "delay_qvalu": [161, 163], "openreview": [161, 211], "ay8zfzm0tdd": [161, 211], "idea": [161, 226, 229, 235], "subsampl": [161, 188, 226], "connectionist": 162, "1992": 162, "doi": 162, "1007": 162, "bf00992696": 162, "1801": [163, 214], "01290": [163, 214], "applic": 163, "1812": 163, "05905": 163, "qvalue_network_bi": 163, "prod": 163, "n_action": 163, "redqloss": [164, 222], "999": [164, 194, 229], "prev_param": 164, "new_param": 164, "v2": [165, 174, 175, 177, 178, 201, 204, 209, 211, 214], "strict_shap": 165, "view_a": 165, "hold": [166, 167], "next_val_kei": 168, "pred_next_v": 168, "usus": 168, "mse": [168, 229], "q_valu": 168, "target_valu": [168, 237], "n_steps_to_next": 168, "value_next_st": 168, "average_ga": 169, "value_kei": [169, 170, 171], "1506": [169, 172, 173, 176], "02438": [169, 172, 173, 176], "exponenti": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 194], "propag": [169, 170, 171], "throught": [169, 170, 171], "advang": 169, "gradient_mod": 169, "sign": 169, "unused_arg": 169, "target_param": [169, 170, 171], "relev": [169, 170, 171], "98": [169, 170, 171, 232], "94": [169, 171, 232], "unpack": [169, 170, 171], "average_reward": [170, 171], "next_state_valu": [172, 173, 174, 175, 176, 177, 178, 222], "old_stat": [172, 173, 174, 176, 177], "timestep": [172, 173, 174, 175, 176, 177, 178, 229], "new_stat": [172, 173, 174, 175, 176, 177, 178], "rolling_gamma": [174, 175, 177, 178], "ti": [174, 175, 177, 178], "event": [174, 175, 177, 178], "g1": [174, 175, 177, 178], "g2": [174, 175, 177, 178], "g3": [174, 175, 177, 178], "g4": [174, 175, 177, 178], "v3": [174, 175, 177, 178], "v4": [174, 175, 177, 178, 228, 232], "upcom": [174, 175, 177, 178, 228], "out_file_bas": 179, "skip_reset": 179, "dump": 179, "interv": [179, 180, 189, 197, 229], "center_crop": 180, "make_grid": 180, "video": [180, 193, 220, 229], "Will": 180, "grid": 180, "exp_nam": [181, 182, 183, 184, 185, 216, 228], "log_dir": [181, 182, 184, 187], "minim": [181, 234], "dependeci": 181, "csv": [181, 187], "templat": 182, "tracking_uri": 183, "mlflow": [183, 187], "uri": 183, "datastor": 183, "tb_log": 184, "tensoarboard": 184, "tensorboard": [184, 187, 237], "wandb": [185, 187, 237], "experiment_nam": [186, 187], "uuid": [186, 236], "date": 186, "logger_typ": 187, "logger_nam": 187, "wandb_kwarg": 187, "mlflow_kwarg": 187, "sub_traj_len": 188, "min_sub_traj_len": 188, "full": [188, 228, 229, 231, 232, 234, 235, 236, 237], "20": [188, 228, 229, 236, 237], "register_op": [188, 189, 190, 191, 192, 194, 195, 197, 226], "process_optim_batch": [188, 194, 226], "_process_optim_batch_hook": [188, 226], "clear": 189, "clear_cuda": 189, "pre_optim_step": [189, 226], "counter": [190, 226], "log_pbar": [190, 191, 193, 194, 226], "progress": [190, 191, 193, 196, 226, 236], "bar": [190, 191, 193, 196, 226], "count_fram": 190, "pre_steps_log": [190, 191, 226], "lognam": 191, "r_train": 191, "log_reward": 191, "loss_compon": 192, "appl": 192, "omit": [192, 229], "loss_": 192, "optimizer_hook": 192, "loss_actor": [192, 237], "record_interv": [193, 228], "record_fram": [193, 198, 228], "policy_explor": [193, 216, 228], "log_kei": 193, "suffix": 193, "underestim": 193, "suppos": [193, 226, 234, 235, 236], "set_exploration_mod": [193, 222, 228, 229, 237], "reward_evalu": 193, "reward_norm": 194, "batch_process": [194, 195, 226], "update_reward_stat": 194, "normalize_reward": 194, "make_train": [195, 222], "_process_batch_hook": [195, 226], "versatil": 196, "lossmodul": [196, 215, 216], "optim_steps_per_batch": [196, 226, 228], "epoch": 196, "clip_grad_norm": 196, "partial": 196, "deriv": 196, "clip_norm": 196, "progress_bar": 196, "tqdm": [196, 228, 229], "save_trainer_interv": 196, "disk": [196, 226, 229], "10000": [196, 229], "save_trainer_fil": [196, 226], "_datacollector": [197, 202, 203, 216], "update_weights_interv": 197, "sit": [197, 229], "sync": [197, 216, 226, 228, 237], "update_weight": 197, "post_step": [197, 226], "cfg": [198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220], "dictconfig": [198, 199, 201, 202, 203, 204, 206, 209, 211, 212, 214, 215, 216, 217, 220], "correct": [198, 229], "divid": 198, "unknowingli": 198, "1m": [198, 232], "annealing_fram": [198, 228], "init_env_step": [198, 199, 228], "proof_environ": [199, 201, 204, 206, 209, 211, 214, 228], "sta": 199, "ot": 199, "a2closs": [200, 222], "in_keys_actor": [201, 209], "observation_kei": [201, 209, 211, 214], "actorvalueoper": [201, 209, 222, 234], "dummi": [201, 204, 206, 209, 211, 214, 236], "actorcriticoper": [201, 209, 222], "parser_env_arg": [201, 209, 211], "make_ppo_model": [201, 222], "parser_model_args_continu": [201, 209, 211, 214], "cattensor": [201, 204, 209, 211, 214, 222, 228, 229, 231, 236], "hydra": [201, 204, 206, 209, 211, 214], "config_stor": [201, 204, 206, 209, 211, 214], "configstor": [201, 204, 206, 209, 211, 214], "dataclass": [201, 204, 206, 209, 211, 214], "halfcheetah": [201, 204, 209, 211, 214, 228], "config_field": [201, 204, 206, 209, 211, 214], "config_cl": [201, 204, 206, 209, 211, 214], "ppomodelconfig": [201, 209], "envconfig": [201, 204, 206, 209, 211, 214], "make_dataclass": [201, 204, 206, 209, 211, 214], "cls_name": [201, 204, 206, 209, 211, 214], "config_path": [201, 204, 206, 209, 211, 214], "config_nam": [201, 204, 206, 209, 211, 214], "actor_valu": [201, 209], "17": [201, 204, 209, 211, 214, 228], "actor_model_explor": [202, 203, 228], "make_env_kwarg": [202, 203], "actor_net_kwarg": [204, 211, 214], "value_net_kwarg": [204, 214], "modulelist": [204, 211, 214, 234, 237], "ddpgcnnactor": [204, 222], "ddpgmlpactor": [204, 222], "ddpgcnnqnet": [204, 222], "ddpgmlpqnet": [204, 222], "ddpgmodelconfig": 204, "targetnetupdat": [205, 207, 210, 213, 215, 216], "discretemodelconfig": 206, "pong": [206, 236], "v5": [206, 236], "pixels_onli": [206, 228, 229, 236, 237], "210": [206, 236], "160": [206, 236], "ppoloss": [208, 222], "redqloss_deprec": 210, "qvalue_net_kwarg": [211, 214], "qvalu": [211, 214, 228, 229], "redqmodelconfig": 211, "replayargsconfig": 212, "sacmodelconfig": 214, "target_net_updat": 216, "constitu": 216, "learnt": [216, 229], "tempfil": 216, "tensorboardlogg": [216, 222], "tensordictreplaybuff": [216, 222, 228, 229], "egreedywrapp": [216, 222, 229], "env_proof": 216, "obs_spec": 216, "net_valu": 216, "dir": [216, 226], "gettempdir": 216, "argpars": [217, 220], "namespac": [217, 220], "parser": [217, 220], "transformed_env_constructor": [217, 222], "env_kwarg": [218, 219, 228], "num_env_per_collector": [218, 219], "num_collector": [218, 219], "less": [218, 219, 228, 229, 237], "video_tag": 220, "norm_obs_onli": 220, "use_env_cr": 220, "custom_env_mak": 220, "custom_env": 220, "return_transformed_env": 220, "action_dim_gsd": 220, "state_dim_gsd": 220, "batch_dim": [220, 235], "obs_norm_state_dict": 220, "wheter": 220, "maker": [220, 228], "overrid": 220, "exclus": 220, "randompolici": 222, "asyncdatacollector": 222, "tensordictprioritizedreplaybuff": [222, 237], "prioritizedsampl": [222, 228], "binarydiscretetensorspec": 222, "discretetensorspec": 222, "multidiscretetensorspec": 222, "multionehotdiscretetensorspec": 222, "unboundeddiscretetensorspec": [222, 236], "multistep": [222, 228, 229], "binarizereward": 222, "catfram": [222, 229], "centercrop": 222, "discreteactionproject": 222, "finitetensordictcheck": 222, "flattenobserv": 222, "frameskiptransform": 222, "grayscal": [222, 229, 236], "gsdenois": 222, "noopresetenv": [222, 236, 237], "observationtransform": 222, "pinmemorytransform": 222, "r3mtransform": [222, 232], "rewardsum": 222, "selecttransform": 222, "squeezetransform": 222, "stepcount": [222, 237], "tensordictprim": 222, "timemaxpool": 222, "unsqueezetransform": 222, "viprewardtransform": 222, "viptransform": 222, "tensordictrecord": 222, "videorecord": 222, "step_mdp": [222, 228, 229, 236, 237], "get_available_librari": 222, "braxenv": 222, "braxwrapp": 222, "dmcontrolenv": [222, 228, 231, 236], "dmcontrolwrapp": 222, "jumanjienv": 222, "jumanjiwrapp": 222, "vmasenv": 222, "vmaswrapp": 222, "actorcriticwrapp": [222, 234], "additivegaussianwrapp": 222, "ornsteinuhlenbeckprocesswrapp": [222, 228], "is_tensordict_compat": 222, "ensure_tensordict_compat": 222, "qvaluehook": 222, "distributionalqvaluehook": 222, "duelingcnndqnet": [222, 229], "distributionaldqnnet": 222, "lstmnet": 222, "dreameractor": 222, "obsencod": 222, "obsdecod": 222, "rssmprior": 222, "rssmposterior": 222, "reset_nois": 222, "cemplann": 222, "mpcplannerbas": 222, "mppiplann": 222, "independentnorm": 222, "truncatednorm": 222, "tanhdelta": [222, 228], "onehotcategor": 222, "inv_softplu": 222, "distributionaldqnloss": [222, 229], "reinforceloss": 222, "dreameractorloss": 222, "dreamermodelloss": 222, "dreamervalueloss": 222, "gae": 222, "tdestim": 222, "generalized_advantage_estim": 222, "vec_generalized_advantage_estim": 222, "vec_td_lambda_return_estim": 222, "vec_td_lambda_advantage_estim": [222, 228, 229], "td_lambda_return_estim": 222, "td_lambda_advantage_estim": 222, "td_advantage_estim": 222, "distance_loss": 222, "hold_out_net": [222, 228], "hold_out_param": 222, "softupd": [222, 228], "hardupd": [222, 228], "batchsubsampl": [222, 226], "clearcudacach": 222, "countframeslog": 222, "logreward": [222, 226], "optimizerhook": 222, "rewardnorm": 222, "selectkei": [222, 226], "updateweight": [222, 226], "make_a2c_loss": 222, "make_a2c_model": 222, "make_collector_offpolici": 222, "make_collector_onpolici": 222, "make_ddpg_actor": [222, 228], "make_ddpg_loss": 222, "make_dqn_actor": 222, "make_dqn_loss": 222, "make_ppo_loss": 222, "make_redq_loss": 222, "make_redq_model": 222, "make_replay_buff": [222, 228], "make_sac_loss": 222, "make_sac_model": 222, "make_target_updat": 222, "parallel_env_constructor": [222, 228], "sync_async_collector": 222, "sync_sync_collector": 222, "correct_for_frame_skip": 222, "get_stats_random_rollout": [222, 228], "csvlogger": 222, "mlflowlogg": 222, "wandblogg": 222, "get_logg": 222, "generate_exp_nam": 222, "journei": 223, "guid": [223, 228, 229], "textbook": 223, "highlight": 223, "readi": [223, 231], "ever": 223, "cover": [223, 237], "bump": 223, "think": [223, 236], "benefit": 223, "submit": [223, 237], "pr": 223, "outer": [226, 228, 236], "believ": 226, "scheme": [226, 236], "substenti": 226, "_pre_steps_log_hook": 226, "_pre_optim_hook": 226, "sub_batch": 226, "_post_loss_hook": 226, "post_loss": 226, "_post_optim_hook": 226, "post_optim": 226, "_post_optim_log": 226, "post_optim_log": 226, "_post_steps_hook": 226, "_post_steps_log_hook": 226, "post_steps_log": 226, "comment": [226, 237], "categori": 226, "extens": 226, "replaybuffertrain": 226, "reserv": 226, "trainerhookbas": 226, "three": [226, 229], "logginghook": 226, "logging_hook": 226, "save_dict": 226, "some_valu": 226, "els": [226, 228, 229, 232], "torchsnapshot": 226, "ckpt_backend": 226, "wherea": [226, 228, 234], "pt": [226, 229, 232], "filepath": 226, "select_kei": 226, "save_train": 226, "load_from_fil": 226, "perfectli": 226, "intern": 227, "click": [228, 229, 231, 232, 234, 235, 236, 237], "tutori": [228, 229, 231, 232, 233, 234, 236], "familiar": [228, 229, 236], "suffici": [228, 229], "transpar": [228, 229], "understood": [228, 229], "sota": [228, 229, 237], "rather": [228, 229], "illustr": [228, 229], "deepcopi": 228, "matplotlib": [228, 229, 236], "pyplot": [228, 229, 236], "plt": [228, 229, 236], "wish": 228, "env_librari": 228, "env_task": 228, "env_arg": 228, "elif": [228, 229], "notimplementederror": 228, "friendli": 228, "rescal": 228, "leav": 228, "make_transformed_env": 228, "reward_sc": 228, "double_to_float_list": 228, "double_to_float_inv_list": 228, "dmcontrol": 228, "downstream": 228, "_stat": 228, "leverag": [228, 236], "env_per_collector": 228, "parallel_env": [228, 236, 237], "td_stat": 228, "_td_stat": 228, "numel": [228, 232], "_td_stats_select": 228, "to_tensordict": [228, 229, 235], "got": [228, 235], "isfinit": 228, "sd": 228, "get_env_stat": 228, "proof_env": 228, "env_spec": 228, "actor_net": 228, "num_lay": 228, "actor_modul": [228, 237], "q_net": 228, "qnet": 228, "frequenc": 228, "make_record": 228, "recorder_obj": 228, "higher": [228, 229, 236], "likelihood": 228, "circular": 228, "special": [228, 234, 236], "arrai": 228, "prb": 228, "buffer_s": [228, 229], "buffer_scratch_dir": 228, "adjust": 228, "device_count": [228, 229, 232, 236], "1000000": 228, "becom": [228, 236], "lr": [228, 229], "5e": 228, "weight_decai": 228, "5000": 228, "warm": 228, "tau": [228, 229], "005": [228, 229], "tmp": [228, 232], "n_steps_forward": 228, "semin": 228, "qnet_target": 228, "9152e": 228, "3728e": 228, "00": [228, 232, 233], "6790e": 228, "02": [228, 232], "8100e": 228, "0432e": 228, "4661e": 228, "7335e": 228, "6330e": 228, "3439e": 228, "04": [228, 232, 233], "3564e": 228, "1885e": 228, "4405e": 228, "1127e": 228, "9993e": 228, "7058e": 228, "7317e": 228, "3022e": 228, "2335": 228, "3836": 228, "3375": 228, "3587": 228, "3461": 228, "4445": 228, "3917": 228, "3489": 228, "5510": 228, "5761": 228, "1731": 228, "4106": 228, "3918": 228, "0521": 228, "4038": 228, "4419": 228, "9479": 228, "coupl": 228, "async": [228, 237], "transmiss": 228, "3018685293": 228, "adam": [228, 229], "optimizer_actor": 228, "optimizer_qnet": 228, "total_collection_step": 228, "scheduler1": 228, "lr_schedul": 228, "cosineannealinglr": 228, "t_max": 228, "scheduler2": 228, "temporarili": 228, "henc": 228, "word": [228, 236], "Then": [228, 231], "fed": 228, "hood": 228, "metadata": [228, 236], "ommit": 228, "earli": [228, 237], "rewards_ev": 228, "norm_factor_train": 228, "collected_fram": 228, "pbar": [228, 229], "r0": 228, "filter": 228, "current_fram": [228, 229], "sampled_tensordict": 228, "backprop": 228, "next_valu": [228, 229], "value_est": 228, "pow": [228, 229], "sampled_tensordict_actor": 228, "actor_loss": 228, "p_in": 228, "p_dest": 228, "zip": [228, 230], "copy_": 228, "b_in": 228, "b_dest": 228, "td_record": 228, "r_evalu": 228, "set_descript": [228, 229], "4f": [228, 229], "2500": 228, "443": 228, "51it": 228, "memmapstorag": [228, 232], "057220458984375": 228, "mb": [228, 232, 233], "002384185791015625": 228, "0095367431640625": 228, "1621246337890625": 228, "steps_to_next_ob": [228, 229], "019073486328125": 228, "2201": 228, "3075": 228, "7568": 228, "40": 228, "07": 228, "208": 228, "82it": 228, "1951": 228, "60": [228, 232, 237], "1500": 228, "03it": 228, "4107": 228, "80": [228, 232], "326": 228, "04it": 228, "3141": 228, "346": 228, "41it": 228, "2119": 228, "plot": [228, 229], "mention": [228, 229, 236], "figur": [228, 229, 234, 236], "label": [228, 229, 235], "legend": [228, 229], "xlabel": [228, 229], "ylabel": [228, 229], "tight_layout": [228, 229], "250": 228, "devid": 228, "100000": [228, 229], "batch_size_traj": 228, "simplic": [228, 232, 234], "19": 228, "td_lambda": 228, "roughli": [228, 237], "four": 228, "big": [228, 229, 236], "inde": [228, 235], "revert": 228, "incompat": [228, 235], "bit": 228, "rand_idx": 228, "1444091796875": 228, "0476837158203125": 228, "24249267578125": 228, "19073486328125": 228, "3814697265625": 228, "titl": [228, 229], "labmda": 228, "text": 228, "minut": [228, 229, 231, 232, 234, 235, 236, 237], "47": [228, 233], "776": [228, 233], "coding_ddpg": [228, 233], "jupyt": [228, 229, 230, 231, 232, 234, 235, 236, 237], "ipynb": [228, 229, 231, 232, 234, 235, 236, 237], "galleri": [228, 229, 230, 231, 232, 234, 235, 236, 237], "sphinx": [228, 229, 230, 231, 232, 234, 235, 236, 237], "cartpol": [229, 236], "tabl": 229, "pick": 229, "highest": 229, "discretiz": 229, "amort": 229, "seen": 229, "past": 229, "esitm": 229, "ipython": 229, "get_funct": [229, 234], "is_notebook": 229, "shell": 229, "get_ipython": 229, "__class__": 229, "zmqinteractiveshel": 229, "qtconsol": 229, "terminalinteractiveshel": 229, "nameerror": 229, "interpret": 229, "hyperparam": 229, "hopefulli": 229, "sentit": 229, "variat": 229, "2e": 229, "harder": [229, 237], "restrict": [229, 232, 236], "n_optim": 229, "n_worker": 229, "smooth": 229, "loos": 229, "notic": 229, "eps_greedy_v": 229, "eps_greedy_val_env": 229, "05": 229, "predefin": 229, "init_bia": 229, "500000": 229, "techin": 229, "dummy_env": 229, "9915987253189087": 229, "08324037492275238": 229, "pole": 229, "un": 229, "actuat": 229, "cart": 229, "frictionless": 229, "upright": [229, 236], "balanc": [229, 236], "pixels_sav": 229, "eval_rollout": 229, "imageio": 229, "mimwrit": 229, "cartpole_random": 229, "mp4": 229, "fp": 229, "480": [229, 232], "360": 229, "trick": 229, "num_ob": 229, "num_act": 229, "make_model": 229, "output_s": 229, "unflatten_kei": 229, "fairli": 229, "params_target": 229, "actor_explor": 229, "params_flat": 229, "flatten_kei": 229, "params_target_flat": 229, "600": 229, "bootstrap": 229, "value_next_step": 229, "not_termin": 229, "significantli": 229, "data_collector": 229, "traj_lengths_ev": 229, "grad_val": 229, "traj_length": 229, "mavg": 229, "traj_count": 229, "prev_traj_count": 229, "enough": 229, "sampled_data": 229, "sampled_data_out": 229, "tdstep": 229, "exp_valu": 229, "mse_loss": 229, "gv": 229, "clip_grad_value_": 229, "set_": 229, "clear_output": 229, "gcf": 229, "clf": 229, "figsiz": 229, "subplot": [229, 236], "traj": 229, "savefig": 229, "dqn_td0": 229, "png": 229, "traceback": 229, "__w": 229, "doc": 229, "coding_dqn": [229, 233], "382": 229, "miniconda": 229, "1929": 229, "__getitem__": [229, 235], "2662": 229, "_default_get": 229, "548": 229, "keyerror": 229, "imshow": [229, 236], "imread": 229, "axi": 229, "traj_lengths_train": 229, "saved_results_td0": 229, "entir": 229, "capac": 229, "smooth_l1_loss": 229, "clip_grad_norm_": 229, "dqn_tdlambda": 229, "saved_results_tdlambda": 229, "fewer": 229, "load_td0": 229, "load_tdlambda": 229, "frames_td0": 229, "frames_tdlambda": 229, "evals_td0": 229, "evals_tdlambda": 229, "mavgs_td0": 229, "mavgs_tdlambda": 229, "losses_td0": 229, "losses_tdlambda": 229, "values_td0": 229, "values_tdlambda": 229, "grad_vals_td0": 229, "grad_vals_tdlambda": 229, "traj_lengths_td0": 229, "traj_lengths_tdlambda": 229, "traj_count_td0": 229, "traj_count_tdlambda": 229, "td0": 229, "goe": [229, 236], "greatli": 229, "nth": 229, "noticebli": 229, "myopic": 229, "collectorclass": 229, "till": 229, "worst": 229, "accuraci": 229, "fanci": 229, "323": [229, 233], "tutorials_python": 230, "tutorials_jupyt": 230, "distinct": 231, "humanoid": [231, 236], "walk": [231, 236], "env1": 231, "env1_obs_kei": 231, "observation_stand": 231, "env2": 231, "env2_obs_kei": 231, "observation_walk": 231, "tdreset1": 231, "tdreset2": 231, "tdreset": 231, "67": 231, "backbon": [231, 237], "policy_common": 231, "policy_stand": 231, "policy_walk": 231, "seq": 231, "21": [231, 232], "But": 231, "env1_mak": 231, "env2_mak": 231, "_single_task": 231, "td_rollout": 231, "shown": 231, "386": [231, 233], "multi_task": [231, 233], "explain": 232, "fine": 232, "tune": 232, "semat": 232, "interchang": 232, "sake": 232, "challeng": 232, "embodi": 232, "ai": 232, "env_transform": [232, 236], "s3": 232, "amazonaw": 232, "r3m_50": 232, "374m": 232, "4m": 232, "90": 232, "5mb": 232, "8m": 232, "9mb": 232, "49": 232, "100mb": 232, "65": 232, "5m": 232, "110mb": 232, "3m": 232, "84": 232, "26": 232, "31": [232, 233, 237], "115m": 232, "3mb": 232, "131m": 232, "2mb": 232, "39": 232, "147m": 232, "102mb": 232, "164m": 232, "104mb": 232, "48": 232, "180m": 232, "1mb": 232, "53": 232, "197m": 232, "96": 232, "8mb": 232, "57": 232, "212m": 232, "111mb": 232, "224m": 232, "106mb": 232, "63": 232, "234m": 232, "66": 232, "246m": 232, "71": 232, "70": 232, "261m": 232, "77": 232, "72": 232, "270m": 232, "78": 232, "74": 232, "279m": 232, "75": 232, "79": 232, "295m": 232, "82": 232, "306m": 232, "91": 232, "6mb": 232, "315m": 232, "4mb": 232, "88": 232, "328m": 232, "92": 232, "342m": 232, "86": 232, "351m": 232, "7mb": 232, "97": 232, "363m": 232, "93": 232, "2048": 232, "trainabl": 232, "wiser": 232, "subset": 232, "163": 232, "again": [232, 236], "conclud": 232, "tmpa43iyou6": 232, "030517578125": 232, "tmpjdwkzx60": 232, "00095367431640625": 232, "tmpncf25dr4": 232, "659": 232, "1796875": 232, "tmp3__40c1r": 232, "003814697265625": 232, "tmpl11gp4j2": 232, "haven": 232, "yet": 232, "_storag": 232, "740": [232, 233], "pretrained_model": [232, 233], "263": 233, "09": 233, "torchrl_demo": [233, 237], "182": [233, 237], "torch_env": [233, 236], "28": [233, 236], "705": [233, 236], "122": [233, 234, 236], "tensordict_tutori": [233, 235], "027": [233, 235], "recommand": 234, "conveni": [234, 235], "a_out": 234, "mergelinear": 234, "in_1": 234, "in_2": 234, "linear_1": 234, "linear_2": 234, "x_1": 234, "x_2": 234, "multiheadlinear": 234, "out_1": 234, "out_2": 234, "splitlinear": 234, "output_1": 234, "output_2": 234, "split_and_merge_linear": 234, "make_functional_with_buff": 234, "replica": 234, "params_expand": [234, 237], "buffers_expand": 234, "num_model": 234, "group": 234, "zeros_lik": 234, "result_td": 234, "ok": 234, "conflict": 234, "wire": 234, "tensordictsequentialand": 234, "block": 234, "demonstr": [234, 236], "architectur": 234, "vaswani": 234, "2017": 234, "asid": 234, "tokenstoqkv": 234, "to_dim": 234, "from_dim": 234, "latent_dim": 234, "x_to": 234, "x_from": 234, "splithead": 234, "num_head": 234, "to_num": 234, "from_num": 234, "d_tensor": 234, "transpos": 234, "softmax": 234, "n_head": 234, "d_in": 234, "attn": 234, "skiplayernorm": 234, "to_len": 234, "layer_norm": 234, "layernorm": 234, "x_0": 234, "ffn": 234, "dropout_r": 234, "attentionblock": 234, "tokens_to_qkv": 234, "split_head": 234, "encodertransformerblock": 234, "attention_block": 234, "x_out": 234, "decodertransformerblock": 234, "encoder_block": 234, "transformerencod": 234, "num_block": 234, "transformerdecod": 234, "from_len": 234, "attentionblocktensordict": 234, "connect": 234, "moreov": 234, "complic": [234, 235, 236], "to_nam": 234, "from_nam": 234, "thank": 234, "transformerblockencodertensordict": 234, "transformerblockdecodertensordict": 234, "token": 234, "extract": 234, "transformerencodertensordict": 234, "transformerdecodertensordict": 234, "transformertensordict": 234, "x_encod": 234, "x_decod": 234, "ve": 234, "operar": 234, "td_token": 234, "tdtransform": 234, "t1": 234, "t2": 234, "013517379760742188": 234, "t3": 234, "t4": 234, "009270906448364258": 234, "margin": 234, "deal": 235, "furthermor": 235, "awai": 235, "organ": 235, "power": 235, "segment": 235, "get_data_a": 235, "get_data_b": 235, "reusabl": 235, "lot": 235, "rewriten": 235, "modal": 235, "get_data": 235, "reus": 235, "argu": 235, "dictdataset": 235, "collat": 235, "collate_dict_fn": 235, "dict_list": 235, "final_dict": 235, "single_dict": 235, "simpler": 235, "collate_tensordict_fn": 235, "furtherdown": 235, "_permutedtensordict": 235, "_unsqueezedtensordict": 235, "_viewedtensordict": 235, "datastructur": 235, "explicitli": 235, "caramba": 235, "algebra": 235, "foo": [235, 236], "multidimension": 235, "insid": [235, 236], "violat": 235, "err": 235, "resp": 235, "among": 235, "tensordict_clon": 235, "tensodict": 235, "tuple_index": 235, "new_tensordict": 235, "get_sub_tensordict": 235, "subtensordict": 235, "subtd": 235, "td2": 235, "booltensor": 235, "fashion": 235, "clonned_tensordict": 235, "staked_tensordict": 235, "isinst": 235, "unbind": 235, "list_tensordict": 235, "comeback": 235, "unsqueezed_tensordict": 235, "role": 236, "supervis": 236, "unsupervis": 236, "rom": 236, "licens": 236, "pygam": 236, "unifi": 236, "_build_env": 236, "sphinx_gallery_start_ignor": 236, "warn": 236, "filterwarn": 236, "sphinx_gallery_end_ignor": 236, "adventur": 236, "ram": 236, "airraid": 236, "alien": 236, "amidar": 236, "assault": 236, "continuousbox": [236, 237], "8944": 236, "pack": 236, "brief": 236, "exectut": 236, "reproduct": 236, "did": 236, "shortcut": 236, "tensordict_tprim": 236, "tensordict_rollout": [236, 237], "quickli": 236, "axesimag": 236, "0x7ff00c57fe80": 236, "inconsist": 236, "supplementari": 236, "swingup": 236, "swingup_spars": 236, "ball_in_cup": 236, "catch": 236, "balance_spars": 236, "three_pol": 236, "two_pol": 236, "finger": 236, "turn_easi": 236, "turn_hard": 236, "fish": 236, "swim": 236, "hopper": 236, "hop": 236, "run_pure_st": 236, "bring_bal": 236, "bring_peg": 236, "insert_bal": 236, "insert_peg": 236, "point_mass": 236, "reacher": 236, "swimmer": 236, "swimmer6": 236, "swimmer15": 236, "walker": 236, "dog": 236, "trot": 236, "humanoid_cmu": 236, "lqr": 236, "lqr_2_1": 236, "lqr_6_2": 236, "quadrup": 236, "escap": 236, "stacker": 236, "stack_2": 236, "stack_4": 236, "240": [236, 237], "320": 236, "wrapper1": 236, "wrapper2": 236, "obviou": 236, "truth": 236, "extern": 236, "env0": 236, "env_transformed_bi": 236, "stanc": 236, "transformeddistribut": 236, "base_dist": 236, "concat": 236, "mofidi": 236, "_inv_apply_transform": 236, "_apply_transform": 236, "transformedenviron": 236, "moderet": 236, "computation": 236, "legitim": 236, "side": 236, "incom": 236, "amongst": 236, "has_cuda": 236, "simplest": 236, "wor": 236, "convention": 236, "scope": 236, "difficulti": 236, "markovian": 236, "3288080526": 236, "sometim": 236, "constain": 236, "uuid1": 236, "bar_": 236, "get_someth": 236, "bar_d1356fc4": 236, "a021": 236, "11ed": 236, "82f0": 236, "0242ac120002": 236, "aargh": 236, "ourselv": 236, "foo_list": 236, "vec_env": 236, "_dispatch_caller_parallel": 236, "0x7feff1550ee0": 236, "bar_d4ab0d80": 236, "8f7a": 236, "bar_d4d4938a": 236, "a40d": 236, "bar_d4c3fa7a": 236, "92e7": 236, "121": 236, "parallen": 236, "carefulli": 236, "commonli": 236, "approxim": 236, "particularili": 236, "evolv": 236, "caution": 236, "previous": 236, "steadi": 236, "approx": 236, "0006": 236, "2655": 236, "0116": 236, "1776": 236, "1596": 236, "1883": 236, "_extra_st": 236, "observation_ssq": 236, "observation_sum": 236, "1270": 236, "1263": 236, "1743": 236, "2153": 236, "1025": 236, "2501": 236, "dispach": 236, "small": 236, "absor": 236, "demo": 237, "icml": 237, "dai": 237, "overview": 237, "vmoen": 237, "fb": 237, "question": 237, "team": 237, "decid": 237, "invest": 237, "platform": 237, "media": 237, "truli": 237, "rest": 237, "predominantli": 237, "tensordict1": 237, "tensordict2": 237, "tensordict_sampl": 237, "_sampler": 237, "_sum_tre": 237, "28791671991348267": 237, "06984968483448029": 237, "gym_env": 237, "squash": 237, "lazyconv2d": 237, "6400": 237, "backbone_modul": 237, "value_modul": 237, "tensordict_exp": 237, "base_modul": 237, "0137": 237, "1524": 237, "0641": 237, "indexputbackward0": 237, "8728": 237, "1335": 237, "9833": 237, "3497": 237, "6889": 237, "6433": 237, "clampbackward1": 237, "1131": 237, "1761": 237, "3425": 237, "2665": 237, "2915": 237, "6207": 237, "1441": 237, "2375": 237, "1242": 237, "1372": 237, "3810": 237, "meanbackward1": 237, "tensordicts_prealloc": 237, "tensordicts_stack": 237, "disclaim": 237, "concatmodul": 237, "loss_td": 237, "loss_valu": 237, "pred_valu": 237, "pred_value_max": 237, "target_value_max": 237, "year": 237, "roadmap": 237, "compris": 237, "hierarch": 237, "contributor": 237, "curiou": 237, "feedback": 237, "nascent": 237, "pypi": 237}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "RandomPolicy"], [14, 0, 1, "", "SyncDataCollector"], [15, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[14, 1, 1, "", "iterator"], [14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "rollout"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[16, 2, 1, "", "split_trajectories"]], "torchrl.data": [[17, 0, 1, "", "BinaryDiscreteTensorSpec"], [18, 0, 1, "", "BoundedTensorSpec"], [19, 0, 1, "", "CompositeSpec"], [20, 0, 1, "", "DiscreteTensorSpec"], [21, 0, 1, "", "MultiDiscreteTensorSpec"], [22, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [23, 0, 1, "", "MultiStep"], [24, 0, 1, "", "OneHotDiscreteTensorSpec"], [25, 0, 1, "", "PrioritizedReplayBuffer"], [26, 0, 1, "", "ReplayBuffer"], [27, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [28, 0, 1, "", "TensorDictReplayBuffer"], [29, 0, 1, "", "TensorSpec"], [30, 0, 1, "", "UnboundedContinuousTensorSpec"], [31, 0, 1, "", "UnboundedDiscreteTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "expand"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "expand"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "expand"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "keys"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "expand"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[21, 1, 1, "", "assert_is_in"], [21, 1, 1, "", "encode"], [21, 1, 1, "", "expand"], [21, 1, 1, "", "index"], [21, 1, 1, "", "is_in"], [21, 1, 1, "", "project"], [21, 1, 1, "", "rand"], [21, 1, 1, "", "to_numpy"], [21, 1, 1, "", "type_check"], [21, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "expand"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[23, 1, 1, "", "add_module"], [23, 1, 1, "", "apply"], [23, 1, 1, "", "bfloat16"], [23, 1, 1, "", "buffers"], [23, 1, 1, "", "children"], [23, 1, 1, "", "cpu"], [23, 1, 1, "", "cuda"], [23, 1, 1, "", "double"], [23, 1, 1, "", "eval"], [23, 1, 1, "", "extra_repr"], [23, 1, 1, "", "float"], [23, 1, 1, "", "forward"], [23, 1, 1, "", "get_buffer"], [23, 1, 1, "", "get_extra_state"], [23, 1, 1, "", "get_parameter"], [23, 1, 1, "", "get_submodule"], [23, 1, 1, "", "half"], [23, 1, 1, "", "ipu"], [23, 1, 1, "", "load_state_dict"], [23, 1, 1, "", "modules"], [23, 1, 1, "", "named_buffers"], [23, 1, 1, "", "named_children"], [23, 1, 1, "", "named_modules"], [23, 1, 1, "", "named_parameters"], [23, 1, 1, "", "parameters"], [23, 1, 1, "", "register_backward_hook"], [23, 1, 1, "", "register_buffer"], [23, 1, 1, "", "register_forward_hook"], [23, 1, 1, "", "register_forward_pre_hook"], [23, 1, 1, "", "register_full_backward_hook"], [23, 1, 1, "", "register_load_state_dict_post_hook"], [23, 1, 1, "", "register_module"], [23, 1, 1, "", "register_parameter"], [23, 1, 1, "", "requires_grad_"], [23, 1, 1, "", "set_extra_state"], [23, 1, 1, "", "share_memory"], [23, 1, 1, "", "state_dict"], [23, 1, 1, "", "to"], [23, 1, 1, "", "to_empty"], [23, 1, 1, "", "train"], [23, 1, 1, "", "type"], [23, 1, 1, "", "xpu"], [23, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "append_transform"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "insert_transform"], [25, 1, 1, "", "sample"]], "torchrl.data.ReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "append_transform"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "insert_transform"], [26, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[27, 1, 1, "", "add"], [27, 1, 1, "", "append_transform"], [27, 1, 1, "", "extend"], [27, 1, 1, "", "insert_transform"], [27, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[28, 1, 1, "", "add"], [28, 1, 1, "", "append_transform"], [28, 1, 1, "", "extend"], [28, 1, 1, "", "insert_transform"], [28, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.samplers": [[32, 0, 1, "", "PrioritizedSampler"], [33, 0, 1, "", "RandomSampler"], [34, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[32, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[35, 0, 1, "", "LazyMemmapStorage"], [36, 0, 1, "", "LazyTensorStorage"], [37, 0, 1, "", "ListStorage"], [38, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[35, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[36, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[39, 0, 1, "", "RoundRobinWriter"], [40, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[39, 1, 1, "", "add"], [39, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[40, 1, 1, "", "add"], [40, 1, 1, "", "extend"]], "torchrl.envs": [[41, 0, 1, "", "EnvBase"], [42, 0, 1, "", "EnvCreator"], [43, 0, 1, "", "EnvMetaData"], [44, 0, 1, "", "GymLikeEnv"], [45, 2, 1, "", "ModelBasedEnvBase"], [46, 0, 1, "", "ParallelEnv"], [47, 0, 1, "", "SerialEnv"], [48, 0, 1, "", "Specs"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[41, 1, 1, "", "add_module"], [41, 1, 1, "", "apply"], [41, 3, 1, "", "batch_locked"], [41, 1, 1, "", "bfloat16"], [41, 1, 1, "", "buffers"], [41, 1, 1, "", "children"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 1, 1, "", "double"], [41, 1, 1, "", "eval"], [41, 1, 1, "", "extra_repr"], [41, 1, 1, "", "fake_tensordict"], [41, 1, 1, "", "float"], [41, 1, 1, "", "forward"], [41, 1, 1, "", "get_buffer"], [41, 1, 1, "", "get_extra_state"], [41, 1, 1, "", "get_parameter"], [41, 1, 1, "", "get_submodule"], [41, 1, 1, "", "half"], [41, 1, 1, "", "ipu"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "modules"], [41, 1, 1, "", "named_buffers"], [41, 1, 1, "", "named_children"], [41, 1, 1, "", "named_modules"], [41, 1, 1, "", "named_parameters"], [41, 1, 1, "", "parameters"], [41, 1, 1, "id0", "rand_step"], [41, 1, 1, "", "register_backward_hook"], [41, 1, 1, "", "register_buffer"], [41, 1, 1, "", "register_forward_hook"], [41, 1, 1, "", "register_forward_pre_hook"], [41, 1, 1, "", "register_full_backward_hook"], [41, 1, 1, "", "register_load_state_dict_post_hook"], [41, 1, 1, "", "register_module"], [41, 1, 1, "", "register_parameter"], [41, 1, 1, "", "requires_grad_"], [41, 1, 1, "id1", "reset"], [41, 1, 1, "id2", "rollout"], [41, 1, 1, "", "set_extra_state"], [41, 1, 1, "id3", "set_seed"], [41, 1, 1, "", "share_memory"], [41, 3, 1, "", "specs"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "id4", "step"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_empty"], [41, 1, 1, "", "train"], [41, 1, 1, "", "type"], [41, 1, 1, "", "xpu"], [41, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 3, 1, "", "batch_locked"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "close"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "fake_tensordict"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "rand_step"], [44, 1, 1, "", "read_action"], [44, 1, 1, "", "read_done"], [44, 1, 1, "", "read_obs"], [44, 1, 1, "", "read_reward"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "reset"], [44, 1, 1, "", "rollout"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_info_dict_reader"], [44, 1, 1, "", "set_seed"], [44, 1, 1, "", "share_memory"], [44, 3, 1, "", "specs"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "step"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[46, 1, 1, "", "add_module"], [46, 1, 1, "", "apply"], [46, 3, 1, "", "batch_locked"], [46, 1, 1, "", "bfloat16"], [46, 1, 1, "", "buffers"], [46, 1, 1, "", "children"], [46, 1, 1, "", "cpu"], [46, 1, 1, "", "cuda"], [46, 1, 1, "", "double"], [46, 1, 1, "", "eval"], [46, 1, 1, "", "extra_repr"], [46, 1, 1, "", "fake_tensordict"], [46, 1, 1, "", "float"], [46, 1, 1, "", "forward"], [46, 1, 1, "", "get_buffer"], [46, 1, 1, "", "get_extra_state"], [46, 1, 1, "", "get_parameter"], [46, 1, 1, "", "get_submodule"], [46, 1, 1, "", "half"], [46, 1, 1, "", "ipu"], [46, 1, 1, "", "load_state_dict"], [46, 1, 1, "", "modules"], [46, 1, 1, "", "named_buffers"], [46, 1, 1, "", "named_children"], [46, 1, 1, "", "named_modules"], [46, 1, 1, "", "named_parameters"], [46, 1, 1, "", "parameters"], [46, 1, 1, "", "rand_step"], [46, 1, 1, "", "register_backward_hook"], [46, 1, 1, "", "register_buffer"], [46, 1, 1, "", "register_forward_hook"], [46, 1, 1, "", "register_forward_pre_hook"], [46, 1, 1, "", "register_full_backward_hook"], [46, 1, 1, "", "register_load_state_dict_post_hook"], [46, 1, 1, "", "register_module"], [46, 1, 1, "", "register_parameter"], [46, 1, 1, "", "requires_grad_"], [46, 1, 1, "", "reset"], [46, 1, 1, "", "rollout"], [46, 1, 1, "", "set_extra_state"], [46, 1, 1, "", "set_seed"], [46, 1, 1, "", "share_memory"], [46, 3, 1, "", "specs"], [46, 1, 1, "", "state_dict"], [46, 1, 1, "", "step"], [46, 1, 1, "", "to"], [46, 1, 1, "", "to_empty"], [46, 1, 1, "", "train"], [46, 1, 1, "", "type"], [46, 1, 1, "", "update_kwargs"], [46, 1, 1, "", "xpu"], [46, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[47, 1, 1, "", "add_module"], [47, 1, 1, "", "apply"], [47, 3, 1, "", "batch_locked"], [47, 1, 1, "", "bfloat16"], [47, 1, 1, "", "buffers"], [47, 1, 1, "", "children"], [47, 1, 1, "", "cpu"], [47, 1, 1, "", "cuda"], [47, 1, 1, "", "double"], [47, 1, 1, "", "eval"], [47, 1, 1, "", "extra_repr"], [47, 1, 1, "", "fake_tensordict"], [47, 1, 1, "", "float"], [47, 1, 1, "", "forward"], [47, 1, 1, "", "get_buffer"], [47, 1, 1, "", "get_extra_state"], [47, 1, 1, "", "get_parameter"], [47, 1, 1, "", "get_submodule"], [47, 1, 1, "", "half"], [47, 1, 1, "", "ipu"], [47, 1, 1, "", "load_state_dict"], [47, 1, 1, "", "modules"], [47, 1, 1, "", "named_buffers"], [47, 1, 1, "", "named_children"], [47, 1, 1, "", "named_modules"], [47, 1, 1, "", "named_parameters"], [47, 1, 1, "", "parameters"], [47, 1, 1, "", "rand_step"], [47, 1, 1, "", "register_backward_hook"], [47, 1, 1, "", "register_buffer"], [47, 1, 1, "", "register_forward_hook"], [47, 1, 1, "", "register_forward_pre_hook"], [47, 1, 1, "", "register_full_backward_hook"], [47, 1, 1, "", "register_load_state_dict_post_hook"], [47, 1, 1, "", "register_module"], [47, 1, 1, "", "register_parameter"], [47, 1, 1, "", "requires_grad_"], [47, 1, 1, "", "reset"], [47, 1, 1, "", "rollout"], [47, 1, 1, "", "set_extra_state"], [47, 1, 1, "", "set_seed"], [47, 1, 1, "", "share_memory"], [47, 3, 1, "", "specs"], [47, 1, 1, "", "state_dict"], [47, 1, 1, "", "step"], [47, 1, 1, "", "to"], [47, 1, 1, "", "to_empty"], [47, 1, 1, "", "train"], [47, 1, 1, "", "type"], [47, 1, 1, "", "update_kwargs"], [47, 1, 1, "", "xpu"], [47, 1, 1, "", "zero_grad"]], "torchrl.envs.Specs": [[48, 1, 1, "", "build_tensordict"]], "torchrl.envs.libs.brax": [[49, 2, 1, "", "BraxEnv"], [50, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[51, 2, 1, "", "DMControlEnv"], [52, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[53, 2, 1, "", "GymEnv"], [54, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[55, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[56, 2, 1, "", "JumanjiEnv"], [57, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.vmas": [[58, 2, 1, "", "VmasEnv"], [59, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[60, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[61, 0, 1, "", "BinarizeReward"], [62, 0, 1, "", "CatFrames"], [63, 0, 1, "", "CatTensors"], [64, 0, 1, "", "CenterCrop"], [65, 0, 1, "", "Compose"], [66, 0, 1, "", "DiscreteActionProjection"], [67, 0, 1, "", "DoubleToFloat"], [68, 0, 1, "", "ExcludeTransform"], [69, 0, 1, "", "FiniteTensorDictCheck"], [70, 0, 1, "", "FlattenObservation"], [71, 0, 1, "", "FrameSkipTransform"], [72, 0, 1, "", "GrayScale"], [73, 0, 1, "", "NoopResetEnv"], [74, 0, 1, "", "ObservationNorm"], [75, 0, 1, "", "ObservationTransform"], [76, 0, 1, "", "PinMemoryTransform"], [77, 0, 1, "", "R3MTransform"], [78, 0, 1, "", "Resize"], [79, 0, 1, "", "RewardClipping"], [80, 0, 1, "", "RewardScaling"], [81, 0, 1, "", "RewardSum"], [82, 0, 1, "", "SelectTransform"], [83, 0, 1, "", "SqueezeTransform"], [84, 0, 1, "", "StepCounter"], [85, 0, 1, "", "TensorDictPrimer"], [86, 0, 1, "", "TimeMaxPool"], [87, 0, 1, "", "ToTensorImage"], [88, 0, 1, "", "Transform"], [89, 0, 1, "", "TransformedEnv"], [90, 0, 1, "", "UnsqueezeTransform"], [91, 0, 1, "", "VIPRewardTransform"], [92, 0, 1, "", "VIPTransform"], [93, 0, 1, "", "VecNorm"], [94, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[61, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[62, 1, 1, "", "reset"], [62, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[63, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[64, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[65, 1, 1, "", "forward"], [65, 1, 1, "", "reset"], [65, 1, 1, "", "to"], [65, 1, 1, "", "transform_input_spec"], [65, 1, 1, "", "transform_observation_spec"], [65, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[67, 1, 1, "", "transform_input_spec"], [67, 1, 1, "", "transform_observation_spec"], [67, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[68, 1, 1, "", "reset"], [68, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FlattenObservation": [[70, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[72, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[73, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[74, 1, 1, "", "init_stats"], [74, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[77, 1, 1, "", "to"]], "torchrl.envs.transforms.Resize": [[78, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[79, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[80, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[81, 1, 1, "", "reset"], [81, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[82, 1, 1, "", "reset"], [82, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SqueezeTransform": [[83, 1, 1, "", "forward"]], "torchrl.envs.transforms.StepCounter": [[84, 1, 1, "", "reset"], [84, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[85, 1, 1, "", "reset"], [85, 1, 1, "", "to"], [85, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[86, 1, 1, "", "reset"], [86, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[87, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[88, 1, 1, "", "forward"], [88, 1, 1, "", "reset"], [88, 1, 1, "", "transform_input_spec"], [88, 1, 1, "", "transform_observation_spec"], [88, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[89, 3, 1, "", "action_spec"], [89, 3, 1, "", "batch_locked"], [89, 1, 1, "", "eval"], [89, 3, 1, "", "input_spec"], [89, 1, 1, "", "load_state_dict"], [89, 3, 1, "", "observation_spec"], [89, 3, 1, "", "reward_spec"], [89, 1, 1, "", "set_seed"], [89, 1, 1, "", "state_dict"], [89, 1, 1, "", "to"], [89, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[90, 1, 1, "", "forward"], [90, 1, 1, "", "transform_input_spec"], [90, 1, 1, "", "transform_observation_spec"], [90, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[91, 1, 1, "", "forward"], [91, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[92, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[93, 1, 1, "", "build_td_for_shared_vecnorm"], [93, 1, 1, "", "get_extra_state"], [93, 1, 1, "", "set_extra_state"], [93, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[94, 1, 1, "", "reset"]], "torchrl.envs.utils": [[95, 2, 1, "", "check_env_specs"], [96, 2, 1, "", "exploration_mode"], [97, 2, 1, "", "get_available_libraries"], [98, 2, 1, "", "set_exploration_mode"], [99, 2, 1, "", "step_mdp"]], "torchrl.modules": [[100, 0, 1, "", "CEMPlanner"], [101, 0, 1, "", "ConvNet"], [102, 0, 1, "", "DdpgCnnActor"], [103, 0, 1, "", "DdpgCnnQNet"], [104, 0, 1, "", "DdpgMlpActor"], [105, 0, 1, "", "DdpgMlpQNet"], [106, 0, 1, "", "Delta"], [107, 0, 1, "", "DistributionalDQNnet"], [108, 0, 1, "", "DreamerActor"], [109, 0, 1, "", "DuelingCnnDQNet"], [110, 0, 1, "", "IndependentNormal"], [111, 0, 1, "", "LSTMNet"], [112, 0, 1, "", "MLP"], [113, 0, 1, "", "MPCPlannerBase"], [114, 0, 1, "", "MPPIPlanner"], [115, 0, 1, "", "NoisyLazyLinear"], [116, 0, 1, "", "NoisyLinear"], [117, 0, 1, "", "NormalParamWrapper"], [118, 0, 1, "", "ObsDecoder"], [119, 0, 1, "", "ObsEncoder"], [120, 0, 1, "", "OneHotCategorical"], [121, 0, 1, "", "RSSMPosterior"], [122, 0, 1, "", "RSSMPrior"], [123, 0, 1, "", "TanhDelta"], [124, 0, 1, "", "TanhNormal"], [125, 0, 1, "", "TruncatedNormal"], [126, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[100, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[101, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[102, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[103, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[104, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[105, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[106, 1, 1, "", "log_prob"], [106, 3, 1, "", "mean"], [106, 3, 1, "", "mode"], [106, 1, 1, "", "rsample"], [106, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[107, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[108, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[109, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[110, 3, 1, "", "mode"]], "torchrl.modules.LSTMNet": [[111, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[112, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[113, 1, 1, "", "forward"], [113, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[114, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[115, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[117, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[118, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[119, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[120, 1, 1, "", "log_prob"], [120, 3, 1, "", "mode"], [120, 1, 1, "", "rsample"], [120, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[121, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[122, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[123, 3, 1, "", "mean"], [123, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[124, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[125, 1, 1, "", "log_prob"], [125, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module": [[127, 0, 1, "", "Actor"], [128, 0, 1, "", "ActorCriticOperator"], [129, 0, 1, "", "ActorCriticWrapper"], [130, 0, 1, "", "ActorValueOperator"], [131, 0, 1, "", "AdditiveGaussianWrapper"], [132, 0, 1, "", "DistributionalQValueActor"], [133, 0, 1, "", "EGreedyWrapper"], [134, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [135, 0, 1, "", "ProbabilisticActor"], [136, 0, 1, "", "QValueActor"], [137, 0, 1, "", "SafeModule"], [138, 0, 1, "", "SafeProbabilisticModule"], [139, 0, 1, "", "SafeProbabilisticSequential"], [140, 0, 1, "", "SafeSequential"], [141, 0, 1, "", "ValueOperator"], [142, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[128, 1, 1, "", "get_critic_operator"], [128, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[129, 1, 1, "", "get_policy_operator"], [129, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[130, 1, 1, "", "get_policy_operator"], [130, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.SafeModule": [[137, 1, 1, "", "random"], [137, 1, 1, "", "random_sample"], [137, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[138, 1, 1, "", "random"], [138, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[142, 1, 1, "", "get_reward_operator"], [142, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.tensordict_module.actors": [[143, 0, 1, "", "DistributionalQValueHook"], [144, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[145, 0, 1, "", "ensure_tensordict_compatible"], [146, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[147, 0, 1, "", "biased_softplus"], [148, 0, 1, "", "inv_softplus"], [149, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[147, 1, 1, "", "forward"]], "torchrl.objectives": [[150, 0, 1, "", "A2CLoss"], [151, 0, 1, "", "ClipPPOLoss"], [152, 0, 1, "", "DDPGLoss"], [153, 0, 1, "", "DQNLoss"], [154, 0, 1, "", "DistributionalDQNLoss"], [155, 0, 1, "", "DreamerActorLoss"], [156, 0, 1, "", "DreamerModelLoss"], [157, 0, 1, "", "DreamerValueLoss"], [158, 0, 1, "", "HardUpdate"], [159, 0, 1, "", "KLPENPPOLoss"], [160, 0, 1, "", "PPOLoss"], [161, 0, 1, "", "REDQLoss"], [162, 0, 1, "", "ReinforceLoss"], [163, 0, 1, "", "SACLoss"], [164, 0, 1, "", "SoftUpdate"], [165, 0, 1, "", "distance_loss"], [166, 0, 1, "", "hold_out_net"], [167, 0, 1, "", "hold_out_params"], [168, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[150, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[151, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[152, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[153, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[154, 1, 1, "", "forward"]], "torchrl.objectives.DreamerActorLoss": [[155, 1, 1, "", "forward"]], "torchrl.objectives.DreamerModelLoss": [[156, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[157, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[159, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[160, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[161, 1, 1, "", "forward"]], "torchrl.objectives.ReinforceLoss": [[162, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[163, 1, 1, "", "forward"]], "torchrl.objectives.value": [[169, 0, 1, "", "GAE"], [170, 0, 1, "", "TDEstimate"], [171, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[169, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[170, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[171, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[172, 0, 1, "", "generalized_advantage_estimate"], [173, 0, 1, "", "td_advantage_estimate"], [174, 0, 1, "", "td_lambda_advantage_estimate"], [175, 0, 1, "", "td_lambda_return_estimate"], [176, 0, 1, "", "vec_generalized_advantage_estimate"], [177, 0, 1, "", "vec_td_lambda_advantage_estimate"], [178, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[179, 2, 1, "", "TensorDictRecorder"], [180, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[181, 2, 1, "", "CSVLogger"], [182, 2, 1, "", "Logger"], [183, 2, 1, "", "MLFlowLogger"], [184, 2, 1, "", "TensorboardLogger"], [185, 2, 1, "", "WandbLogger"], [186, 2, 1, "", "generate_exp_name"], [187, 2, 1, "", "get_logger"]], "torchrl.trainers": [[188, 0, 1, "", "BatchSubSampler"], [189, 0, 1, "", "ClearCudaCache"], [190, 0, 1, "", "CountFramesLog"], [191, 0, 1, "", "LogReward"], [192, 0, 1, "", "OptimizerHook"], [193, 0, 1, "", "Recorder"], [194, 0, 1, "", "RewardNormalizer"], [195, 0, 1, "", "SelectKeys"], [196, 0, 1, "", "Trainer"], [197, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.helpers": [[198, 2, 1, "", "correct_for_frame_skip"], [199, 2, 1, "", "get_stats_random_rollout"], [200, 2, 1, "", "make_a2c_loss"], [201, 2, 1, "", "make_a2c_model"], [202, 2, 1, "", "make_collector_offpolicy"], [203, 2, 1, "", "make_collector_onpolicy"], [204, 2, 1, "", "make_ddpg_actor"], [205, 2, 1, "", "make_ddpg_loss"], [206, 2, 1, "", "make_dqn_actor"], [207, 2, 1, "", "make_dqn_loss"], [208, 2, 1, "", "make_ppo_loss"], [209, 2, 1, "", "make_ppo_model"], [210, 2, 1, "", "make_redq_loss"], [211, 2, 1, "", "make_redq_model"], [212, 2, 1, "", "make_replay_buffer"], [213, 2, 1, "", "make_sac_loss"], [214, 2, 1, "", "make_sac_model"], [215, 2, 1, "", "make_target_updater"], [216, 2, 1, "", "make_trainer"], [217, 2, 1, "", "parallel_env_constructor"], [218, 2, 1, "", "sync_async_collector"], [219, 2, 1, "", "sync_sync_collector"], [220, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 5, 224, 225, 226, 227, 228, 229, 236, 237], "document": [0, 8], "tutori": 0, "refer": [0, 222], "knowledg": [0, 223], "base": [0, 223, 229], "indic": 0, "tabl": 0, "collector": [1, 228], "packag": [1, 2, 3, 224, 225, 226, 227], "data": [1, 2, 228, 237], "helper": [1, 3], "function": [1, 237], "replai": [2, 228, 237], "buffer": [2, 228, 237], "compos": [2, 65], "tensorspec": [2, 29], "util": [2, 224, 225, 226], "env": [3, 236, 237], "vector": [3, 237], "transform": [3, 88, 228, 234, 236, 237], "record": [3, 193, 228], "domain": 3, "specif": [3, 231], "librari": [3, 237], "work": [4, 5], "gym": [4, 236], "what": 4, "i": [4, 7, 235], "openai": 4, "version": [4, 6, 9], "habitat": 5, "lab": 5, "set": [5, 235], "up": 5, "your": [5, 228], "environ": [5, 6, 228, 229, 231, 236, 237], "instal": [5, 6, 237], "from": [5, 6], "pip": [5, 6], "us": [5, 8, 228, 229, 232, 234, 237], "common": [5, 6, 7], "issu": [5, 6, 9], "about": 6, "mujoco": 6, "prerequisit": 6, "render": [6, 236], "all": 6, "new": 6, "bindindg": 6, "2": [6, 234], "1": [6, 234], "old": 6, "bind": 6, "py": 6, "option": 6, "clone": 6, "repo": [6, 8], "when": 6, "pro": 7, "tip": 7, "debug": 7, "gradient": 7, "relat": 7, "error": 7, "newcom": 7, "my": 7, "train": [7, 228, 229], "too": 7, "slow": 7, "intermedi": 7, "bug": 7, "resourc": 8, "pytorch": [8, 9], "functorch": [8, 234], "rl": [8, 237], "blog": 8, "websit": 8, "educ": 8, "forum": 8, "how": 9, "reproduc": 9, "workaround": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "randompolici": 13, "syncdatacollector": 14, "asyncdatacollector": 15, "split_trajectori": 16, "binarydiscretetensorspec": 17, "boundedtensorspec": 18, "compositespec": 19, "discretetensorspec": 20, "multidiscretetensorspec": 21, "multionehotdiscretetensorspec": 22, "multistep": 23, "onehotdiscretetensorspec": 24, "prioritizedreplaybuff": 25, "replaybuff": 26, "tensordictprioritizedreplaybuff": 27, "tensordictreplaybuff": 28, "unboundedcontinuoustensorspec": 30, "unboundeddiscretetensorspec": 31, "prioritizedsampl": 32, "randomsampl": 33, "sampler": 34, "lazymemmapstorag": 35, "lazytensorstorag": 36, "liststorag": 37, "storag": 38, "roundrobinwrit": 39, "writer": 40, "envbas": 41, "envcreat": 42, "envmetadata": 43, "gymlikeenv": 44, "modelbasedenvbas": 45, "parallelenv": 46, "serialenv": 47, "spec": [48, 236], "braxenv": 49, "braxwrapp": 50, "dmcontrolenv": 51, "dmcontrolwrapp": 52, "gymenv": 53, "gymwrapp": 54, "habitatenv": 55, "jumanjienv": 56, "jumanjiwrapp": 57, "vmasenv": 58, "vmaswrapp": 59, "dreamerenv": 60, "binarizereward": 61, "catfram": 62, "cattensor": 63, "centercrop": 64, "discreteactionproject": 66, "doubletofloat": 67, "excludetransform": 68, "finitetensordictcheck": 69, "flattenobserv": 70, "frameskiptransform": 71, "grayscal": 72, "noopresetenv": 73, "observationnorm": 74, "observationtransform": 75, "pinmemorytransform": 76, "r3mtransform": 77, "resiz": 78, "rewardclip": 79, "rewardsc": 80, "rewardsum": 81, "selecttransform": 82, "squeezetransform": 83, "stepcount": 84, "tensordictprim": 85, "timemaxpool": 86, "totensorimag": 87, "transformedenv": 89, "unsqueezetransform": 90, "viprewardtransform": 91, "viptransform": 92, "vecnorm": [93, 236], "gsdenois": 94, "check_env_spec": 95, "exploration_mod": 96, "get_available_librari": 97, "set_exploration_mod": 98, "step_mdp": 99, "cemplann": 100, "convnet": 101, "ddpgcnnactor": 102, "ddpgcnnqnet": 103, "ddpgmlpactor": 104, "ddpgmlpqnet": 105, "delta": 106, "distributionaldqnnet": 107, "dreameractor": 108, "duelingcnndqnet": 109, "independentnorm": 110, "lstmnet": 111, "mlp": 112, "mpcplannerbas": 113, "mppiplann": 114, "noisylazylinear": 115, "noisylinear": 116, "normalparamwrapp": 117, "obsdecod": 118, "obsencod": 119, "onehotcategor": 120, "rssmposterior": 121, "rssmprior": 122, "tanhdelta": 123, "tanhnorm": 124, "truncatednorm": 125, "reset_nois": 126, "actor": [127, 234], "actorcriticoper": [128, 234], "actorcriticwrapp": 129, "actorvalueoper": 130, "additivegaussianwrapp": 131, "distributionalqvalueactor": 132, "egreedywrapp": 133, "ornsteinuhlenbeckprocesswrapp": 134, "probabilisticactor": [135, 234], "qvalueactor": 136, "safemodul": 137, "safeprobabilisticmodul": 138, "safeprobabilisticsequenti": 139, "safesequenti": 140, "valueoper": 141, "worldmodelwrapp": 142, "distributionalqvaluehook": 143, "qvaluehook": 144, "ensure_tensordict_compat": 145, "is_tensordict_compat": 146, "biased_softplu": 147, "inv_softplu": 148, "map": 149, "a2closs": 150, "clipppoloss": 151, "ddpgloss": 152, "dqnloss": 153, "distributionaldqnloss": 154, "dreameractorloss": 155, "dreamermodelloss": 156, "dreamervalueloss": 157, "hardupd": 158, "klpenppoloss": 159, "ppoloss": 160, "redqloss": 161, "reinforceloss": 162, "sacloss": 163, "softupd": 164, "distance_loss": 165, "hold_out_net": 166, "hold_out_param": 167, "next_state_valu": 168, "gae": 169, "tdestim": 170, "tdlambdaestim": 171, "generalized_advantage_estim": 172, "td_advantage_estim": 173, "td_lambda_advantage_estim": 174, "td_lambda_return_estim": 175, "vec_generalized_advantage_estim": 176, "vec_td_lambda_advantage_estim": 177, "vec_td_lambda_return_estim": 178, "tensordictrecord": 179, "videorecord": 180, "csvlogger": 181, "logger": [182, 226], "mlflowlogg": 183, "tensorboardlogg": 184, "wandblogg": 185, "generate_exp_nam": 186, "get_logg": 187, "batchsubsampl": 188, "clearcudacach": 189, "countframeslog": 190, "logreward": 191, "optimizerhook": 192, "rewardnorm": 194, "selectkei": 195, "trainer": [196, 226], "updateweight": 197, "correct_for_frame_skip": 198, "get_stats_random_rollout": 199, "make_a2c_loss": 200, "make_a2c_model": 201, "make_collector_offpolici": 202, "make_collector_onpolici": 203, "make_ddpg_actor": 204, "make_ddpg_loss": 205, "make_dqn_actor": 206, "make_dqn_loss": 207, "make_ppo_loss": 208, "make_ppo_model": 209, "make_redq_loss": 210, "make_redq_model": 211, "make_replay_buff": 212, "make_sac_loss": 213, "make_sac_model": 214, "make_target_updat": 215, "make_train": 216, "parallel_env_constructor": 217, "sync_async_collector": 218, "sync_sync_collector": 219, "transformed_env_constructor": 220, "readm": [221, 230], "tuto": [221, 230], "api": 222, "contribut": [223, 237], "content": 223, "modul": [224, 237], "tensordict": [224, 235, 237], "hook": [224, 226], "model": [224, 228, 229, 232, 237], "explor": 224, "planner": 224, "distribut": 224, "object": [225, 228, 237], "dqn": [225, 229], "ddpg": [225, 228], "sac": 225, "redq": 225, "ppo": 225, "a2c": 225, "reinforc": 225, "dreamer": 225, "return": 225, "checkpoint": 226, "builder": 226, "_util": 227, "code": [228, 229, 235], "parallel": [228, 231, 236], "execut": [228, 231], "normal": 228, "observ": 228, "build": [228, 229], "evalu": 228, "hyperparamet": [228, 229], "initi": 228, "time": [228, 233], "polici": [228, 231], "experi": 228, "result": 228, "sampl": 228, "trajectori": 228, "td": [228, 229], "lambda": [228, 229], "pixel": 229, "The": 229, "problem": 229, "deep": 229, "q": 229, "network": 229, "regular": 229, "loop": 229, "conclus": 229, "possibl": 229, "improv": [229, 235], "task": 231, "multi": 231, "divers": 231, "rollout": [231, 236], "pretrain": 232, "comput": 233, "tensordictmodul": [234, 237], "exampl": 234, "simpl": 234, "usag": [234, 235], "multipl": 234, "input": 234, "3": 234, "output": 234, "4": 234, "combin": 234, "tensordictsequenti": 234, "5": 234, "compat": 234, "do": [234, 235], "": 234, "don": 234, "t": [234, 235], "probabilistictensordictmodul": 234, "showcas": 234, "implement": 234, "benchmark": 234, "modular": 235, "can": 235, "thi": 235, "python": 235, "dict": 235, "structur": 235, "dictionari": 235, "featur": 235, "get": 235, "kei": 235, "valu": 235, "updat": 235, "tensordict_or_dict": 235, "del": 235, "tensor": 235, "batch": 235, "size": 235, "devic": [235, 236], "memori": 235, "share": 235, "via": 235, "physic": 235, "oper": 235, "seed": 236, "reset": 236, "step": 236, "frame_skip": 236, "deepmind": 236, "control": 236, "run": 236, "close": 236, "access": 236, "attribut": 236, "kwarg": 236, "introduct": 237, "chang": 237, "config": 237, "sequenc": 237, "program": 237, "ensembl": 237, "meta": 237, "special": 237, "class": 237, "state": 237}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials": [[0, "tutorials"]], "References": [[0, "references"]], "Knowledge Base": [[0, "knowledge-base"], [223, "knowledge-base"]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers": [[2, "composable-replay-buffers"]], "TensorSpec": [[2, "tensorspec"], [29, "tensorspec"]], "Utils": [[2, "utils"], [224, "utils"], [225, "utils"], [226, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [228, "transforms"], [237, "transforms"]], "Recorders": [[3, "recorders"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Working with gym": [[4, "working-with-gym"]], "What is OpenAI Gym?": [[4, "what-is-openai-gym"]], "Versioning": [[4, "versioning"]], "Working with habitat-lab": [[5, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[5, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[5, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[5, "installing-torchrl"]], "Using Habitat": [[5, "using-habitat"]], "Common issues": [[5, "common-issues"]], "About MuJoCo": [[6, "about-mujoco"]], "Installing MuJoCo": [[6, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[6, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[6, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[6, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[6, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[6, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[6, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips and Debugging": [[7, "pro-tips-and-debugging"]], "Gradient-related errors [Newcomers]": [[7, "gradient-related-errors-newcomers"]], "My Training is too slow [Newcomers / intermediate]": [[7, "my-training-is-too-slow-newcomers-intermediate"]], "Common bugs": [[7, "common-bugs"]], "Useful resources": [[8, "useful-resources"]], "Pytorch documentation": [[8, "pytorch-documentation"]], "functorch documentation": [[8, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[8, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[8, "educational-resource"]], "Forums": [[8, "forums"]], "Repos": [[8, "repos"]], "Versioning Issues": [[9, "versioning-issues"]], "Pytorch version": [[9, "pytorch-version"]], "How to reproduce": [[9, "how-to-reproduce"]], "Workarounds": [[9, "workarounds"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "RandomPolicy": [[13, "randompolicy"]], "SyncDataCollector": [[14, "syncdatacollector"]], "aSyncDataCollector": [[15, "asyncdatacollector"]], "split_trajectories": [[16, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[17, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[18, "boundedtensorspec"]], "CompositeSpec": [[19, "compositespec"]], "DiscreteTensorSpec": [[20, "discretetensorspec"]], "MultiDiscreteTensorSpec": [[21, "multidiscretetensorspec"]], "MultiOneHotDiscreteTensorSpec": [[22, "multionehotdiscretetensorspec"]], "MultiStep": [[23, "multistep"]], "OneHotDiscreteTensorSpec": [[24, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[25, "prioritizedreplaybuffer"]], "ReplayBuffer": [[26, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[27, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[28, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[30, "unboundedcontinuoustensorspec"]], "UnboundedDiscreteTensorSpec": [[31, "unboundeddiscretetensorspec"]], "PrioritizedSampler": [[32, "prioritizedsampler"]], "RandomSampler": [[33, "randomsampler"]], "Sampler": [[34, "sampler"]], "LazyMemmapStorage": [[35, "lazymemmapstorage"]], "LazyTensorStorage": [[36, "lazytensorstorage"]], "ListStorage": [[37, "liststorage"]], "Storage": [[38, "storage"]], "RoundRobinWriter": [[39, "roundrobinwriter"]], "Writer": [[40, "writer"]], "EnvBase": [[41, "envbase"]], "EnvCreator": [[42, "envcreator"]], "EnvMetaData": [[43, "envmetadata"]], "GymLikeEnv": [[44, "gymlikeenv"]], "ModelBasedEnvBase": [[45, "modelbasedenvbase"]], "ParallelEnv": [[46, "parallelenv"]], "SerialEnv": [[47, "serialenv"]], "Specs": [[48, "specs"]], "BraxEnv": [[49, "braxenv"]], "BraxWrapper": [[50, "braxwrapper"]], "DMControlEnv": [[51, "dmcontrolenv"]], "DMControlWrapper": [[52, "dmcontrolwrapper"]], "GymEnv": [[53, "gymenv"]], "GymWrapper": [[54, "gymwrapper"]], "HabitatEnv": [[55, "habitatenv"]], "JumanjiEnv": [[56, "jumanjienv"]], "JumanjiWrapper": [[57, "jumanjiwrapper"]], "VmasEnv": [[58, "vmasenv"]], "VmasWrapper": [[59, "vmaswrapper"]], "DreamerEnv": [[60, "dreamerenv"]], "BinarizeReward": [[61, "binarizereward"]], "CatFrames": [[62, "catframes"]], "CatTensors": [[63, "cattensors"]], "CenterCrop": [[64, "centercrop"]], "Compose": [[65, "compose"]], "DiscreteActionProjection": [[66, "discreteactionprojection"]], "DoubleToFloat": [[67, "doubletofloat"]], "ExcludeTransform": [[68, "excludetransform"]], "FiniteTensorDictCheck": [[69, "finitetensordictcheck"]], "FlattenObservation": [[70, "flattenobservation"]], "FrameSkipTransform": [[71, "frameskiptransform"]], "GrayScale": [[72, "grayscale"]], "NoopResetEnv": [[73, "noopresetenv"]], "ObservationNorm": [[74, "observationnorm"]], "ObservationTransform": [[75, "observationtransform"]], "PinMemoryTransform": [[76, "pinmemorytransform"]], "R3MTransform": [[77, "r3mtransform"]], "Resize": [[78, "resize"]], "RewardClipping": [[79, "rewardclipping"]], "RewardScaling": [[80, "rewardscaling"]], "RewardSum": [[81, "rewardsum"]], "SelectTransform": [[82, "selecttransform"]], "SqueezeTransform": [[83, "squeezetransform"]], "StepCounter": [[84, "stepcounter"]], "TensorDictPrimer": [[85, "tensordictprimer"]], "TimeMaxPool": [[86, "timemaxpool"]], "ToTensorImage": [[87, "totensorimage"]], "Transform": [[88, "transform"]], "TransformedEnv": [[89, "transformedenv"]], "UnsqueezeTransform": [[90, "unsqueezetransform"]], "VIPRewardTransform": [[91, "viprewardtransform"]], "VIPTransform": [[92, "viptransform"]], "VecNorm": [[93, "vecnorm"], [236, "vecnorm"]], "gSDENoise": [[94, "gsdenoise"]], "check_env_specs": [[95, "check-env-specs"]], "exploration_mode": [[96, "exploration-mode"]], "get_available_libraries": [[97, "get-available-libraries"]], "set_exploration_mode": [[98, "set-exploration-mode"]], "step_mdp": [[99, "step-mdp"]], "CEMPlanner": [[100, "cemplanner"]], "ConvNet": [[101, "convnet"]], "DdpgCnnActor": [[102, "ddpgcnnactor"]], "DdpgCnnQNet": [[103, "ddpgcnnqnet"]], "DdpgMlpActor": [[104, "ddpgmlpactor"]], "DdpgMlpQNet": [[105, "ddpgmlpqnet"]], "Delta": [[106, "delta"]], "DistributionalDQNnet": [[107, "distributionaldqnnet"]], "DreamerActor": [[108, "dreameractor"]], "DuelingCnnDQNet": [[109, "duelingcnndqnet"]], "IndependentNormal": [[110, "independentnormal"]], "LSTMNet": [[111, "lstmnet"]], "MLP": [[112, "mlp"]], "MPCPlannerBase": [[113, "mpcplannerbase"]], "MPPIPlanner": [[114, "mppiplanner"]], "NoisyLazyLinear": [[115, "noisylazylinear"]], "NoisyLinear": [[116, "noisylinear"]], "NormalParamWrapper": [[117, "normalparamwrapper"]], "ObsDecoder": [[118, "obsdecoder"]], "ObsEncoder": [[119, "obsencoder"]], "OneHotCategorical": [[120, "onehotcategorical"]], "RSSMPosterior": [[121, "rssmposterior"]], "RSSMPrior": [[122, "rssmprior"]], "TanhDelta": [[123, "tanhdelta"]], "TanhNormal": [[124, "tanhnormal"]], "TruncatedNormal": [[125, "truncatednormal"]], "reset_noise": [[126, "reset-noise"]], "Actor": [[127, "actor"], [234, "actor"]], "ActorCriticOperator": [[128, "actorcriticoperator"], [234, "actorcriticoperator"]], "ActorCriticWrapper": [[129, "actorcriticwrapper"]], "ActorValueOperator": [[130, "actorvalueoperator"]], "AdditiveGaussianWrapper": [[131, "additivegaussianwrapper"]], "DistributionalQValueActor": [[132, "distributionalqvalueactor"]], "EGreedyWrapper": [[133, "egreedywrapper"]], "OrnsteinUhlenbeckProcessWrapper": [[134, "ornsteinuhlenbeckprocesswrapper"]], "ProbabilisticActor": [[135, "probabilisticactor"], [234, "probabilisticactor"]], "QValueActor": [[136, "qvalueactor"]], "SafeModule": [[137, "safemodule"]], "SafeProbabilisticModule": [[138, "safeprobabilisticmodule"]], "SafeProbabilisticSequential": [[139, "safeprobabilisticsequential"]], "SafeSequential": [[140, "safesequential"]], "ValueOperator": [[141, "valueoperator"]], "WorldModelWrapper": [[142, "worldmodelwrapper"]], "DistributionalQValueHook": [[143, "distributionalqvaluehook"]], "QValueHook": [[144, "qvaluehook"]], "ensure_tensordict_compatible": [[145, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[146, "is-tensordict-compatible"]], "biased_softplus": [[147, "biased-softplus"]], "inv_softplus": [[148, "inv-softplus"]], "mappings": [[149, "mappings"]], "A2CLoss": [[150, "a2closs"]], "ClipPPOLoss": [[151, "clipppoloss"]], "DDPGLoss": [[152, "ddpgloss"]], "DQNLoss": [[153, "dqnloss"]], "DistributionalDQNLoss": [[154, "distributionaldqnloss"]], "DreamerActorLoss": [[155, "dreameractorloss"]], "DreamerModelLoss": [[156, "dreamermodelloss"]], "DreamerValueLoss": [[157, "dreamervalueloss"]], "HardUpdate": [[158, "hardupdate"]], "KLPENPPOLoss": [[159, "klpenppoloss"]], "PPOLoss": [[160, "ppoloss"]], "REDQLoss": [[161, "redqloss"]], "ReinforceLoss": [[162, "reinforceloss"]], "SACLoss": [[163, "sacloss"]], "SoftUpdate": [[164, "softupdate"]], "distance_loss": [[165, "distance-loss"]], "hold_out_net": [[166, "hold-out-net"]], "hold_out_params": [[167, "hold-out-params"]], "next_state_value": [[168, "next-state-value"]], "GAE": [[169, "gae"]], "TDEstimate": [[170, "tdestimate"]], "TDLambdaEstimate": [[171, "tdlambdaestimate"]], "generalized_advantage_estimate": [[172, "generalized-advantage-estimate"]], "td_advantage_estimate": [[173, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[174, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[175, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[176, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[177, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[178, "vec-td-lambda-return-estimate"]], "TensorDictRecorder": [[179, "tensordictrecorder"]], "VideoRecorder": [[180, "videorecorder"]], "CSVLogger": [[181, "csvlogger"]], "Logger": [[182, "logger"]], "MLFlowLogger": [[183, "mlflowlogger"]], "TensorboardLogger": [[184, "tensorboardlogger"]], "WandbLogger": [[185, "wandblogger"]], "generate_exp_name": [[186, "generate-exp-name"]], "get_logger": [[187, "get-logger"]], "BatchSubSampler": [[188, "batchsubsampler"]], "ClearCudaCache": [[189, "clearcudacache"]], "CountFramesLog": [[190, "countframeslog"]], "LogReward": [[191, "logreward"]], "OptimizerHook": [[192, "optimizerhook"]], "Recorder": [[193, "recorder"]], "RewardNormalizer": [[194, "rewardnormalizer"]], "SelectKeys": [[195, "selectkeys"]], "Trainer": [[196, "trainer"]], "UpdateWeights": [[197, "updateweights"]], "correct_for_frame_skip": [[198, "correct-for-frame-skip"]], "get_stats_random_rollout": [[199, "get-stats-random-rollout"]], "make_a2c_loss": [[200, "make-a2c-loss"]], "make_a2c_model": [[201, "make-a2c-model"]], "make_collector_offpolicy": [[202, "make-collector-offpolicy"]], "make_collector_onpolicy": [[203, "make-collector-onpolicy"]], "make_ddpg_actor": [[204, "make-ddpg-actor"]], "make_ddpg_loss": [[205, "make-ddpg-loss"]], "make_dqn_actor": [[206, "make-dqn-actor"]], "make_dqn_loss": [[207, "make-dqn-loss"]], "make_ppo_loss": [[208, "make-ppo-loss"]], "make_ppo_model": [[209, "make-ppo-model"]], "make_redq_loss": [[210, "make-redq-loss"]], "make_redq_model": [[211, "make-redq-model"]], "make_replay_buffer": [[212, "make-replay-buffer"]], "make_sac_loss": [[213, "make-sac-loss"]], "make_sac_model": [[214, "make-sac-model"]], "make_target_updater": [[215, "make-target-updater"]], "make_trainer": [[216, "make-trainer"]], "parallel_env_constructor": [[217, "parallel-env-constructor"]], "sync_async_collector": [[218, "sync-async-collector"]], "sync_sync_collector": [[219, "sync-sync-collector"]], "transformed_env_constructor": [[220, "transformed-env-constructor"]], "README Tutos": [[221, "readme-tutos"], [230, "readme-tutos"]], "API Reference": [[222, "api-reference"]], "Contributing": [[223, "contributing"], [237, "contributing"]], "Contents:": [[223, null]], "torchrl.modules package": [[224, "torchrl-modules-package"]], "TensorDict modules": [[224, "tensordict-modules"]], "Hooks": [[224, "hooks"]], "Models": [[224, "models"], [237, "models"]], "Exploration": [[224, "exploration"]], "Planners": [[224, "planners"]], "Distributions": [[224, "distributions"]], "torchrl.objectives package": [[225, "torchrl-objectives-package"]], "DQN": [[225, "dqn"]], "DDPG": [[225, "ddpg"]], "SAC": [[225, "sac"]], "REDQ": [[225, "redq"]], "PPO": [[225, "ppo"]], "A2C": [[225, "a2c"]], "Reinforce": [[225, "reinforce"]], "Dreamer": [[225, "dreamer"]], "Returns": [[225, "returns"]], "torchrl.trainers package": [[226, "torchrl-trainers-package"]], "Checkpointing": [[226, "checkpointing"]], "Trainer and hooks": [[226, "trainer-and-hooks"]], "Builders": [[226, "builders"]], "Loggers": [[226, "loggers"]], "torchrl._utils package": [[227, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[228, "coding-ddpg-using-torchrl"]], "Environment": [[228, "environment"]], "Parallel execution": [[228, "parallel-execution"]], "Normalization of the observations": [[228, "normalization-of-the-observations"]], "Building the model": [[228, "building-the-model"]], "Evaluator: building your recorder object": [[228, "evaluator-building-your-recorder-object"]], "Replay buffer": [[228, "replay-buffer"]], "Hyperparameters": [[228, "hyperparameters"], [229, "hyperparameters"]], "Initialization": [[228, "initialization"]], "Data collector": [[228, "data-collector"]], "Time to train the policy!": [[228, "time-to-train-the-policy"]], "Experiment results": [[228, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[228, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[229, "coding-a-pixel-based-dqn-using-torchrl"]], "Building the environment": [[229, "building-the-environment"]], "The problem": [[229, "the-problem"]], "Building the model (Deep Q-network)": [[229, "building-the-model-deep-q-network"]], "Regular DQN": [[229, "regular-dqn"]], "Training loop": [[229, "training-loop"], [229, "id1"]], "TD-lambda": [[229, "td-lambda"]], "Conclusion and possible improvements": [[229, "conclusion-and-possible-improvements"]], "Task-specific policy in multi-task environments": [[231, "task-specific-policy-in-multi-task-environments"]], "Policy": [[231, "policy"]], "Executing diverse tasks in parallel": [[231, "executing-diverse-tasks-in-parallel"]], "Rollout": [[231, "rollout"]], "Using pretrained models": [[232, "using-pretrained-models"]], "Computation times": [[233, "computation-times"]], "TensorDictModule": [[234, "tensordictmodule"]], "TensorDictModule by examples": [[234, "tensordictmodule-by-examples"]], "Example 1: Simple usage": [[234, "example-1-simple-usage"]], "Example 2: Multiple inputs": [[234, "example-2-multiple-inputs"]], "Example 3: Multiple outputs": [[234, "example-3-multiple-outputs"]], "Example 4: Combining multiple TensorDictModule with TensorDictSequential": [[234, "example-4-combining-multiple-tensordictmodule-with-tensordictsequential"]], "Example 5: Compatibility with functorch": [[234, "example-5-compatibility-with-functorch"]], "Do\u2019s and don\u2019t with TensorDictModule": [[234, "do-s-and-don-t-with-tensordictmodule"]], "ProbabilisticTensorDictModule": [[234, "probabilistictensordictmodule"]], "Showcase: Implementing a transformer using TensorDictModule": [[234, "showcase-implementing-a-transformer-using-tensordictmodule"]], "Benchmarking": [[234, "benchmarking"]], "TensorDict": [[235, "tensordict"], [237, "tensordict"]], "Improving the modularity of codes": [[235, "improving-the-modularity-of-codes"]], "Can\u2019t I do this with a python dict?": [[235, "can-t-i-do-this-with-a-python-dict"]], "TensorDict structure": [[235, "tensordict-structure"]], "TensorDict Dictionary Features": [[235, "tensordict-dictionary-features"]], "get(key)": [[235, "get-key"]], "set(key, value)": [[235, "set-key-value"]], "keys()": [[235, "keys"]], "values()": [[235, "values"]], "update(tensordict_or_dict)": [[235, "update-tensordict-or-dict"]], "del": [[235, "del"]], "TensorDict tensor features": [[235, "tensordict-tensor-features"]], "Batch size": [[235, "batch-size"]], "Devices": [[235, "devices"]], "Memory sharing via physical memory usage": [[235, "memory-sharing-via-physical-memory-usage"]], "Tensor operations": [[235, "tensor-operations"]], "TorchRL envs": [[236, "torchrl-envs"]], "Gym environments": [[236, "gym-environments"]], "Env Specs": [[236, "env-specs"]], "Seeding, resetting and steps": [[236, "seeding-resetting-and-steps"]], "Rollouts": [[236, "rollouts"]], "frame_skip": [[236, "frame-skip"]], "Rendering": [[236, "rendering"]], "DeepMind Control environments": [[236, "deepmind-control-environments"]], "Transforming envs": [[236, "transforming-envs"]], "Environment device": [[236, "environment-device"]], "Running environments in parallel": [[236, "running-environments-in-parallel"]], "Closing parallel environments": [[236, "closing-parallel-environments"]], "Seeding": [[236, "seeding"]], "Accessing environment attributes": [[236, "accessing-environment-attributes"]], "kwargs for parallel environments": [[236, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[236, "transforming-parallel-environments"]], "Introduction to TorchRL": [[237, "introduction-to-torchrl"]], "Data": [[237, "data"]], "Replay buffers": [[237, "replay-buffers"]], "Envs": [[237, "envs"]], "Changing environments config": [[237, "changing-environments-config"]], "Vectorized Environments": [[237, "vectorized-environments"]], "Modules": [[237, "modules"]], "TensorDictModules": [[237, "tensordictmodules"]], "Sequences of Modules": [[237, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[237, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[237, "specialized-classes"]], "Using Environments and Modules": [[237, "using-environments-and-modules"]], "Objectives": [[237, "objectives"]], "State of the Library": [[237, "state-of-the-library"]], "Installing the Library": [[237, "installing-the-library"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors.collectors)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors.collectors)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "randompolicy (class in torchrl.collectors.collectors)": [[13, "torchrl.collectors.collectors.RandomPolicy"]], "syncdatacollector (class in torchrl.collectors.collectors)": [[14, "torchrl.collectors.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.syncdatacollector method)": [[14, "torchrl.collectors.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors.collectors)": [[15, "torchrl.collectors.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.collectors.asyncdatacollector method)": [[15, "torchrl.collectors.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[16, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[17, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "expand() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.expand"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[17, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[18, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.encode"]], "expand() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.expand"]], "index() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[18, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[19, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.encode"]], "expand() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.expand"]], "index() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[19, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[20, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.encode"]], "expand() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.expand"]], "index() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[20, "torchrl.data.DiscreteTensorSpec.zero"]], "multidiscretetensorspec (class in torchrl.data)": [[21, "torchrl.data.MultiDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.expand"]], "index() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.project"]], "rand() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multidiscretetensorspec method)": [[21, "torchrl.data.MultiDiscreteTensorSpec.zero"]], "multionehotdiscretetensorspec (class in torchrl.data)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multionehotdiscretetensorspec method)": [[22, "torchrl.data.MultiOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[23, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[23, "torchrl.data.MultiStep.zero_grad"]], "onehotdiscretetensorspec (class in torchrl.data)": [[24, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "expand() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.expand"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[24, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[25, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[25, "torchrl.data.PrioritizedReplayBuffer.sample"]], "replaybuffer (class in torchrl.data)": [[26, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.add"]], "append_transform() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replaybuffer method)": [[26, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[27, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data)": [[28, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[28, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[29, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.encode"]], "expand() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.expand"]], "index() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[29, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[30, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "expand() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.expand"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[30, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "unboundeddiscretetensorspec (class in torchrl.data)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.encode"]], "expand() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.expand"]], "index() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.index"]], "is_in() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.is_in"]], "project() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.project"]], "rand() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.unboundeddiscretetensorspec method)": [[31, "torchrl.data.UnboundedDiscreteTensorSpec.zero"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[32, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[32, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[33, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[35, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[35, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[36, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[36, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[37, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[38, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[40, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[40, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[40, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[41, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[41, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[41, "id0"], [41, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[41, "id1"], [41, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[41, "id2"], [41, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[41, "id3"], [41, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[41, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[41, "id4"], [41, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.zero_grad"]], "envcreator (class in torchrl.envs)": [[42, "torchrl.envs.EnvCreator"]], "envmetadata (class in torchrl.envs)": [[43, "torchrl.envs.EnvMetaData"]], "gymlikeenv (class in torchrl.envs)": [[44, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[44, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[44, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[45, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[45, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[45, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[45, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[45, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[45, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[46, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[46, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[46, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[46, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[47, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[47, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[47, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[47, "torchrl.envs.SerialEnv.zero_grad"]], "specs (class in torchrl.envs)": [[48, "torchrl.envs.Specs"]], "build_tensordict() (torchrl.envs.specs method)": [[48, "torchrl.envs.Specs.build_tensordict"]], "braxenv() (in module torchrl.envs.libs.brax)": [[49, "torchrl.envs.libs.brax.BraxEnv"]], "braxwrapper() (in module torchrl.envs.libs.brax)": [[50, "torchrl.envs.libs.brax.BraxWrapper"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[51, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[52, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[53, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[54, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[55, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[56, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[57, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "vmasenv() (in module torchrl.envs.libs.vmas)": [[58, "torchrl.envs.libs.vmas.VmasEnv"]], "vmaswrapper() (in module torchrl.envs.libs.vmas)": [[59, "torchrl.envs.libs.vmas.VmasWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[60, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[61, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[62, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[62, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[63, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[64, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[65, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[65, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[65, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[65, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[65, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[65, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "discreteactionprojection (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.DiscreteActionProjection"]], "doubletofloat (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[67, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[67, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[67, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "excludetransform (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.ExcludeTransform"]], "reset() (torchrl.envs.transforms.excludetransform method)": [[68, "torchrl.envs.transforms.ExcludeTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.excludetransform method)": [[68, "torchrl.envs.transforms.ExcludeTransform.transform_observation_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[70, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "frameskiptransform (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.FrameSkipTransform"]], "grayscale (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[72, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[73, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[74, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[74, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.R3MTransform"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[77, "torchrl.envs.transforms.R3MTransform.to"]], "resize (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[78, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[79, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[80, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "rewardsum (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.RewardSum"]], "reset() (torchrl.envs.transforms.rewardsum method)": [[81, "torchrl.envs.transforms.RewardSum.reset"]], "transform_observation_spec() (torchrl.envs.transforms.rewardsum method)": [[81, "torchrl.envs.transforms.RewardSum.transform_observation_spec"]], "selecttransform (class in torchrl.envs.transforms)": [[82, "torchrl.envs.transforms.SelectTransform"]], "reset() (torchrl.envs.transforms.selecttransform method)": [[82, "torchrl.envs.transforms.SelectTransform.reset"]], "transform_observation_spec() (torchrl.envs.transforms.selecttransform method)": [[82, "torchrl.envs.transforms.SelectTransform.transform_observation_spec"]], "squeezetransform (class in torchrl.envs.transforms)": [[83, "torchrl.envs.transforms.SqueezeTransform"]], "forward() (torchrl.envs.transforms.squeezetransform method)": [[83, "torchrl.envs.transforms.SqueezeTransform.forward"]], "stepcounter (class in torchrl.envs.transforms)": [[84, "torchrl.envs.transforms.StepCounter"]], "reset() (torchrl.envs.transforms.stepcounter method)": [[84, "torchrl.envs.transforms.StepCounter.reset"]], "transform_observation_spec() (torchrl.envs.transforms.stepcounter method)": [[84, "torchrl.envs.transforms.StepCounter.transform_observation_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[85, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[85, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[85, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[85, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "timemaxpool (class in torchrl.envs.transforms)": [[86, "torchrl.envs.transforms.TimeMaxPool"]], "reset() (torchrl.envs.transforms.timemaxpool method)": [[86, "torchrl.envs.transforms.TimeMaxPool.reset"]], "transform_observation_spec() (torchrl.envs.transforms.timemaxpool method)": [[86, "torchrl.envs.transforms.TimeMaxPool.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[87, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[87, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[88, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[88, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[88, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[88, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[88, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[88, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[89, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[89, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[89, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[89, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[89, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[89, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[89, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[89, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[89, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[89, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[89, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[89, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[90, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[90, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[90, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[90, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[90, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[91, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[91, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[91, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[92, "torchrl.envs.transforms.VIPTransform"]], "to() (torchrl.envs.transforms.viptransform method)": [[92, "torchrl.envs.transforms.VIPTransform.to"]], "vecnorm (class in torchrl.envs.transforms)": [[93, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[93, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[93, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[93, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[93, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[94, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[94, "torchrl.envs.transforms.gSDENoise.reset"]], "check_env_specs() (in module torchrl.envs.utils)": [[95, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[96, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[97, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[98, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[99, "torchrl.envs.utils.step_mdp"]], "cemplanner (class in torchrl.modules)": [[100, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[100, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[101, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[101, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[102, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[102, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[103, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[103, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[104, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[104, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[105, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[105, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[106, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[106, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[106, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[106, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[106, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[106, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[107, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[107, "torchrl.modules.DistributionalDQNnet.forward"]], "dreameractor (class in torchrl.modules)": [[108, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[108, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[109, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[109, "torchrl.modules.DuelingCnnDQNet.forward"]], "independentnormal (class in torchrl.modules)": [[110, "torchrl.modules.IndependentNormal"]], "mode (torchrl.modules.independentnormal property)": [[110, "torchrl.modules.IndependentNormal.mode"]], "lstmnet (class in torchrl.modules)": [[111, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[111, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[112, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[112, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[113, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[113, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[113, "torchrl.modules.MPCPlannerBase.planning"]], "mppiplanner (class in torchrl.modules)": [[114, "torchrl.modules.MPPIPlanner"]], "planning() (torchrl.modules.mppiplanner method)": [[114, "torchrl.modules.MPPIPlanner.planning"]], "noisylazylinear (class in torchrl.modules)": [[115, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[115, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[116, "torchrl.modules.NoisyLinear"]], "normalparamwrapper (class in torchrl.modules)": [[117, "torchrl.modules.NormalParamWrapper"]], "forward() (torchrl.modules.normalparamwrapper method)": [[117, "torchrl.modules.NormalParamWrapper.forward"]], "obsdecoder (class in torchrl.modules)": [[118, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[118, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[119, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[119, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[120, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[120, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[120, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[120, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[120, "torchrl.modules.OneHotCategorical.sample"]], "rssmposterior (class in torchrl.modules)": [[121, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[121, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[122, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[122, "torchrl.modules.RSSMPrior.forward"]], "tanhdelta (class in torchrl.modules)": [[123, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[123, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[123, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[124, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[124, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[125, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[125, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[125, "torchrl.modules.TruncatedNormal.mode"]], "reset_noise (class in torchrl.modules)": [[126, "torchrl.modules.reset_noise"]], "actor (class in torchrl.modules.tensordict_module)": [[127, "torchrl.modules.tensordict_module.Actor"]], "actorcriticoperator (class in torchrl.modules.tensordict_module)": [[128, "torchrl.modules.tensordict_module.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[128, "torchrl.modules.tensordict_module.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticoperator method)": [[128, "torchrl.modules.tensordict_module.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules.tensordict_module)": [[129, "torchrl.modules.tensordict_module.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[129, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorcriticwrapper method)": [[129, "torchrl.modules.tensordict_module.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules.tensordict_module)": [[130, "torchrl.modules.tensordict_module.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[130, "torchrl.modules.tensordict_module.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.tensordict_module.actorvalueoperator method)": [[130, "torchrl.modules.tensordict_module.ActorValueOperator.get_value_operator"]], "additivegaussianwrapper (class in torchrl.modules.tensordict_module)": [[131, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper"]], "forward() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[131, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.forward"]], "step() (torchrl.modules.tensordict_module.additivegaussianwrapper method)": [[131, "torchrl.modules.tensordict_module.AdditiveGaussianWrapper.step"]], "distributionalqvalueactor (class in torchrl.modules.tensordict_module)": [[132, "torchrl.modules.tensordict_module.DistributionalQValueActor"]], "egreedywrapper (class in torchrl.modules.tensordict_module)": [[133, "torchrl.modules.tensordict_module.EGreedyWrapper"]], "forward() (torchrl.modules.tensordict_module.egreedywrapper method)": [[133, "torchrl.modules.tensordict_module.EGreedyWrapper.forward"]], "step() (torchrl.modules.tensordict_module.egreedywrapper method)": [[133, "torchrl.modules.tensordict_module.EGreedyWrapper.step"]], "ornsteinuhlenbeckprocesswrapper (class in torchrl.modules.tensordict_module)": [[134, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper"]], "forward() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[134, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.forward"]], "step() (torchrl.modules.tensordict_module.ornsteinuhlenbeckprocesswrapper method)": [[134, "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.step"]], "probabilisticactor (class in torchrl.modules.tensordict_module)": [[135, "torchrl.modules.tensordict_module.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules.tensordict_module)": [[136, "torchrl.modules.tensordict_module.QValueActor"]], "safemodule (class in torchrl.modules.tensordict_module)": [[137, "torchrl.modules.tensordict_module.SafeModule"]], "random() (torchrl.modules.tensordict_module.safemodule method)": [[137, "torchrl.modules.tensordict_module.SafeModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safemodule method)": [[137, "torchrl.modules.tensordict_module.SafeModule.random_sample"]], "to() (torchrl.modules.tensordict_module.safemodule method)": [[137, "torchrl.modules.tensordict_module.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules.tensordict_module)": [[138, "torchrl.modules.tensordict_module.SafeProbabilisticModule"]], "random() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[138, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.tensordict_module.safeprobabilisticmodule method)": [[138, "torchrl.modules.tensordict_module.SafeProbabilisticModule.random_sample"]], "safeprobabilisticsequential (class in torchrl.modules.tensordict_module)": [[139, "torchrl.modules.tensordict_module.SafeProbabilisticSequential"]], "safesequential (class in torchrl.modules.tensordict_module)": [[140, "torchrl.modules.tensordict_module.SafeSequential"]], "valueoperator (class in torchrl.modules.tensordict_module)": [[141, "torchrl.modules.tensordict_module.ValueOperator"]], "worldmodelwrapper (class in torchrl.modules.tensordict_module)": [[142, "torchrl.modules.tensordict_module.WorldModelWrapper"]], "get_reward_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[142, "torchrl.modules.tensordict_module.WorldModelWrapper.get_reward_operator"]], "get_transition_model_operator() (torchrl.modules.tensordict_module.worldmodelwrapper method)": [[142, "torchrl.modules.tensordict_module.WorldModelWrapper.get_transition_model_operator"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[143, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[144, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[145, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[146, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[147, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[147, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[148, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[149, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[150, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[150, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[151, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[151, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[152, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[152, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[153, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[153, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[154, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[154, "torchrl.objectives.DistributionalDQNLoss.forward"]], "dreameractorloss (class in torchrl.objectives)": [[155, "torchrl.objectives.DreamerActorLoss"]], "forward() (torchrl.objectives.dreameractorloss method)": [[155, "torchrl.objectives.DreamerActorLoss.forward"]], "dreamermodelloss (class in torchrl.objectives)": [[156, "torchrl.objectives.DreamerModelLoss"]], "forward() (torchrl.objectives.dreamermodelloss method)": [[156, "torchrl.objectives.DreamerModelLoss.forward"]], "dreamervalueloss (class in torchrl.objectives)": [[157, "torchrl.objectives.DreamerValueLoss"]], "forward() (torchrl.objectives.dreamervalueloss method)": [[157, "torchrl.objectives.DreamerValueLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[158, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[159, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[159, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[160, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[160, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[161, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[161, "torchrl.objectives.REDQLoss.forward"]], "reinforceloss (class in torchrl.objectives)": [[162, "torchrl.objectives.ReinforceLoss"]], "forward() (torchrl.objectives.reinforceloss method)": [[162, "torchrl.objectives.ReinforceLoss.forward"]], "sacloss (class in torchrl.objectives)": [[163, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[163, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[164, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[165, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[166, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[167, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[168, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[169, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[169, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[170, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[170, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[171, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[171, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[172, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[173, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[174, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[175, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[176, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[177, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[178, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "tensordictrecorder() (in module torchrl.record)": [[179, "torchrl.record.TensorDictRecorder"]], "videorecorder() (in module torchrl.record)": [[180, "torchrl.record.VideoRecorder"]], "csvlogger() (in module torchrl.record.loggers)": [[181, "torchrl.record.loggers.CSVLogger"]], "logger() (in module torchrl.record.loggers)": [[182, "torchrl.record.loggers.Logger"]], "mlflowlogger() (in module torchrl.record.loggers)": [[183, "torchrl.record.loggers.MLFlowLogger"]], "tensorboardlogger() (in module torchrl.record.loggers)": [[184, "torchrl.record.loggers.TensorboardLogger"]], "wandblogger() (in module torchrl.record.loggers)": [[185, "torchrl.record.loggers.WandbLogger"]], "generate_exp_name() (in module torchrl.record.loggers)": [[186, "torchrl.record.loggers.generate_exp_name"]], "get_logger() (in module torchrl.record.loggers)": [[187, "torchrl.record.loggers.get_logger"]], "batchsubsampler (class in torchrl.trainers)": [[188, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[189, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[190, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[191, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[192, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[193, "torchrl.trainers.Recorder"]], "rewardnormalizer (class in torchrl.trainers)": [[194, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[195, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[196, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[197, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[198, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[199, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[200, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[201, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[202, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[203, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[204, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[205, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[206, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[207, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[208, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[209, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[210, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[211, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[212, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[213, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[214, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[215, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[216, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[217, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[218, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[219, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[220, "torchrl.trainers.helpers.transformed_env_constructor"]]}})